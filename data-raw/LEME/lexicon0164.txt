<leme no="164"> 

<page sig="x2r" no="162">
<section type="chapter 24">
<heading>
<f type="I">Cap. XXIIII.
The vse of the generall table.
</heading>
</page>

<page sig="x2v" no="163">
<f type="r">AS I promised before, so now I will knit vp this argument 
of right writing with a generall table, wherein I haue 
gathered the most of those words, which we common&shy;
lie vse in our hole speche. Which table I take to be verie proper 
to this purpos, and vpon sundrie causes. First for the confir&shy;
ming of my rules, with multitude of examples, which I proued 
with som few naie oft with som one, when I set them first 
down: a thing both plane, to enstruct a reader, & also pithie, to 
enforce a rule by vertew of number.

Secondlie, for the perfiting of <f type="I">proportion<f type="r">, a great officer in di&shy;
recting the pen, as being chefe marshall to set words in araie, 
according to their sounds. Which sounds bewraing themselues 
best in the last syllabs, as being therefor best hard, bycause theie 
ar last said, recomm<expan type="e+_">en</expan>d themselues therein to the rule of <f type="i">propor&shy;
tion<f type="r">, tho not without both nede, and hope of further help, for 
the first and midle syllabs, to haue their <f type="i">proportion<f type="r"> thereby full 
and sutable in all. Which help this table promiseth, as precise&shy;
lie examining the beginning of words by order of the letter, as 
<f type="i">proportion<f type="r"> sought out the ending thereof, by likenesse in sound. 
Which two syllabs, the first and last being certainlie known, if 
there be mo, then all be known . But if there be mo, where 
the extremities be certain, the midle maie be sene.

Thirdlie the <f type="i">enfranchised<f type="r"> words, which we borow of the fo&shy;
ren, being a great parcell of our ordinarie speche, bycause we 
deal so much with such matters, as enforce vs thereunto, while 
we vtter that which we learn, as theie do of whom we learn, not 
hauing of our selues to expresse that in speche, which we haue 
but of others to execute in dede: such a generall table is a con&shy;
uenient gide to deliuer them to our eies. Wherewith to cloie 
the rule of <f type="i">enfranchisment<f type="r">, where som few maie serue by waie 
of example, were either to duble them, if theie be in both, or to 
lame the table if theie be but in the rule: both great ouersights. 
Wherefor contenting the rule with sufficient number, to make 
it plane, I haue vsed the table for a common treasurie where to 
laie vp all.

Fourthlie the affinitie betwene the rule, which examineth the 
generall direction by particular proufs & the particular <emend err="poufs">proufs</emend>, 
which range themselues in order, by generall directi<expan type="o+_">on</expan>, is so near
</page>

<page sig="x3r" no="164">
& so great, as it cannot otherwise be, but that manie things will 
fall out in examining the table, which proues by particular, 
whereby the rules shalbe helpt: besides their confirming in na&shy;
tur of example: as the rules themselues, which direct in generall 
do offer that assurance, whereby the table shalbe staied, besides 
the sorting of particular words, into proportionat ranks.

Fiftlie and last, the generall table is a mean to help ignor<expan type="a+_">an</expan>ce, 
and a waie to ease cunning. For the ignorant man, which can&shy;
not iudge of sounds by finenesse of his ear, will soon discern 
forms by sharpnesse of his eie & quicklie finde out the vse of a 
table, tho he seldom fele the sense of a rule. And the skilfull m<expan type="a+_">an</expan> 
also, which can iudge of a rule, if he haue time to read it, in want 
of leisure to read, maie haue recourse to his table, and so satisfy 
the sudain, till conuenient time will giue him leaue to studie. 
The table therefor being a thing of such commoditie, to con&shy;
firm rules, to perfit <f type="i">proportion<f type="r">, to discouer <f type="i">enfranchisments<f type="r">, to 
supply all wants, to help ignorance, and to ease knowledge: 
I haue so framed it, I hope, both for store of words, and choice 
of notes, as it shall perform all this, whereunto it is said to be so 
profitable.

For the words, which concern the substance thereof: I haue 
gathered togither so manie of them both enfranchised and na&shy;
turall, as maie easilie direct our generall writing, either by&shy;
cause theie be the verie most of those words which we com&shy;
monlie vse, or bycause all other, whether not here expressed or 
not yet inuented, will conform themselues, to the presidencie of 
these. If my leisur wold haue serued, I wold haue sought out 
mo, but these maie seme enough, which both serue the thing, & 
discharge me. Who entending at the first to deal no lower, then 
the entrie to speche, vp<expan type="o+_">on</expan> great occasi<expan type="o+_">on</expan> haue bene forced further 
to deuise an Elementarie, a thing as different from my first pur&shy;
pos, as it is verie pertinent to the common profit.

For the notes, besides the beginning letter, which I haue cu&shy;
riouslie obserued, both to find out most words by that kinde of 
method, and withall to perform that, which is required in a ta&shy;
ble, to direct him that sekes by order of the letter, I haue had 
speciall regard to mine own rules, that both table & rule agr&euml;&shy;
ing in one, my labour thereby maie sooner win allowance.
</page>

<page sig="x3v" no="165">
Therefor when soeuer anie great cause of note doth offer it 
self, either in accent for <f type="I">distinction<f type="r">, or in change for <f type="I">propor&shy;
tion<f type="r">, or in strangenesse for <f type="I">deriuation<f type="r">, or in writing for <f type="I">enfran&shy;
chisment<f type="r">, or in propertie for <f type="I">custom<f type="r">, either in penning or pro&shy;
nouncing, bycause it reigneth in both : the accents ar set o&shy;
uer the consonants or vowells, which require <f type="I">distinction<f type="r">: the 
changing of <f type="I">proportion<f type="r">, the strangenesse of <f type="I">deriuation<f type="r">, the pro&shy;
pertie of <f type="I">custom<f type="r"> is presentlie noted: and the <f type="I">enfranchised<f type="r"> words 
be first set down in their naked and naturall colors, and after 
writen so as our cuntrie doth clothe them, and our <f type="I">custom<f type="r"> doth 
allow them.

This haue I don, and thus, which whether it be the right waie, 
to direct our writing or no: that I leaue to other mens iudge&shy;
ment, contenting my self with these two reasons. First bycause 
I se those writers, which haue trauelled in other tungs, for the 
right writing thereof, whose labor also hath taken good ef&shy;
fect, and euen at this daie doth gide all our studies, bycause 
their successe proueth the rightnesse of their waie, to haue 
cut this same course, and by examining ech syllab to haue 
certained all, not by rasing new characts, but by ruling old 
<f type="I">custom<f type="r">.

Second, bycause he which quite altereth the natur of such 
a thing, as is said to be corrupted, doth not amend the old falt 
but tendereth vs a new substance, as subiect to blame, as the 
former was, naie oftimes more, the deformitie thereof appear&shy;
ing in the face, and the infirmitie thereof not able to bear age, 
as the other did, in whose roum it cummeth. Whereas in dede 
in such a case, where the substance maie remain, tho som er&shy;
ror be stript, a good director will first sift the certain right from 
the supposed wrong, and in ruling them both call <f type="I">custom<f type="r"> 
to counsell, from whom the right came, as all men know, 
and by whom the wrong must be helpt, as theie that mark, 
maie se.

But not to tary long in a matter so plane, and so examined 
before, this is most trew, that long and waking <f type="I">custom<f type="r">, in the 
matter of speche, wherein she commandeth without vsurpa&shy;
tion, wherein she hath propertie without intrusion, and where&shy;
in she deals not without consideration, of force must haue hir
</page>

<page sig="x4r" no="166">
imperiall voyce, when the question is, what currant were best, 
for directing of the p<expan type="e+_">en</expan>. For that is no correction which wasteth 
the substance, but that washeth the accidents, and that in such 
sort, as the cuntrie <f type="I">custom<f type="r"> will best admit, vpon former ac&shy;
quaintance.

Thus much haue I don for the right writing of our English 
tung, desiring my cuntriemen to think well of my labor, and 
themselues to trauell in furnishing out the rest, which I can&shy;
not deal with, if theie like of that which I haue hitherto don: 
if not, I wold be glad to be directed my self by som president 
of another, which shall taste of iudgement.

Mine own course doth carie me quite another waie, from 
medling with such things, as this argument is: & yet not altogi&shy;
ther so, but that where good cause shall offer occasion, and fit 
circumstance shalbe answerable to such cause, I wilbe verie 
redie to pleasur mine own cuntrie, to the vtmost of my power, 
yea euen in the middest of anie foren learning: Tho my drift 
be such, as I maie sooner minister occasion of much matter 
to such as will dwell vpon particular discourse, then my self 
digresse from that plat, which is alredie laied, being more then 
enough, to occupy anie one.

It were a thing verie praiseworthie in my opinion, and 
no lesse profitable then praise worthie, if som one well lear&shy;
ned and as laborious a man, wold gather all the words 
which we vse in our English tung, whether naturall or in&shy;
corporate, out of all professions, as well learned as not, in&shy;
to one dictionarie, and besides the right writing, which is in&shy;
cident to the Alphabete, wold open vnto vs therein, both 
their naturall force, and their proper vse : that by his honest 
trauell we might be as able to iudge of our own tung, which 
we haue by rote, as we ar of others, which we learn by 
rule. The want whereof, is the onelie cause why, that 
verie manie men, being excellentlie well learned in foren 
speche, can hardlie discern what theie haue at home, still 
shooting fair, but oft missing far, hard censors ouer o&shy;
ther, ill executors themselues. For easie obtaining is e&shy;
nemie to iudgement, not onelie in words, and naturall 
speche, but in greater matters, and verie important. Aduised &
</page>

<page sig="x4v" no="167">
considerat cumming by, as it proues by those tungs, which we 
learn by Art, where time and trauell be the compaassing means, 
emplanteth in wits, both certaintie to rest on, & assurance to rise 
by. Our naturall tung cummeth on vs by hudle, and therefor 
hedelesse, foren language is labored, and therefor learned, the 
one still in vse and neuer will known, the other well known and 
verie seldom vsed. And yet continewall vse should enfer know<emend err="">&shy;</emend>
ledge, in a thing of such vse, as the naturall deliuerie of our 
minde and meaning is. And to saie the truth what reason is it, 
to be acquainted abrode, and a stranger at home? to know fo&shy;
ren tungs by rule, and our own but by rote? If all other men had 
ben so affected, to make much of the foren, and set light by 
their own, as we seme to do, we had neuer had these things, 
which we like of so much, we should neuer by comparing haue 
discerned the better. Theie proined their own speche, both to 
please themselues, and to set vs on edge: and why maie not we 
by following of their presidents be partakers of their praise? 
c<expan type="o+_">on</expan>sidering the thing which we ar to deal in, of it self is so good, 
& the presidents, which to follow, to be so manie & so plane: as 
we can neither alledge anie want for direction, ne yet basenesse 
of argum<expan type="e+_">en</expan>t, to diliuer vs from trauell. For the matter of speche 
is a thing well thought of, whether ye waie the words and the 
forces which theie haue, or the vttering thereof by p<expan type="e+_">en</expan> & voyce. 
Naturall nede vpon mere vse, commendeth the voyce, delite in 
mere vse commendeth fair speaking. And voluntarie nede vp&shy;
on more vse commendeth the pen, delite in more vse comm<expan type="e+_">en</expan>&shy;
deth fair writing. Which both ar so well estemed of, as there 
be particular Arts, verie cunninglie deuised to beautify them 
both. We nede not <emend err="toproue">to proue</emend> by <f type="i">Platoes Cratylus<f type="r">, or <f type="i">Aristotles<f type="r">
proposition as by best autorities, (tho men be suffici<expan type="e+_">en</expan>t to proue 
their own inuentions) that words be voluntarie, and appointed 
vpon cause, seing we haue better warrant. For euen God him&shy;
self, who brought the creatures, which he had made, vnto that 
first man, whom he had also made, that he might name them, 
according to their properties, doth planelie declare by his so 
doing, what a cunning thing it is to giue right names, and how 
necessarie it is, to know their forces, which he allredie giuen, 
bycause the word being knowen, which implyeth the proper&shy;
</page>

<page sig="y1r" no="169">
tie the thing is half known, whose propertie is emplyed. There&shy;
for the argum<expan type="e+_">en</expan>t of words, speche, & pen being so necessarie, & 
the trauelling in them being no lesse c<expan type="o+_">om</expan>mendable, he that will 
deal in that which I haue said, shall both help nede in others, 
& heap praise to himself, & yet do nothing without manifold 
presid<expan type="e+_">en</expan>t. For am<expan type="o+_">on</expan>g the Hebrewes, <f type="i">Ionas, Iudas, Kimchi<f type="r">, among 
the Grekes, <f type="i">Eustathius, Fauorine, Pollux<f type="r">, am<expan type="o+_">on</expan>g the Latins, <f type="i">Mar&shy;
cus Varro, Nonius Marcellus, Festus Pompeius<f type="r">, tho not these a&shy;
lone, nor in these tungs alone, endeuored themselues to do that 
in their tungs, which I wish for in ours, expounding their own 
words by their own language. The <f type="i">Italian<f type="r">, the <f type="i">Frenche<f type="r">, the 
<f type="i">Spanish<f type="r">, at this daie vse the like: naie theie go further, and make 
particular dictionaries euen to particular books, as <f type="i">Iohn Boccace<f type="r"> 
alone hath a dictionarie for himself in the Italian tung. Now if 
such like English wits, in whom both learning and labor do 
concur, wold do so much for our tung, as these and the like 
haue don for theirs, naie as euen learners haue don, for those 
same tungs, which theie haue gained by labor, as <f type="i">Stephanus, Pe&shy;
rot, Calepine<f type="r">, for the latin and others for other: we should then 
know what we both write and speak: we should then dis&shy;
cern the depth of their conceits, which either coined our own 
words, or incorporated the foren. Whereas at this daie: we be 
skillfull <emend err="abode">abrode</emend> and ignorant at home, wondring at others not 
waing our own. Thus much at this time c<expan type="o+_">on</expan>cerning these things, 
now must I to my table.
</section>
</page>

<page sig="y1v" no="170">
<section type="chapter 25">
<heading>
<f type="r">THE GENERALL TABLE.
<f type="i">CAP. XXV. 
</heading>

<wordgroup1 type="a" object="a"><alpha><f type="r">A.</alpha>

<wordentry type="h"><form lexeme="abay(n)"><f type="i">Abaie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abandon(v)"><f type="i">abandon.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abase(v)"><f type="i">abase.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abash(v)"><f type="i">abash.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abashment(n)"><f type="i">abashment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abate(v)"><f type="i">abate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abatement(n)"><f type="i">abatement.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abbacy(n)"><f type="i">abbacie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abbess(n)"><f type="i">abbesse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abbey(n)"><f type="i">abbie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abbot(n)"><f type="i">abbot.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abbreviate(v)"><f type="i">abbreuiate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abbreviation(n)"><f type="i">abbreuiation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abbridge(v)"><f type="i">abbridge.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abridgement(n)"><f type="i">abbridgement.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abridgest(v)"><f type="i"><emend err="abllridgest">abbridgest</emend>.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abrid'gst(v)"><f type="i">abbrid`gst. </form> <xpln><f type="r"><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="abridgedest(v)"><f type="i">abbridgeddest.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abridg'dst(v)"><f type="i">abbridg`dst. </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="abridged(v)"><f type="i">abbridged.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abridgd(v)"><f type="i">abbridgd. 
</form> <xpln><f type="r"> <class type="contraction">Contr.</class></xpln>
<note>
The g. in contraction conti&shy;
newing weak, from the 
qualifying .e.
</note>
</wordentry>

<wordentry type="h"><form lexeme="abbut(vn)"><f type="i">abbut.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abbutting(v)"><f type="i"><emend err="abbutting">abbutting</emend>.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abc(n)"><f type="i">abce.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abecedary(n)"><f type="i">abecedarie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abet(v)"><f type="i">abet.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abettor(n)"><f type="i">abettor.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abdicate(v)"><f type="i">abdicate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abhor(v)"><f type="i">abhor.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abhorrest(v)"><f type="i">abhorrest.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abhorst(v)"><f type="i">abhorst. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="abhorredest(v)"><f type="i">abhorreddest.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abhordst(v)"><f type="i">abhordst. </form> <xpln><f type="r"> <class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="abhorreth(v)"><f type="i">abhorreth.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abhorring(n)"><f type="i">abhorring.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abide(v)"><f type="i">abide.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abidst(v)"><f type="i">ab&iacute;dst. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="abide(v)"><f type="i">abid.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abidst(v)"><f type="i">ab&igrave;dst. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="abiden(v)"><f type="i">ab&igrave;den.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abject(v)"><f type="i">abiect.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ability(n)"><f type="i">abilitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abjure(v)"><f type="i">abiure.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abjuration(n)"><f type="i">abiuration.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="able(a)"><f type="i">able.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ableness(n)"><f type="i">ablenesse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abode(n)"><f type="i">abode.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abodest(v)"><f type="i">abodest.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abodst(v)"><f type="i">abodst. 
</form> <xpln><f type="r"><class type="contraction">Contr.</class>
The originall sound conti&shy;
newing in the Contract.</xpln></wordentry>

<wordentry type="h"><form lexeme="abolish(v)"><f type="i">ab&obreve;lish.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abolished(v)"><f type="i">abolished.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abolisht(v)"><f type="i">abolisht. </form> <xpln><f type="r"><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="abolishment(n)"><f type="i">abolishment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abominable(a)"><f type="i">abominable. 
</form> <xpln><f type="r"> <class type="borrowing">Enfr.</class></xpln>
<note>
Of omen without, h.
</note>
</wordentry>

<wordentry type="h"><form lexeme="abomination(n)"><f type="i">abomination.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="about(pp)"><f type="i">about.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abound(v)"><f type="i">abound.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="above(pp)"><f type="i">ab&ograve;ue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abricot(n)"><f type="i">abr&ibreve;cot.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abroad(a)"><f type="i">abrode.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abrogate(v)"><f type="i">abr&obreve;gate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abrogaest(v)"><f type="i">abrog&agrave;test.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abrogatst(v)"><f type="i">abrog&agrave;tst. </form> <xpln><f type="r"><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="absence(n)"><f type="i">absence.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absense(n)"><f type="i">absents.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absent(a)" lexeme="abs&eacute;nt(n)"><f type="i">abs&egrave;nt. abs&eacute;nt.</form> <xpln><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="absolve(v)"><f type="i">absolue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absolute(a)"><f type="i">absolute.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absolution(n)"><f type="i">absolution.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absolutely(adv)"><f type="i">absolutelie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absoluteness(n)"><f type="i">absolutenesse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abstain(v)"><f type="i">abstain.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abstinence(n)"><f type="i">abstinence.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abstinent(a)"><f type="i">abstinent.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abstinency(n)"><f type="i">abstinencie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abstract(n)"><f type="i">abstract.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absurd(a)"><f type="i">absurd.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absurdity(n)"><f type="i">absurditie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="absurdness(n)"><f type="i">absurdnesse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abundant(a)"><f type="i">abundant.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abundantly(a)"><f type="i">abundantlie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abundance(n)"><f type="i">abundance. </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abuse(v)"><f type="i">ab&ugrave;se. ab&uacute;se. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="abused(a)"><f type="i">ab&ugrave;sed.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abusd(a)"><f type="i">ab&uacute;sd.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aby(v)"><f type="i">aby.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="abying(n)"><f type="i">abying.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accent(n)"><f type="i">Accent.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accenting(n)"><f type="i">acc&ebreve;nting.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accept(v)"><f type="i">accept.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accepting(n)"><f type="i">accepting.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acceptable(a)"><f type="i">acceptable.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acceptance(n)"><f type="i">acceptance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acceptation(n)"><f type="i">acceptation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acception(n)"><f type="i">acception.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="access(n)"><f type="i">accesse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accessary(n)"><f type="i">accessarie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accessory(n)"><f type="i">accessorie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accessible(n)"><f type="i">accessible.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accession(n)"><f type="i">accession.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accidence(n)"><f type="i">accidence.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accidence(n)"><f type="i">accidences.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accidentary(a)"><f type="i">accidentarie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accident(n)"><f type="i">accident.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accident(n)"><f type="i">accidents.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accommodate(v)"><f type="i">accommodat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accompany(v)"><f type="i">accompanie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accompanying(n)"><f type="i">accompanying.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accomplish(v)"><f type="i">accomplish.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accomplishment(n)"><f type="i">accomplishment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accomplisht(v)"><f type="i">accomplisht. </form> <xpln><f type="r"><class type="contraction">Cont.
for.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="accomplished(v)"><f type="i">acc<expan type="o+_">om</expan>plished.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="account(n)"><f type="i">account.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accountant(n)"><f type="i">accountant.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accountable(n)"><f type="i">accountable.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accord(n)"><f type="i">accord.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="according(n)"><f type="i">according.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accordingly(adv)"><f type="i">accordinglie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acorn(n)"><f type="i">akecorn. </form> <xpln><f type="r">Of an ake, or
an oke.</xpln></wordentry>

<wordentry type="h"><form lexeme="accrue(v)"><f type="i">accrew. </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="accurse(v)"><f type="i">accurse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accursed(a)"><f type="i">accursed.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accuse(v)"><f type="i">acc&ugrave;se.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accusation(n)"><f type="i">acc&ugrave;sation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accusative(a)"><f type="i">accus&abreve;tiue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accusatory(a)"><f type="i">accusatorie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accustom(v)"><f type="i">accustom.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="accustomable(a)"><f type="i">accustom&abreve;ble.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ace(n)"><f type="i">ace.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ache(n)"><f type="i">ache.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="achiue(n)"><f type="i">achiue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acknowlege(n)"><f type="i">acknowlege.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acquaint(n)"><f type="i">acquaint.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acquaintance(n)"><f type="i">acquaintance.</form> <xpln></xpln></wordentry>
</page>

<page sig="y2r" no="171">
<wordentry type="h"><form lexeme="acquite(n)"><f type="i">acquite.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acquit(n)"><f type="i">acquit.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acquittance(n)"><f type="i">acquittance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="act(n)"><f type="i">act.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="action(n)"><f type="i">action.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="active(a)"><f type="i">actiue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="activity(n)"><f type="i">act&igrave;uitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="actual(a)"><f type="i">actuall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="actuary(n)"><f type="i">act&ugrave;arie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="add(v)"><f type="i">Ad.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adamant(a)"><f type="i">ad&agrave;mant.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="added(a)"><f type="i">added.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adder(n)"><f type="i">adder.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="addict(n)"><f type="i">addict.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adze(n)"><f type="i">add&ibreve;s.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="address(n)"><f type="i">addresse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adjacent(a)"><f type="i">adiacent.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adjective(n)"><f type="i"><emend err="adiectine">adiectiue</emend>.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adjure(v)"><f type="i">adiure.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adjurement(n)"><f type="i">adiurement.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adjurd(v)"><f type="i">adiurd. </form> <xpln><f type="r"><class type="contraction">Contrac.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="adjourn(n)"><f type="i">adiourn. </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="adjournment(n)"><f type="i">adiournment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adjournth(v)"><f type="i">adiournth. </form> <xpln><f type="r"><class type="contraction">Con</class></xpln></wordentry>

<wordentry type="h"><form lexeme="addle(v)"><f type="i">adl&egrave;.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admeasurement(n)"><f type="i">admeasurment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="administer(v)"><f type="i">administer.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="administration(n)"><f type="i">administration.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="administrator(n)"><f type="i">administrator.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admire(v)"><f type="i">admire.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admiration(n)"><f type="i">admiration.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admiral(n)"><f type="i">admirall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admiralty(n)"><f type="i">admiraltie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admissary(n)"><f type="i">admissarie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admission(n)"><f type="i">admission.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admit(v)"><f type="i">admit.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admittance(n)"><f type="i">admittance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admixtion(n)"><f type="i">admixtion.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admonish(v)"><f type="i">admonish.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="admonition(n)"><f type="i">admonition.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adnihilate(v)"><f type="i">adnihilate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ado(a)"><f type="i">ad&ograve;. 
a-d&oacute;.  </form> <xpln><f type="r"><class type="accent">Distinct.</class> </xpln></wordentry>

<wordentry type="h"><form lexeme="adieu(ex)" lexeme="adew(n)"><f type="i">adiew. 
adew. </form> <xpln><f type="r"> <class type="borrowing"><emend err="Enfrauchis.">Enfranchis.</emend></class></xpln></wordentry>

<wordentry type="h"><form lexeme="adopt(v)"><f type="i">adopt.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adoption(n)"><f type="i">adoption.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adore(v)"><f type="i">adore.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adoration(n)"><f type="i">adoration.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adorn(v)"><f type="i">adorn.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adorned(a)"><f type="i">adorned.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advance(v)"><f type="i">aduance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advancement(n)"><f type="i">aduancement.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advantage(n)"><f type="i">aduantage.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advantagious(a)"><f type="i">aduantagious.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adventure(n)"><f type="i">aduentur.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adventurous(n)"><f type="i">aduent&ubreve;rous.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adverb(n)"><f type="i">aduerb.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adverbial(a)"><f type="i">aduerbiall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adverse(a)"><f type="i">aduerse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adversary(n)"><f type="i">aduersarie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adversity(n)"><f type="i">aduersitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advert(n)"><f type="i">aduert&ibreve;s.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advertisement(n)"><f type="i">auertis-ment. </form> <xpln><f type="r"><class type="accent">De.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="advise(v)"><f type="i">adu&iacute;se. 
adu&igrave;se. </form> <xpln><f type="r"> <class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="advised(a)"><f type="i">aduised.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advisedly(n)"><f type="i">aduisedlie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adulation(n)"><f type="i">adulation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="adultery(n)" lexeme="adulteror(n)" lexeme="aduoutrer(n)" lexeme="aduoutrie(n)"><f type="i">adulterie.
adulteror.
aduoutrer. 
aduoutrie. </form> <xpln><f type="r"><class type="borrowing"> Enfr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="adulterate(v)"><f type="i">adulterate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advocate(v)"><f type="i">aduocate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="advocation(n)" lexeme="advowson(n)"><f type="i">aduocati<expan type="o+_">on</expan>. 
aduouson. </form> <xpln><f type="r"> <class type="borrowing">Enfr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="advow(v)"><f type="i">aduow.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affair(n)"><f type="i">Afaire. 
affaires. </form> <xpln><f type="r"><class type="borrowing">Enfranc,</class></xpln></wordentry>

<wordentry type="h"><form lexeme="afeard(a)"><f type="i">aferd.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affable(a)"><f type="i">aff&abreve;ble.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affability(n)"><f type="i">affabilitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affect(v)"><f type="i">affect.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affection(n)"><f type="i">affection.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affectate(v)"><f type="i">affectate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affectation(n)"><f type="i">affectation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affinity(n)"><f type="i">affinitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affirm(v)"><f type="i">affirm.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affirmation(n)"><f type="i">affirmation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affirmative(n)"><f type="i">affirmatiue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affirmance(n)"><f type="i">affirmance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="afflict(v)"><f type="i">afflict.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affliction(n)"><f type="i">affliction.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="afford(v)"><f type="i">afford.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affy(v)"><f type="i">affy.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affiance(n)"><f type="i">affyance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affianced(a)"><f type="i">affyanced.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="affray(n)"><f type="i">afraie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="afraid(a)"><f type="i">afraid. </form> <xpln><f type="r"><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="afraied(a)"><f type="i">afraied.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="afresh(a)"><f type="i">afresh.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="after(pp)"><f type="i">after.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="afterdeal(n)"><f type="i">aft&ebreve;rdeal.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="afterward(adv)"><f type="i">aft&ebreve;rward.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="afterwit(n)"><f type="i">aft&ebreve;rwit.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="afterwise(n)"><f type="i">afterwise.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="again(adv)"><f type="i">Again.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="against(pp)"><f type="i">against.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eager(n)"><f type="i">agar.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agast(a)"><f type="i">ag&aacute;st.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="age(n)"><f type="i">age.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aged(a)"><f type="i">aged.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agent(n)"><f type="i">agent.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ague(n)"><f type="i">ag&eacute;w.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aguish(a)"><f type="i">agewish.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aggravate(a)"><f type="i">aggrauate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aggravation(n)"><f type="i">aggrauation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aught(n)"><f type="i">&agrave;ght.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agility(n)"><f type="i">agilitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aglet(n)"><f type="i">aglet.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agnail(n)"><f type="i">agnail.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ago(adv)"><f type="i">ago.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agony(n)"><f type="i">agonie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agreat(adv)"><f type="i">agreat.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agree(v)"><f type="i">agr&eacute;.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agreeable(a)"><f type="i">agreable.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agreement(n)"><f type="i">agr&eacute;ment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agrees(v)"><f type="i">agr&eacute;es.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="agrieved(a)"><f type="i">agr&eacute;ued.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ah(ex)"><f type="i">Ah.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aid(n)"><f type="i">Aid.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ail(v)"><f type="i">ail.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ails(v)"><f type="i">ails.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ailwood(n)"><f type="i">ailwood.</form> <xpln></xpln>
<lemenote>Not in OED: see "ail"</lemenote></wordentry>

<wordentry type="h"><form lexeme="amount(n)"><f type="i">amount.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="air(n)"><f type="i">air.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ache(n)"><f type="i">Ake.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="acre(n)"><f type="i">aker.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aching(n)"><f type="i">aking. 
a-king. </form> <xpln><f type="r"><class type="compound">Compos.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="acheth(v)"><f type="i">aketh. 
a-kith. </form> <xpln><f type="r"><class type="compound">Comp. i. 
quik.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="akin(a)"><f type="i">a-kin.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alabaster(n)"><f type="i">Alabaster.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alate(adv)"><f type="i">alate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alacrity(n)"><f type="i">alacritie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alarm(n)"><f type="i">al-arm. </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="helas(ex)" lexeme="alas(ex)"><f type="i">Helas. 
alas. </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="alb(n)"><f type="i">alb.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="albeit(c)"><f type="i">albeit.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alder tree(n)"><f type="i">alder tr&eacute;.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alderman(n)"><f type="i">alderman.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aldermanbery(n)"><f type="i">aldermanb&egrave;rie.</form> <xpln></xpln>
<lemenote>Not in OED.</lemenote></wordentry>

<wordentry type="h"><form lexeme="ale(n)"><f type="i">ale.</form> <xpln></xpln></wordentry>
</page>

<page sig="y2v" no="172">
<wordentry type="h"><form lexeme="alehouse(n)"><f type="i">alehouse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alepot(n)"><f type="i">alepot.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alepoll(n)"><f type="i">alepoll.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alestake(n)"><f type="i">alestake.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aleworm(n)"><f type="i">aleworm.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alength(adv)"><f type="i">alength.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elegant(a)"><f type="i">alegant.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alien(n)"><f type="i">alien.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alienation(n)"><f type="i">alienation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aliened(a)"><f type="i">ali&ebreve;ned.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aliend(a)"><f type="i">ali&ebreve;nd. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="alienate(v)"><f type="i">alienate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allice(n)"><f type="i">alice.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alce(n)"><f type="i">alce. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="alike(a)"><f type="i">alike.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alive(a)"><f type="i">aliue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="all(a)"><f type="i">all.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allin(n)"><f type="i">allin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alth&oacute;ugh(n)"><f type="i">alth&oacute;ugh.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alwaie(n)"><f type="i">alwaie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allmost(n)"><f type="i">allmost.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alnage(n)"><f type="i">alnage.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alnager(n)"><f type="i">alnager.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alyne(v)" lexeme="aun(n)"><f type="i">aln. 
aun. </form> <xpln></xpln>
<lemenote>uncertain</lemenote></wordentry>

<wordentry type="h"><form lexeme="all-hail(n)"><f type="i">alhail.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alphabet(n)"><f type="i">alphabet.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allege(v)"><f type="i">allege.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allegory(n)"><f type="i">allegorie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allegorical(a)"><f type="i">allegoricall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allegiance(n)"><f type="i">allegiance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allegation(n)"><f type="i">allegation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ally(n)"><f type="i">allie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allot(vn)"><f type="i">allote.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allotment(n)"><f type="i">allotement.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allow(v)"><f type="i">allow.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allowance(n)"><f type="i">allowance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allure(n)"><f type="i">allure.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="allurement(n)"><f type="i">allurement.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ally(n)"><f type="i">ally.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alliance(n)"><f type="i">allyance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="almanac(n)"><f type="i">almanak.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambry(n)" lexeme="aumrie(n)"><f type="i">almarie. 
aumrie. </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="alms(n)"><f type="i">almesse. 
aums.  </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="almoner(n)" lexeme="amner(n)"><f type="i">almoner. 
amner. </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="aloft(a)"><f type="i">aloft.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alum(n)"><f type="i">&abreve;lom.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alone(a)"><f type="i">alone.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aloneness(n)"><f type="i">al&oacute;nesse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="along(pp)"><f type="i">along.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aloud(a)"><f type="i">aloud.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aloof(a)"><f type="i">alouf.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alter(v)"><f type="i">alter.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="alteration(n)"><f type="i">alteration.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="altercation(n)"><f type="i">altercation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="am(v)"><f type="i">Am.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aim(n)"><f type="i">ame.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amaze(v)"><f type="i">amase.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amazed(a)"><f type="i">amased.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amber(n)"><f type="i">amber.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambergrace(n)"><f type="i">ambergreace.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambition(n)"><f type="i">ambition.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambitious(a)"><f type="i">ambitious.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambiguity(n)"><f type="i">ambiguitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambiguous(a)"><f type="i">ambiguous.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amble(v)"><f type="i">amble.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amen(ex)"><f type="i">amen.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amend(v)"><f type="i">amend.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amends(n)"><f type="i">amends.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amendment(n)"><f type="i">amendment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amerce(v)"><f type="i">amerce.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amercement(n)"><f type="i">amercement.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amiable(a)"><f type="i">amiable.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amiability(n)"><f type="i">amiabilitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amice(n)"><f type="i">am&ibreve;s.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amiss(adv)"><f type="i">amisse. </form> <xpln><f type="r"><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="amity(n)"><f type="i">amitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="among(pp)"><f type="i">among.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amongst(pp)"><f type="i">amongst.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amorous(a)"><f type="i">amorous.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ample(a)"><f type="i">ample.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amplify(v)"><f type="i">amplify.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="amplification(n)"><f type="i">amplification.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="an(d)"><f type="i">An.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="one(n)"><f type="i">ane.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anatomy(n)"><f type="i">anatomie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anatomical(a)"><f type="i">anatomicall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anchovy(n)"><f type="i">anchoue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ancient(a)"><f type="i">ancient.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ancienty(n)"><f type="i">ancientie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ankle(n)"><f type="i">ancle.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ancome(n)"><f type="i">ancom.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="and(c)"><f type="i">and.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="andiron(n)"><f type="i">andiron.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anneal(v)"><f type="i">aneal.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anger(n)"><f type="i">an`ger.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="angel(n)"><f type="i">angell.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="angina(n)"><f type="i">angine.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="angle(n)"><f type="i">angle.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="angler(n)"><f type="i">angler.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="angerly(adv)"><f type="i">angerlie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="angry(a)"><f type="i">angrie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="angrylike(a)"><f type="i">angrilike.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anguish(v)"><f type="i">anguish.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anchor(n)"><f type="i">anchor. 
anker. </form> <xpln><f type="r"><class type="borrowing">Enfranch.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="one(n)"><f type="i">ane.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anise seed(n)"><f type="i">annis sede.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="animate(v)"><f type="i">animate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anniversary(n)"><f type="i">anniuersarie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="annuity(n)"><f type="i">annuitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="annual(a)"><f type="i">annuall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="annoy(v)"><f type="i">anoie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="annoyance(n)"><f type="i">anoiance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anoint(v)"><f type="i">anoint.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anon(adv)"><f type="i">anon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="another(n)"><f type="i">another</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="answer(n)"><f type="i">answer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="answerable(a)"><f type="i">answerable.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anthem(n)"><f type="i">antem</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="antichrist(n)"><f type="i">antichriste.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="antidote(n)"><f type="i">antidote.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="antedate(n)"><f type="i">antedate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="antique(a)" lexeme="antic(a)"><f type="i">antique
antik  </form> <xpln><f type="r"><class type="borrowing">Enfranc.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="antiquity(n)"><f type="i">antiquitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="antiquary(n)"><f type="i">antiquarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="anvil(n)"><f type="i">anuile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ape(n)"><f type="i">Ape.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apace(adv)"><f type="i">apase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apaid(a)"><f type="i">apaid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apart(adv)"><f type="i">apart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apish(a)"><f type="i">apish.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apple(n)"><f type="i">aple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apostate(a)"><f type="i">ap&obreve;stat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apostacy(n)"><f type="i">apost&abreve;cie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aposteme(n)"><f type="i">aposteme.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apostemation(n)"><f type="i">apostemation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apostle(n)"><f type="i">apostle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apostleship(n)"><f type="i">apostleship.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apostlelike(n)"><f type="i">apostlelike </form> <xpln><f type="r"><class type="compound">Compon.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="apostolic(a)"><f type="i">apostolik </form> <xpln><f type="r"><class type="derivation">Deriuat.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="apothecary(n)"><f type="i">apothecarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appall(v)"><f type="i">appall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appald(a)"><f type="i">appald </form> <xpln><f type="r"><class type="contraction"><emend err="Contatct.">Contract.</emend></class></xpln></wordentry>

<wordentry type="h"><form lexeme="appalled(a)"><f type="i">appalled</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apparell(n)"><f type="i">apparell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appare(n)"><f type="i">appare</form> <xpln></xpln>
<lemenote>Not in OED; cf. "aparement"</lemenote></wordentry>

<wordentry type="h"><form lexeme="apparent(a)"><f type="i">apparent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apparence(n)"><f type="i">apparence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appeach(v)"><f type="i">appeach</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appeal(v)"><f type="i">appeal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appear(v)"><f type="i">appear</form> <xpln></xpln></wordentry>
</page>

<page sig="y3r" no="173">
<wordentry type="h"><form lexeme="appearance(n)"><f type="i">appearance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appertain(v)"><f type="i">appertain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appertinence(n)" lexeme="appertinents(n)"><f type="i">appertinence
appertinents </form> <xpln><f type="r"> <class type="borrowing">En.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="appurtnance(n)"><f type="i">appurtnance </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appetite(n)"><f type="i">appetite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apply(v)"><f type="i">apply</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="application(n)"><f type="i">application</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appoint(v)"><f type="i">appoint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appointment(n)"><f type="i">appointment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appose(v)"><f type="i">appose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apposer(n)"><f type="i">apposour 
apposer  </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="apposition(n)"><f type="i">apposition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="approbation(n)"><f type="i">approbation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="approach(vn)"><f type="i">approche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="appropriation(n)"><f type="i">appropriation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="approve(v)"><f type="i">approue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="approvement(n)"><f type="i">approuements</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apt(a)"><f type="i">apt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aptness(n)"><f type="i">aptnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="apron(n)"><f type="i">apern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arbor(n)"><f type="i">Arbor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arbiter(n)"><f type="i">arbiter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arbiterment(n)"><f type="i">arbiterment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arbitrary(n)"><f type="i">arbitrarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arch(n)"><f type="i">arche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="archangel(n)"><f type="i">ar`changel 
arkangel </form> <xpln><f type="r"><class type="borrowing">Enfr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="archbishop(n)"><f type="i">archbishop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="archbishopric(n)"><f type="i">archbishoprik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="archduke(n)"><f type="i">archduk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="archer(n)"><f type="i">archer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="archery(n)"><f type="i">archerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="archpirate(n)"><f type="i">archpirate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="argent(n)"><f type="i">argent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="argue(v)"><f type="i">argew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="argument(n)"><f type="i">argument</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="argumenting(n)"><f type="i">argumenting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arise(v)"><f type="i">arise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arithmetic(n)"><f type="i">arithmetik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arithmetical(a)"><f type="i">arithmeticall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ark(n)"><f type="i">arke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arling(n)"><f type="i">arling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arm(n)"><f type="i">arm 
arme </form> <xpln><f type="r">The qualifying
e.</xpln></wordentry>

<wordentry type="h"><form lexeme="armd(a)"><f type="i">armd </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="armed(a)"><f type="i">armed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="armhole(n)"><f type="i">armehole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="armpit(n)"><f type="i">armepit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="armor(n)"><f type="i">armor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="armorer(n)"><f type="i">armorer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="armory(n)"><f type="i">armarie 
armorie </form> <xpln><f type="r"> <class type="borrowing">Enfranc.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="array(v)"><f type="i">arraie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arraign(v)"><f type="i">arraign</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arras(n)"><f type="i">arras 
arrasse </form> <xpln><f type="r"><class type="borrowing">Enfran</class></xpln></wordentry>

<wordentry type="h"><form lexeme="arrerage(n)"><f type="i">arrerage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arrest(v)"><f type="i">arrest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arrive(v)"><f type="i">arriue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arrow(n)"><f type="i">arrow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arrival(n)"><f type="i">arriuall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arse(n)"><f type="i">ars</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arsesmart(n)"><f type="i">arssmart </form> <xpln><f type="r"><class type="compound">Com.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="arsyversy(adv)"><f type="i">arsieuersie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="arseter(n)"><f type="i">arseter</form> <xpln></xpln>
<lemenote>Not found in OED.</lemenote></wordentry>

<wordentry type="h"><form lexeme="art(n)"><f type="i">arte </form> <xpln><f type="r"><class type="pos">A noun.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="art(v)"><f type="i">art </form> <xpln><f type="r"><class type="pos">A verb.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="artichoke(n)"><f type="i">artichok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="artificer(n)"><f type="i">artificer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="artificial(a)"><f type="i">artificiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="article(n)"><f type="i">article</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="articulate(v)"><f type="i">articulate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="artillery(n)"><f type="i">artillerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soon(adv)"><f type="i">As <f type="r">soon <f type="i">as </form> <xpln><f type="r"><class type="accent">Distin</class>
<f type="i">s, z,
</xpln></wordentry>

<wordentry type="h"><form lexeme="ascend(v)"><f type="i">ascend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ascension(n)"><f type="i"><emend err="asceniou">ascension</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ascent(n)" lexeme="assent(v)"><f type="i">ascent 
assent </form> <xpln><f type="r"><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="ascertain(v)"><f type="i">ascertain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ash(n)"><f type="i">ash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ashen(a)"><f type="i">ashen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ashes(n)"><f type="i">ashes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ashd(a)"><f type="i">ashd </form> <xpln><f type="r"><class type="contraction">Contra.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="ashamed(a)"><f type="i">ashamed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="asked(v)"><f type="i">asked</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="axt(v)"><f type="i">axt </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="askew(a)"><f type="i">askew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="a-skew(a)"><f type="i">a-skew </form> <xpln><f type="r"> <class type="compound">Comp.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="aside(adv)"><f type="i">aside</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="a-squint(a)"><f type="i">a-squint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="asquare(a)"><f type="i">asquare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="asleep(a)"><f type="i">aslepe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="asmuch(a)"><f type="i">asmuch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="a-smuch(n)"><f type="i">a-smuch </form> <xpln><f type="r"><class type="compound">Comp.</class></xpln>
<lemenote>"a-smutch"?</lemenote></wordentry>

<wordentry type="h"><form lexeme="asp(n)"><f type="i">asp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aspen(n)"><f type="i">aspen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aspire(v)"><f type="i">aspire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aspiration(n)"><f type="i">aspiration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aspirate(v)"><f type="i">aspirat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aspirt(a)"><f type="i">aspirt</form> <xpln></xpln>
<lemenote>"aspired"?</lemenote></wordentry>

<wordentry type="h"><form lexeme="asunder(adv)"><f type="i">asunder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assure(v)"><f type="i">assure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assail(v)"><f type="i">assail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assault(v)"><f type="i">assalt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ass(n)"><f type="i">asse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="asshead(n)"><f type="i">assehead </form> <xpln><f type="r"><class type="compound">Comp.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="assemble(v)"><f type="i">assemble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assembly(n)"><f type="i">assemblie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assent(v)"><f type="i">assents</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assentation(n)"><f type="i">assentation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assets(n)"><f type="i">assets </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="assiduous(a)"><f type="i">assiduous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assiduity(n)"><f type="i">assiduitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assign(vn)"><f type="i">assigne</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assignation(n)"><f type="i">assignation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assignment(n)"><f type="i">assignement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assiege(v)"><f type="i">asseidge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assize(n)"><f type="i">assise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assistance(n)"><f type="i">assistence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assistant(n)"><f type="i">assistants</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assuage(v)"><f type="i">asswage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="associate(n)"><f type="i">associate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="association(n)"><f type="i">association</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assummon(v)"><f type="i">assomon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assoon(adv)"><f type="i">assoon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assouth(v)"><f type="i">assouth</form> <xpln></xpln>
<lemenote>Not found in OED.</lemenote></wordentry>

<wordentry type="h"><form lexeme="assure(v)"><f type="i">assure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="assurance(n)"><f type="i">assurance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="astonish(v)"><f type="i">astonish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="astound(v)"><f type="i">ast&ograve;nd </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="astonied(a)"><f type="i">astonied</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="astray(v)"><f type="i">astraie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="astrolabe(n)"><f type="i">astrolabe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="astronomy(n)"><f type="i">astronomie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="astronomical(a)"><f type="i">astronomicall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="at(pp)"><f type="i">At</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="at-once(adv)"><f type="i">at-once </form> <xpln><f type="r"><class type="compound">Comp.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="atonement(n)"><f type="i">atonement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attach(v)"><f type="i">attach.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attachment(n)"><f type="i">attachement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attainder(n)"><f type="i">attainder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attaint(v)"><f type="i">attaint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attempt(v)"><f type="i">attempt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attend(v)"><f type="i">attend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attendance(n)"><f type="i">attendance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attendant(n)"><f type="i">attendant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attendant(n)"><f type="i">attendants</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attentive(a)"><f type="i">attentiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attire(n)"><f type="i">attire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attorney(n)"><f type="i">atturnie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attornment(n)"><f type="i">atturnment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attribute(n)"><f type="i">attribute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="attrap(v)"><f type="i">attrap</form> <xpln></xpln></wordentry>
</page>

<page sig="y3v" no="174">
<wordentry type="h"><form lexeme="avail(n)"><f type="i">Auail.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="available(a)"><f type="i">auail&abreve;be.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avance(v)"><f type="i">auance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avaunt(n)"><f type="i">auant.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avantage(n)"><f type="i">au&amacron;ntage.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aurce(n)"><f type="i">au&abreve;rce.</form> <xpln></xpln>
<lemenote>Not found in OED.</lemenote></wordentry>

<wordentry type="h"><form lexeme="auburn(n)"><f type="i">auburn.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="audience(n)"><f type="i">audience.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="auditor(n)"><f type="i">auditor.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="audit(n)"><f type="i">audit.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="auditory(a)"><f type="i">auditorie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="audible(a)"><f type="i">audible.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avenge(v)"><f type="i">auenge.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avengement(n)"><f type="i">auengement.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aventure(n)"><f type="i">auentur. 
</form> <xpln></xpln>
<note>
<f type="r"> The qualifying, e. wanting.
</note>
</wordentry>

<wordentry type="h"><form lexeme="aventured(a)"><f type="i">auentured.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aver(v)" lexeme="averment(n)"><f type="i">auer. 
auerm<expan type="e+_">en</expan>t. </form> <xpln><f type="r"><class type="borrowing">Enfr<expan type="a+_">an</expan>.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="augment(v)"><f type="i">augment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="augmentation(n)"><f type="i">augmentation.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="aunt(n)"><f type="i">aunt.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avoid(v)"><f type="i">auoyd.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avoidance(n)"><f type="i">auoydance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avow(v)"><f type="i">auow.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avouch(n)"><f type="i">auouch.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="avowry(n)"><f type="i">auowrie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="author(n)"><f type="i">autor.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="authority(n)"><f type="i">autoritie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="authentic(a)" lexeme="authentical(a)"><f type="i">autentik. 
aut<expan type="e+_">en</expan>ticall </form> <xpln><f type="r"><class type="borrowing">Enfran&shy;
th</class></xpln></wordentry>

<wordentry type="h"><form lexeme="awe(n)"><f type="i">Aw.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="away(adv)"><f type="i">awaie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="await(v)"><f type="i">await.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="awake(a)"><f type="i">awake.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="awares(adv)"><f type="i">awares.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="award(n)"><f type="i">award.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="awry(a)"><f type="i">a-wry</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="axe(n)"><f type="i">Ax.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="axt(v)"><f type="i">axt. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="axletree(n)"><f type="i">axletr&eacute;.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="azure(a)" lexeme="azur&eacute;(n)"><f type="i">Azure. 
azur&eacute;. </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="b"><alpha>B</alpha>

<wordentry type="h"><form lexeme="bay(n)"><f type="i">Baie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bab(v)"><f type="i">bab.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="babe(n)"><f type="i">babe.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baby(n)"><f type="i">babie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bable(n)"><f type="i">b&abreve;ble. 
b&amacron;ble.</form> <xpln><f type="r"><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bablative(a)"><f type="i">bablatiue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bablest(v)"><f type="i">bablest.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="babledst(v)"><f type="i">babledst. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bach(n)"><f type="i">bach.</form> <xpln></xpln>
<lemenote>OED "bac" 2</lemenote></wordentry>

<wordentry type="h"><form lexeme="bachelor(n)"><f type="i">bachiler.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bacon(n)"><f type="i">bacon.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baken(n)"><f type="i">baken.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bad(n)"><f type="i">bad.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="badst(v)" lexeme="baddest(n)"><f type="i">badst.
baddest. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="badge(n)"><f type="i">badge.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="badger(n)"><f type="i">badger.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bag(n)"><f type="i">bag.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bagd(v)"><f type="i">bagd. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="baggage(n)"><f type="i">baggage.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bagpipe(n)"><f type="i">bagpipe.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bayard(n)"><f type="i">baiard.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bail(v)"><f type="i">bail.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bailiff(n)"><f type="i">bailif.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bale(n)"><f type="i">bale.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bain(n)"><f type="i">bain.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bat(n)"><f type="i">bat.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bate(v)"><f type="i">bate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bak(n)"><f type="i">bak.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bake(v)"><f type="i">bake.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baker(n)"><f type="i">baker.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="backbite(v)"><f type="i">bakbite.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="backfriend(n)"><f type="i">bakfrind.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baxter(n)"><f type="i">bakster.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bakt(vn)"><f type="i">bakt. </form> <xpln><f type="r"><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="backward(adv)"><f type="i">bakward.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="balas(n)"><f type="i">balace.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ballad(n)"><f type="i">balad.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bald(a)"><f type="i">bald.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="balk(v)"><f type="i">balk.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="balm(n)"><f type="i">balm.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ball(n)"><f type="i">ball.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ballet(n)"><f type="i">ballet.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="balance(n)"><f type="i">balance.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baldpate(n)"><f type="i">baldpate.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bambery(n)"><f type="i">bamberie.</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="ban(v)"><f type="i">ban.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bane(n)"><f type="i">bane.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="band(n)"><f type="i">band.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="banddog(n)" lexeme="bandog(n)"><f type="i">banddog.
bandog. </form><xpln> </xpln></wordentry>

<wordentry type="h"><form lexeme="bandy(v)"><f type="i">bandie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bang(v)"><f type="i">bang.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bandgast(v)"><f type="i">bandg&agrave;st. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bank(n)"><f type="i">bank.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="banquet(n)"><f type="i">banket.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bankrupt(a)" lexeme="bankrout(n)"><f type="i">bankrupt. 
bankrout. </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="banner(n)"><f type="i">banner.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="banish(v)"><f type="i">bannish.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="banishment(n)"><f type="i">bannishment.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baptism(n)" lexeme="baptim(n)"><f type="i">baptism.
baptim. </form> <xpln><f type="r"><class type="borrowing">Enfranch.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="baptize(v)"><f type="i">baptise.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baptist(n)"><f type="i">baptist.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baptize(v)"><f type="i">baptise.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baptist(n)"><f type="i">baptist.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bar(n)"><f type="i">bar.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bare(v)"><f type="i">bare.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barb(n)"><f type="i">barb.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barbary(a)"><f type="i">barbarie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barbarism(n)"><f type="i">barbarism.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barbarous(a)"><f type="i">barbarous.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barbel(n)"><f type="i">barbell.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barber(n)"><f type="i">barber.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barbd(v)" lexeme="bard(n)"><f type="i">barbd. 
bard. </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="barge(n)"><f type="i">bardge.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bargemen(n)"><f type="i">bardgemen.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bareness(n)"><f type="i">barenesse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bargain(n)"><f type="i">bargin.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bark(n)"><f type="i">bark.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barker(n)"><f type="i">barker.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barking(n)"><f type="i">barking.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barley(n)" lexeme="barely(adv)"><f type="i">barlie. 
barelie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baron(n)" lexeme="barn(n)"><f type="i">baron. 
barn.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barnacle(n)"><f type="i">barnacle.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barrell(n)"><f type="i">barrell.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barren(a)"><f type="i">barren.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barrier(n)"><f type="i">barriers.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barrister(n)"><f type="i">barrister.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barrator(n)"><f type="i">barretter.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barrow(n)"><f type="i">barrow.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="barter(v)"><f type="i">barter.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bass(a)"><f type="i">basse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="base(n)"><f type="i">base.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bashful(a)"><f type="i">bashfull.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bashfulness(a)"><f type="i">bashfulnesse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="basil(n)"><f type="i">basill.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="basilisk(n)"><f type="i">basilisk.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="basin(n)"><f type="i">b&amacron;s&ibreve;n.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="basket(n)"><f type="i">basket.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bastard(n)"><f type="i">bastard.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bastardy(n)"><f type="i">bastardie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baste(v)"><f type="i">b&amacron;ste.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bastid(v)"><f type="i">bastid.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="basting(n)"><f type="i">b&amacron;sting.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bat(n)"><f type="i">bat.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="batting(n)"><f type="i">batting.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bate(v)"><f type="i">bate.</form> <xpln></xpln></wordentry>
</page>

<page sig="y4r" no="175">
<wordentry type="h"><form lexeme="bating(n)"><f type="i">bating.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="battable(n)" lexeme="batable(n)"><f type="i">battable.
batable. </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="battell(n)" lexeme="batle(n)"><f type="i">battell.
batle. </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="batlemente(n)"><f type="i">batlemente.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="batter(n)"><f type="i">batter.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="battered(n)"><f type="i">battered.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="batterd(n)" lexeme="battred(n)"><f type="i">batterd. 
battred.  </form> <xpln><f type="r"><class type="contraction">Contr. as.
children</class></xpln></wordentry>

<wordentry type="h"><form lexeme="battring(n)"><f type="i">battring.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="battry(n)"><f type="i">battrie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bath(n)"><f type="i">bath.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bathe(v)"><f type="i">bathe.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bat-fowl(v)"><f type="i">batfoul.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bat-fowling(n)"><f type="i">batfo&ubreve;lling. 
batfo&umacron;lling. </form> <xpln><f type="r"><class type="accent">Dist.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bavin(n)"><f type="i">bauin.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bawbee(n)"><f type="i">baub&ecirc;.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bawd(n)"><f type="i">baud.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bawdy(a)"><f type="i">baudie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bawdry(n)"><f type="i">baudrie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baudkin(n)"><f type="i">baudkin.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baldric(n)"><f type="i">baudrik.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baw(v)"><f type="i">baw.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baw, wawe(n)"><f type="i">baw, wawe.</form> <xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="baum(n)"><f type="i">baum.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="baulk(n)"><f type="i">bauk.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="be(n)"><f type="i">B&eacute;.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bee(n)"><f type="i">b&eacute;es.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beach(n)"><f type="i">beach.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bead(n)"><f type="i">beads.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beadle(n)"><f type="i">beadle.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beagle(n)"><f type="i">beagle.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beak(n)"><f type="i">beak.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beaken(n)"><f type="i">beaken.</form><xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="beam(n)"><f type="i">beam.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bean(n)"><f type="i">bean.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bear(n)"><f type="i">bear.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bare-breech(n)"><f type="i">bearbreche.</form> <xpln></xpln>
<lemenote>OED, "bare" a</lemenote></wordentry>

<wordentry type="h"><form lexeme="beard(n)"><f type="i">beard.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bearfoot(n)"><f type="i">bearfoot.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beast(n)"><f type="i">beast.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beastly(n)"><f type="i">beastlie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beat(v)"><f type="i">beat.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beat(n)"><f type="i">beat </form><xpln><class type="borrowing">En.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="beautify(v)"><f type="i">beautify.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beautiful(a)"><f type="i">beautifull.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="became(v)"><f type="i">became.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beech(n)"><f type="i">beche.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="be-chap(v)"><f type="i">bechap.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="be-chapt(v)"><f type="i">bechapt.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="be-chid(v)"><f type="i">bechid.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bechide(v)"><f type="i">bechide.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bed(n)"><f type="i">bed.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bedding(n)"><f type="i">bedding.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bedrid(a)"><f type="i">bedred.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bedlem(n)" lexeme="bedlame(n)" lexeme="bethlem(n)"><f type="i">bedlem.
bedlame. 
bethlem. </form> <xpln><f type="r"><class type="accent">Dist.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="beef(n)"><f type="i">befe.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="befall(v)"><f type="i">befall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="befell(v)"><f type="i">befell.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="befallen(v)"><f type="i">befallen.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="befaln(v)"><f type="i">befaln. </form> <xpln><f type="r"><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="befile(v)"><f type="i">befile.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="befilth(v)"><f type="i">befilth.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="before(pp)"><f type="i">before.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beg(v)"><f type="i">beg.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="begd(v)"><f type="i">begd.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="began(v)"><f type="i">began.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beget(v)"><f type="i">b&egrave;get.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="begile(v)"><f type="i">b&egrave;gile.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="begger(n)"><f type="i">begger.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beggery(n)"><f type="i">beggerie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="begone(v)"><f type="i">begon.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="begummed(v)"><f type="i">begummed.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behalf(n)"><f type="i">behalf.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behave(v)"><f type="i">behaue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behavior(n)"><f type="i">behauior.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behead(v)"><f type="i">behead.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beheaded(v)"><f type="i">beheaded.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behilt(n)"><f type="i">behilt.</form> <xpln></xpln>
<lemenote>OED "hild" v.</lemenote></wordentry>

<wordentry type="h"><form lexeme="behind(pp)"><f type="i">behind.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behold(v)"><f type="i">behold.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behap(v)"><f type="i">behap.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behoof(v)"><f type="i">beh&ograve;of.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="behove(v)"><f type="i">behoue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="being(n)"><f type="i">being.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beck(n)"><f type="i">bek.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bell(n)"><f type="i">bell.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bellweather(n)"><f type="i">bellweather.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="belch(n)"><f type="i">belch.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beldame(n)"><f type="i">beldame.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="belief(n)"><f type="i">belefe.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="believe(v)"><f type="i">beleue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="belie(v)"><f type="i">bellie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="belly(n)"><f type="i">bely.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bellous(n)"><f type="i">bellous.</form> <xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="bellow(n)"><f type="i">bellow.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="belong(v)" lexeme="be-long(n)"><f type="i">belong.
be-long. </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="below(pp)"><f type="i">bel&oacute;w.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bell(n)"><f type="i">bells.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="belt(n)"><f type="i">belt.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beloved(n)"><f type="i">beloued.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bench(n)"><f type="i">bench.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bencher(n)"><f type="i">bencher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bend(n)"><f type="i">bend.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beneath(pp)"><f type="i">beneath.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="benet(n)"><f type="i">benet.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="benefice(n)"><f type="i">benefice.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beneficial(a)"><f type="i">beneficiall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beneficiary(n)"><f type="i">beneficiarie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="benefit(n)"><f type="i">benefit.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Benjamin(pn)"><f type="i">beniamin.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="benign(a)"><f type="i">benign.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="benignity(n)"><f type="i">benignitie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bent(n)"><f type="i">bent.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bequeath(v)"><f type="i">bequeath.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bequean(v)"><f type="i">bequean.</form> <xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="bequicken(n)"><f type="i">bequiken.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beray(v)"><f type="i">bera&igrave;e.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bear(v)"><f type="i">bere.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bereave(v)"><f type="i">bereue.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bereft(v)"><f type="i">bereft.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bury(v)"><f type="i">b&ebreve;rie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burial(n)"><f type="i">beriall.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Beverwick(pn)"><f type="i">beuerwik.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="berewick(n)"><f type="i">berwik. </form> <xpln><f type="r"><class type="contraction">Contract</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bereved(v)"><f type="i">bereued.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="berent(v)"><f type="i">berent.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beseech(v)"><f type="i">beseche.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beseem(v)"><f type="i">beseme.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beset(v)"><f type="i">beset.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="besiege(v)"><f type="i">beseidge.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beside(pp)"><f type="i">beside.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="besides(adv)"><f type="i">besides.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beshrew(v)"><f type="i">beshrew.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="besmear(v)"><f type="i">besmear.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="besom(n)"><f type="i">besom.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="besought(v)"><f type="i">besought.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bespit(v)"><f type="i">bespit.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bespew(v)"><f type="i">bespew.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bespoild(v)"><f type="i">bespoild.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="best(n)"><f type="i">best.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bested(v)"><f type="i">bestad.</form> <xpln></xpln>
<lemenote>OED "bestad"</lemenote></wordentry>

<wordentry type="h"><form lexeme="bested(v)"><f type="i">bested.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bestow(v)"><f type="i">bestow.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bet(n)"><f type="i">bet.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beat(v)"><f type="i">bete.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="betany(n)"><f type="i">betanie.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="betake(v)"><f type="i">betake.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bethink(v)"><f type="i">bethink.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="betoken(v)"><f type="i">betoken.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="betook(v)"><f type="i">betook.</form> <xpln></xpln></wordentry>
</page>

<page sig="y4v" no="176">
<wordentry type="h"><form lexeme="beetle(n)"><f type="i">betle.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="betroth(v)"><f type="i">betroth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="betrothed(v)"><f type="i">betrothed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="betray(v)"><f type="i">betraie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="better(a)"><f type="i">better</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="between(pp)"><f type="i">betwene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bevy(n)"><f type="i">beuie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beware(v)"><f type="i">beware</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bewail(v)"><f type="i">bewail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bewitch(v)"><f type="i">bewitch</form> <xpln><f type="r"><class type="derivation">Deriuat</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bewray(v)"><f type="i">bewraie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bewrap(v)"><f type="i">bewrap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="beyond(pp)"><f type="i">beyond</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bias(n)"><f type="i">Biace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bib(n)"><f type="i">bib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bible(n)"><f type="i">b&imacron;ble 
b&ibreve;ble. </form> <xpln><f type="r"><class type="distinction">Distinct </class> </xpln></wordentry>

<wordentry type="h"><form lexeme="bitch(n)"><f type="i">bich </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bitchery(n)"><f type="i">bichrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bid(v)"><f type="i">bid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bide(v)"><f type="i">bide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="biden(v)"><f type="i">b&ibreve;den</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="big(a)"><f type="i">big</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bigamy(n)"><f type="i">bigamie </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bigger(a)" lexeme="er(n)"><f type="i">bigg`er</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="biggin(n)"><f type="i">bigg`in</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bigness(n)"><f type="i">bignesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bicker(v)"><f type="i">bikker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bickering(n)"><f type="i">bikkering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bickring(n)"><f type="i">bikring </form> <xpln><f type="r"> <class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bill(n)"><f type="i">bill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bile(n)"><f type="i">bile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="billet(n)"><f type="i">b&ibreve;llet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="biliment(n)"><f type="i">billement </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="billing(n)"><f type="i">billing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bin(n)"><f type="i">bin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bind(v)"><f type="i">bind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="binding(n)"><f type="i">bindding</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bing(n)"><f type="i">bing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="birch(n)"><f type="i">birch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bird(n)"><f type="i">bird</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="birder(n)"><f type="i">birder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="birdlime(n)"><f type="i">birdlime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="birt(n)"><f type="i">birt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="birth(n)"><f type="i">birth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="busy(a)"><f type="i">bissie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="biscot(n)" lexeme="biscuit(n)"><f type="i">biscot 
bisket </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bishop(n)"><f type="i">bishop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bit(n)"><f type="i">bit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bite(v)"><f type="i">bite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bitter(a)"><f type="i">bitter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bitterly(a)"><f type="i">bitterlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bitterness(n)"><f type="i">bitternesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bittern(n)"><f type="i">bittor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blab(v)"><f type="i">Blab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blabberlip(n)"><f type="i">blabberlip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blade(n)"><f type="i">blade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bladder(n)"><f type="i">bladder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blake(a)"><f type="i">blake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="black(a)"><f type="i">blak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blackish(a)"><f type="i">blakkish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blame(n)"><f type="i">blame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blameworthy(a)"><f type="i">blamewhorthie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blain(n)"><f type="i">blane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blanche(a)"><f type="i">blanche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blank(n)"><f type="i">blank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blanket(n)"><f type="i">blanket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blaze(n)"><f type="i">blase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blazing(n)"><f type="i">blasing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blaspheme(v)" lexeme="blasfeam(n)"><f type="i">blaspheme 
blasfeam </form> <xpln><f type="r"> <class type="borrowing">Enfr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="blasphemy(n)"><f type="i">blasphemie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blast(v)"><f type="i">blast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blasted(v)"><f type="i">blasted</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blethe(a)"><f type="i">bleath</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bleacht(v)"><f type="i">bleacht </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bleaching(n)"><f type="i">bleaching</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bleak(a)"><f type="i">bleak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blear(a)"><f type="i">blear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blear-eye(n)"><f type="i">ble&agrave;reie</form> <xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="bleat(v)"><f type="i">bleat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bled(v)"><f type="i">bled</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blede(n)"><f type="i">blede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bleck(n)" lexeme="bleke(n)"><f type="i">blek 
bleke </form> <xpln> </xpln></wordentry>

<wordentry type="h"><form lexeme="blemish(n)"><f type="i">blemish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blend(v)"><f type="i">blend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blue(a)"><f type="i">blew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blind(v)"><f type="i">blind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blindness(n)"><f type="i">blindnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blindfold(n)"><f type="i">blindfild</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blink(v)"><f type="i">blink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blinks(v)"><f type="i">blinks</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blirt(n)"><f type="i">blirt</form> <xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="bliss(n)"><f type="i">blisse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blessing(n)"><f type="i">blissing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blister(n)"><f type="i">blister</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="block(n)"><f type="i">blok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blockish(a)"><f type="i">blokkish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blood(n)"><f type="i">blood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bloody(a)"><f type="i">bloodie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blossom(n)"><f type="i">blossom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blot(v)"><f type="i">blot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bloat(a)"><f type="i">blote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blow(v)"><f type="i">blow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blown(v)"><f type="i">bloun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blubber(v)"><f type="i">blubber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blunt(a)"><f type="i">blunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blur(v)"><f type="i">blur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blush(v)"><f type="i">blush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bluster(v)"><f type="i">bluster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blustering(n)"><f type="i">blustering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="blustring(n)"><f type="i">blustring </form> <xpln><f type="r">  <class type="contraction">Com</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bob(n)"><f type="i">Bob</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bobbins(n)"><f type="i">bobbins</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bode(n)"><f type="i">bode</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="body(n)"><f type="i">bodie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bodkin(n)"><f type="i">bodkin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boisterous(a)"><f type="i">boisterous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bold(a)"><f type="i">bold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bolt(n)"><f type="i">bolt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bolster(n)"><f type="i">bolster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bolstered(a)"><f type="i">bolstered</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bone(n)"><f type="i">bone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bonnet(n)"><f type="i">bonet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bond(n)"><f type="i">bond</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bondage(n)"><f type="i">bondage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="book(n)"><f type="i">book</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boot(n)"><f type="i">boot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="booty(n)"><f type="i">bootie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bore(n)"><f type="i">bore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="born(v)"><f type="i">borne</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="borrow(v)"><f type="i">borrow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bo(ex)"><f type="i">bo</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bosom(n)"><f type="i">bosom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boss(n)"><f type="i">bosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boast(n)" lexeme="boasting(n)"><f type="i">boste 
bosting </form> <xpln></xpln><f type="r"> 
<note>
e, Orignal
</note>
</wordentry>

<wordentry type="h"><form lexeme="bot(n)"><f type="i">bot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bote(n)"><f type="i">bote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="both(n)"><f type="i">both</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="botes(v)"><f type="i">botes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boatman(n)"><f type="i">boteman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="botch(n)"><f type="i">botche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="botcher(n)"><f type="i">botcher.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bottle(n)"><f type="i">b&obreve;tle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bottom(n)"><f type="i">bottom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bottomless(n)"><f type="i">bottomlesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bounty(n)"><f type="i">bountie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bountiful(a)"><f type="i">bountifull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boun(v)"><f type="i">boun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boult(n)"><f type="i">boult</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bourd(n)"><f type="i">bourd</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bourder(n)"><f type="i">bourder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bower(n)"><f type="i"><emend err="bonr">bour</emend></form> <xpln></xpln></wordentry>
</page>

<page sig="z1r" no="176">
<wordentry type="h"><form lexeme="booth(n)"><f type="i">bout`h</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bought(v)" lexeme="b&ograve;ught(n)"><f type="i">b&oacute;ught 
b&ograve;ught </form> <xpln><f type="r"> <class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bow(n)" lexeme="b&oacute;w(n)"><f type="i">b&ograve;w 
b&oacute;w </form> <xpln><f type="r"> <class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bowes(n)" lexeme="b&oacute;wes(n)"><f type="i">b&ograve;wes 
b&oacute;wes </form> <xpln><f type="r"> <class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="boil(n)"><f type="i">boil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boul(n)"><f type="i">bo&ugrave;l</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bowells(n)"><f type="i">b&ograve;wells</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bowls(n)"><f type="i">bowlls</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bowcase(n)"><f type="i">b&oacute;wcase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bowling(n)"><f type="i">b&ograve;wling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bouncing(n)"><f type="i">bounsing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="box(n)"><f type="i">box</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boxtree(n)"><f type="i">boxtr&eacute;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boy(n)"><f type="i">boy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="boyrie(n)"><f type="i">boyrie</form> <xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="boyer(n)"><f type="i">boyer</form> <xpln></xpln>
<lemenote>predating OED example</lemenote></wordentry>

<wordentry type="h"><form lexeme="brabble(v)"><f type="i">Brable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brabbler(n)"><f type="i">brabler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brace(n)"><f type="i">brace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bracer(n)"><f type="i">bracer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bracelet(n)"><f type="i">bracelet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brace(n)"><f type="i">brache</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brag(n)"><f type="i">brag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bragget(n)"><f type="i">brag`get</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="braid(n)"><f type="i">braid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bray(v)"><f type="i">braie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brain(n)"><f type="i">brain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brainsick(a)"><f type="i">brainsik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brack(n)"><f type="i">brak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brake(n)"><f type="i">brake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brackish(a)"><f type="i">brakkish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bramble(n)"><f type="i">bramble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bramling(n)"><f type="i">bramlin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bran(n)"><f type="i">bran</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="branch(n)"><f type="i">branch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brand(n)"><f type="i">brand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brandish(v)"><f type="i">brandish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brank-ursine(n)"><f type="i">brankursine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brazen(n)"><f type="i">brasen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brazier(n)"><f type="i">brasier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brazil(n)"><f type="i">brasill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brass(n)"><f type="i">brasse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brast(v)"><f type="i">brast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brat(n)"><f type="i">brat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brave(a)"><f type="i">braue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bravery(n)"><f type="i">brauerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brawl(n)"><f type="i">brall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brawn(n)"><f type="i">braun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breach(n)"><f type="i">breach</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bread(n)"><f type="i">bread</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="break(a)"><f type="i">break</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breakfast(n)"><f type="i">breakfast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breast(n)"><f type="i">breast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breastplate(n)"><f type="i">breastplate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breath(n)"><f type="i">breath</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bream(n)"><f type="i">bream</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brier(n)"><f type="i">br&euml;ar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breach(n)"><f type="i">breche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breechless(n)"><f type="i">brechelesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bread(n)"><f type="i">bred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breadth(n)"><f type="i">bredth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brede(n)"><f type="i">brede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brief(a)"><f type="i">brefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brend(a)"><f type="i">brend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brent(v)"><f type="i">brent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="breath(n)"><f type="i">breth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brevity(n)"><f type="i">breuitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brew(v)"><f type="i">brew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brewer(n)"><f type="i">brewer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brewhouse(n)"><f type="i">brewhouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brewis(n)"><f type="i">brew&iuml;s</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bribe(n)"><f type="i">bribe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bribery(n)"><f type="i">briberie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bribble-brabble(n)"><f type="i">brible brable</form> <xpln></xpln>
<lemenote>predates OED example (1665)</lemenote></wordentry>

<wordentry type="h"><form lexeme="bride(n)"><f type="i">bride</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bridegroom(n)"><f type="i">bridegroom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bridemaid(n)"><f type="i">bridemaid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bridge(n)"><f type="i">bridge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bridgehouse(n)"><f type="i">bridgehouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bridle(n)"><f type="i">bridle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brigandine(n)"><f type="i">brigandine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bright(a)"><f type="i">bright</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brightness(n)"><f type="i">brightnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brick(n)"><f type="i">brik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bricklayer(n)"><f type="i">briklaier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brickle(a)"><f type="i">brikle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brickleness(n)"><f type="i">briklenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brittle(a)"><f type="i">britle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brittleness(n)"><f type="i">britlenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brim(n)"><f type="i">brim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brimstone(n)"><f type="i">brimstone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brine(n)"><f type="i">brine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bring(v)"><f type="i">bring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brink(n)"><f type="i">brink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="briony(n)"><f type="i">brionie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bristle(n)"><f type="i">bristle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broche(v)"><f type="i">broche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broid(n)"><f type="i">brode</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broidery(n)"><f type="i">broderie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broil(v)"><f type="i">broil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brock(n)"><f type="i">brok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broke(v)"><f type="i">broke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broker(n)"><f type="i">broker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broken(v)"><f type="i">broken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brocket(n)"><f type="i">brokket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broach(n)"><f type="i">brooch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brood(n)"><f type="i">brood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brook(n)"><f type="i">brook</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="broth(n)" lexeme="brothel(n)"><f type="i">bro`th 
brot'hell </form> <xpln><f type="r"> <class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="brother(n)"><f type="i">brother</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brought(v)"><f type="i">bro&uacute;ght</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brow(n)"><f type="i">brow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brown(a)"><f type="i">broun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="browse(n)"><f type="i">brouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bruise(n)"><f type="i">bruse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bruised(a)"><f type="i">br&ugrave;sed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brush(n)"><f type="i">brush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brust(v)"><f type="i">brust</form> <xpln></xpln>
<lemenote>OED "burst" v.</lemenote></wordentry>

<wordentry type="h"><form lexeme="brusten(v)"><f type="i">brusten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brute(a)"><f type="i">brute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="brutish(a)"><f type="i">brutish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bubble(n)"><f type="i">Buble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buckle(n)" lexeme="buckler(n)" lexeme="buckled(a)"><f type="i">bucle 
bucler
bucled </form> <xpln><f type="r"><class type="kind"> k.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="bud(n)"><f type="i">bud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="budge(n)"><f type="i">budge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="budget(n)"><f type="i">budget</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buff(n)"><f type="i">buf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buffet(n)"><f type="i">buffet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buffle(n)"><f type="i">bufle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bug(n)"><f type="i">bug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buggery(n)"><f type="i">buggerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bugle(n)"><f type="i">b&ugrave;gle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bugloss(n)"><f type="i">buglosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buck(n)"><f type="i">buk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bucket(n)"><f type="i">bukket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buck-stall(n)"><f type="i">bukstall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bull(n)"><f type="i">bull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bullace(n)"><f type="i">bullace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bulbating(n)"><f type="i">bulbating</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bullfinch(n)"><f type="i">bulfinch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bullion(n)"><f type="i">bullion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bull(n)"><f type="i">bulls</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bullock(n)"><f type="i">bullok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bulrush(n)"><f type="i">bulrush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bulwark(n)"><f type="i">bulwark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bum(n)"><f type="i">bum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bums(v)"><f type="i">bums</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bumbace(n)"><f type="i">bumbase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bombast(n)"><f type="i">bumbaste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bumbacie(n)"><f type="i">bumbacie</form> <xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>
</page>

<page sig="z1v" no="177">
<wordentry type="h"><form lexeme="bun(n)"><f type="i">bun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bunch(n)"><f type="i">bunch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bundle(n)"><f type="i">bundle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bungle(v)"><f type="i">bungle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bungler(n)"><f type="i">bungler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bungerly(a)"><f type="i">bungerlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bunting(n)"><f type="i">bunting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bur(n)"><f type="i">bur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burden(n)"><f type="i">burden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burgeon(n)"><f type="i">burgen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burgess(n)"><f type="i">burgesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burn(v)"><f type="i">burn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burnd(v)" lexeme="burnt(n)"><f type="i">burnd 
burnt </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burnell(n)"><f type="i">burnell</form> <xpln></xpln>
<lemenote>not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="burnet(a)"><f type="i">burnet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burnish(v)"><f type="i">burnish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="borage(n)"><f type="i">burrage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="borough(n)"><f type="i">burrough</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="burst(v)"><f type="i">burst</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bursten(v)"><f type="i">bursten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bush(n)"><f type="i">bush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bushel(n)"><f type="i">bushell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buskin(n)"><f type="i">buskin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buss(n)"><f type="i">busse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buzzard(n)"><f type="i">b&ubreve;ssard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bustard(n)"><f type="i">bustard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="but(c)"><f type="i">but</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="butt(n)"><f type="i">buts</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="butcher(n)"><f type="i">butcher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="butler(n)"><f type="i">b&ubreve;tler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="butter(n)"><f type="i">butter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buttery(n)"><f type="i">butterie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="butterfly(n)"><f type="i">butterflie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buttress(n)"><f type="i">buttresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buttock(n)"><f type="i">buttok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="button(n)"><f type="i">button</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="butwin(n)"><f type="i">butwin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buzz(n)"><f type="i">buz</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="by(pp)"><f type="i">By</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="buyer(n)"><f type="i">byer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="bypath(n)"><f type="i">bypath</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="byway(n)"><f type="i">bywaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="byword(n)"><f type="i">byword</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="c"><alpha>C</alpha>

<wordentry type="h"><form lexeme="cabin(n)"><f type="i">Cabin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cabinet(n)"><f type="i">cabinet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cabbage(n)"><f type="i">cabbish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cable(n)"><f type="i">cable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cade(n)"><f type="i">cade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cadence(n)"><f type="i">cadence </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chaff(n)"><f type="i">caf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caffa(n)"><f type="i">caffaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cage(n)"><f type="i">cage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cagebird(n)"><f type="i">cagebird</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cake(n)"><f type="i">cake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cake(v)"><f type="i">cak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="call(v)"><f type="i">call</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="calamity(n)"><f type="i">calamitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chaldron(n)"><f type="i">caldron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="calendar(n)"><f type="i">calender</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="calf(n)"><f type="i">calf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="calm(a)"><f type="i">calm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cam(n)"><f type="i">cam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="came(v)"><f type="i">came</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cambell(n)"><f type="i">cambell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="camel(n)"><f type="i">camell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="camphor(n)"><f type="i">camfear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="camomile(n)"><f type="i">camomile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="camp(n)"><f type="i">camp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="campish(a)"><f type="i">campish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="campion(n)"><f type="i">campion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="can(v)"><f type="i">can</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cane(n)"><f type="i">cane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="canel(n)"><f type="i">canell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cancell(n)"><f type="i">cancell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="canker(n)"><f type="i">canker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cankerd(a)" lexeme="cankered(n)"><f type="i">cankerd 
cankered </form> <xpln><f type="r"> <class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="candle(n)"><f type="i">candle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="candlestick(n)"><f type="i">candlestik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="canon(n)"><f type="i">canon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="canonise(v)"><f type="i">canonise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="canopy(n)" lexeme="conopie(n)"><f type="i">canopie 
conopie </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="canvas(n)" lexeme="canuast(n)"><f type="i">canuasse 
canuast </form> <xpln><f type="r"> <class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="canst(v)"><f type="i">canst </form> <xpln><f type="r"> <class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cape(n)"><f type="i">cape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cap(n)"><f type="i">cap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Cape merchant(n)"><f type="i">capemerchant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capable(a)"><f type="i">cap&abreve;ble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capability(n)"><f type="i">capabilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capacity(n)"><f type="i">capacitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capers(n)"><f type="i">capers</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caper(v)"><f type="i">caper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caparison(n)"><f type="i">capparison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capper(n)"><f type="i">capper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capering(n)" lexeme="capring(n)"><f type="i">capering 
capring </form> <xpln><f type="r"> <class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="capital(n)"><f type="i">capitall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capitulate(v)"><f type="i">capitulate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capon(n)"><f type="i">capon </form> <xpln><f type="r"> <class type="accent">o, passant</class></xpln></wordentry>

<wordentry type="h"><form lexeme="caponize(v)"><f type="i">caponise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="captain(n)" lexeme="captan(n)"><f type="i">capitane 
captan </form> <xpln><f type="r"> <class type="contraction">Contract</class></xpln></wordentry>

<wordentry type="h"><form lexeme="captious(n)"><f type="i">captious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="captive(a)"><f type="i">captiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="captivity(n)"><f type="i">captiuitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="captivate(v)"><f type="i">captiuate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="capped(a)" lexeme="capt(a)"><f type="i">cappid 
capt </form> <xpln><f type="r"> <class type="contraction">Contract.</class> </xpln></wordentry>

<wordentry type="h"><form lexeme="capricorn(n)"><f type="i">capricorn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="car(n)"><f type="i">car</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="care(n)"><f type="i">care</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carbonary(n)"><f type="i">carbonarie </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="carbuncle(n)"><f type="i">carbuncle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carcass(n)"><f type="i">carcasse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="card(n)"><f type="i">card </form> <xpln><f type="r"> <class type="contraction">Contract</class></xpln></wordentry>

<wordentry type="h"><form lexeme="card(n)" lexeme="carding(n)"><f type="i">carde 
carding </form> <xpln><f type="r"> <class type="derivation">Deri.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cardinal(a)"><f type="i">cardinall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="careful(a)"><f type="i">carefull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="careful(a)"><f type="i">carfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carefulness(n)"><f type="i">carefulnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carell(n)"><f type="i">carell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="car(n)"><f type="i">car&ebreve;n</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caret(n)"><f type="i">caret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cark(n)"><f type="i">cark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carkenet(n)"><f type="i">carkenet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carry(n)"><f type="i">carie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carrier(n)"><f type="i">carier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carriage(n)"><f type="i">cariage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carle(n)"><f type="i">carle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carmelite(n)"><f type="i">carmelite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carnage(n)"><f type="i">carnage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carnal(a)"><f type="i">carnall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carnality(n)"><f type="i">carnalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carnation(n)"><f type="i">carnation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caraway(n)" lexeme="carowaie(n)"><f type="i">carawaie 
carowaie </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carp(n)"><f type="i">carp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carpet(n)"><f type="i">carpet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carpetknight(n)"><f type="i">carpetknight </form> <xpln><f type="r"> <class type="compound">Com</class></xpln></wordentry>

<wordentry type="h"><form lexeme="carpenter(n)"><f type="i">carpenter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carpentary(n)"><f type="i">carpentarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cart(n)"><f type="i">cart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cart(n)" lexeme="c&aacute;rting(n)"><f type="i">c&aacute;rt 
c&aacute;rting </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carter(n)"><f type="i">carter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carterlike(a)"><f type="i">carterlike</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carterly(a)"><f type="i">carterlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carve(n)"><f type="i">carue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="carver(n)"><f type="i">caruer</form> <xpln></xpln></wordentry>
</page>

<page sig="z2r" no="178">
<wordentry type="h"><form lexeme="Caxton(pn)"><f type="i">caxton</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="case(n)"><f type="i">case</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cased(a)"><f type="i">cased</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cast(v)" lexeme="c&aacute;st(n)"><f type="i">c&agrave;st 
c&aacute;st </form> <xpln><f type="r"> <class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cash(n)"><f type="i">cash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="casht(a)"><f type="i">casht</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cask(n)"><f type="i">cask</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="casket(n)"><f type="i">casket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cassock(n)"><f type="i">cassok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kestrel(n)" lexeme="keistrell(n)"><f type="i">castrel 
keistrell </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="castle(n)"><f type="i">castle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="casual(a)"><f type="i">casuall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="casuality(n)" lexeme="casualtie(n)"><f type="i">casualitie 
casualtie </form> <xpln><f type="r"> <class type="contraction">Contra.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cat(n)"><f type="i">cat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cate(n)"><f type="i">cate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="catch(v)"><f type="i">catch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="catchpoll(n)"><f type="i">catchpoll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cater(n)"><f type="i">cater</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caterpiller(n)"><f type="i">caterpiller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caterwauling(n)"><f type="i">caterwalling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cattle(n)"><f type="i">c&abreve;tle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cauldron(n)"><f type="i">caudron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cave(n)"><f type="i">caue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cavity(n)"><f type="i">cauetie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cavil(v)"><f type="i">cauill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cavillation(n)"><f type="i">cauillation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caviller(n)"><f type="i">cauiller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caucob(n)"><f type="i">caucob</form> <xpln></xpln>
<lemenote>Not in OED.</lemenote></wordentry>

<wordentry type="h"><form lexeme="caudle(n)"><f type="i">caudle 
chaudale</form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cause(n)"><f type="i">cause</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="causer(n)"><f type="i">causer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="causey(n)"><f type="i">causie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cautel(n)"><f type="i">cautele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cautelous(n)"><f type="i">cautelous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="caution(n)"><f type="i">caution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cease(v)"><f type="i">Cease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cedar(n)"><f type="i">ceder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cell(n)"><f type="i">cell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cellar(n)"><f type="i">cellar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cellarage(n)"><f type="i">cellarage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="celestial(a)"><f type="i">celestiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="celebrate(v)"><f type="i">celebrate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="celebration(n)"><f type="i">celebration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="celebrity(n)"><f type="i">celebritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="celerity(n)"><f type="i">celeritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="celibate(v)"><f type="i">celibate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="censure(n)"><f type="i">censure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="censor(n)"><f type="i">censor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="censer(n)"><f type="i">censer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="center(n)"><f type="i">center</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sentry(n)"><f type="i">centrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="centurior(n)"><f type="i">centuriors</form> <xpln></xpln>
<lemenote>Not in OED; perhaps "centurion"</lemenote></wordentry>

<wordentry type="h"><form lexeme="ceremony(n)"><f type="i">ceremonie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ceremonial(a)"><f type="i">ceremoniall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ceremoniality(n)"><f type="i">ceremonialitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="certain(a)"><f type="i">certain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="certained(a)"><f type="i">certained</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="certify(v)"><f type="i">certify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="certifying(n)"><f type="i">certifying</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="certificate(n)"><f type="i">certificat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="certification(n)"><f type="i">certification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="certiorari(n)"><f type="i">certiorare </form> <xpln><f type="r"> <class type="borrowing">Enfra</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cessment(n)"><f type="i">cesment </form> <xpln><f type="r"> Of census <class type="borrowing">
Enfran.</class></xpln>
<lemenote>Predates earliest OED example (1584).</lemenote></wordentry>

<wordentry type="h"><form lexeme="cistern(n)"><f type="i">cestern </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chaff(n)"><f type="i">chaf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chafe(v)"><f type="i">chafe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chaffer(n)"><f type="i">chafer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chafing-dish(n)"><f type="i">chafingdish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chafering(n)" lexeme="house(n)"><f type="i">chafering house</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="chain(n)"><f type="i">chain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chalice(n)"><f type="i">chalice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="challenge(n)"><f type="i">chalenge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="challenger(n)"><f type="i">chalenger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chalk(n)"><f type="i">chalk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chalk pit(n)"><f type="i">chalk pit.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cham(n)"><f type="i">cham</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chamber(n)"><f type="i">chamber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chamberlain(n)"><f type="i">chamberlane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="camlet(n)"><f type="i">chamlet.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="champ(n)"><f type="i">champ</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="champerty(n)"><f type="i">champertie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="champion(n)"><f type="i">champion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chamfering(n)"><f type="i">chamfering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chandler(n)"><f type="i">chandler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="change(n)"><f type="i">change</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="channel(n)"><f type="i">chanell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="canon(n)"><f type="i">chanon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chance(n)"><f type="i">chance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chancel(n)"><f type="i">chancell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chance-medly(n)"><f type="i">chancemedlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chancellor(n)"><f type="i">chancellor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chaw(n)"><f type="i">chaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chantry(n)"><f type="i">chauntrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chanter(n)"><f type="i">chaunter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chant(v)"><f type="i">chaunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chap(n)"><f type="i">chap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chape(n)"><f type="i">chape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chapel(n)"><f type="i">ch&abreve;pell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chaplain(n)" lexeme="chaplane(n)"><f type="i">capellan 
chaplane </form> <xpln><f type="r"> <class type="borrowing">Estfran</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chaplet(n)"><f type="i">chaplet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chapman(n)"><f type="i">chapman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chap(n)"><f type="i">chaps</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chapter(n)"><f type="i">chapiter 
chapter </form> <xpln> <class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chair(n)"><f type="i">chair</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charact(n)"><f type="i">charact</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charcoal(n)"><f type="i">charcole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chard(n)"><f type="i">chard 
ch&amacron;rd </form> <xpln><f type="r"> <class type="borrowing">Enfr,</class></xpln></wordentry>

<wordentry type="h"><form lexeme="charity(n)"><f type="i">charitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charitable(a)"><f type="i">charitable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charge(n)"><f type="i">charge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charger(n)"><f type="i">charger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chark(v)"><f type="i">chark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chary(a)"><f type="i">charie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chariot(n)"><f type="i">chariot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charet(n)"><f type="i">charet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charetter(n)" lexeme="charter(n)"><f type="i">charetter 
charter </form> <xpln><f type="r"> <class type="contraction">Contra.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="charm(n)"><f type="i">charm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charter(n)"><f type="i">charter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charterhouse(n)"><f type="i">charterhouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="charter-patent(n)"><f type="i">charterpatent</form> <xpln></xpln>
<lemenote>Predates earliest OED example</lemenote></wordentry>

<wordentry type="h"><form lexeme="charnel(n)"><f type="i">charnell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chaste(a)"><f type="i">chaste 
ch&amacron;st </form> <xpln><f type="r"> <class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chastity(n)"><f type="i">chastitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chastise(v)"><f type="i">chastis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chastisement(n)"><f type="i">chastisment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chat(v)"><f type="i">chat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chatter(v)"><f type="i">chatter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chaffinch(n)"><f type="i">chaufinch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chaldron(n)"><f type="i">chaldron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cheap(a)"><f type="i">cheap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cheapen(v)"><f type="i">cheapen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cheer(n)"><f type="i">chear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cheerful(a)"><f type="i">chearfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chearfulness(n)"><f type="i">chearfulnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cheery(a)"><f type="i">chearie</form> <xpln></xpln>
<lemenote>Predates earliest OED example</lemenote></wordentry>

<wordentry type="h"><form lexeme="cheat(n)"><f type="i">cheat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cheat-bread(n)"><f type="i">cheat bread</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chief(n)"><f type="i">chefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chieftain(n)"><f type="i">chefetain </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cheek(n)"><f type="i">chek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cheek(n)"><f type="i">cheke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="checker(n)"><f type="i">chekker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="checkmate(n)"><f type="i">chekmate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cherry(n)"><f type="i">cherie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cherish(v)"><f type="i">cherish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cherubin(n)"><f type="i">cherubin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cheripin(n)"><f type="i">cheripin </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln>
<lemenote>Not in OED</lemenote></wordentry>
</page>

<page sig="z2v" no="180">
<lemepagenote>Page 179 is omitted.</lemepagenote>

<wordentry type="h"><form lexeme="cheese(n)"><f type="i">chese</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chess(n)"><f type="i">chesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chestnut(n)" lexeme="chestane(n)"><f type="i">chesnut 
chestane </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chest(n)"><f type="i">chest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chested(a)"><f type="i">chested</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chevin(n)"><f type="i">cheuen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chevron(n)"><f type="i">cheuorn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chew(v)"><f type="i">chew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chewed(a)" lexeme="chewd(a)"><f type="i">chewed 
chewd</form> <xpln><f type="r"> <class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chewet(n)"><f type="i">chewet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chibol(n)"><f type="i">chibboll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chichlie(n)"><f type="i">chichlie</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="chid(a)"><f type="i">chid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chide(v)"><f type="i">chide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chiden(v)"><f type="i">ch&ibreve;den</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chick(n)"><f type="i">chik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chicken(n)"><f type="i">ch&ibreve;ken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chiks(n)"><f type="i">chiks</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chikens(n)"><f type="i">ch&ibreve;kens</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chickweed(n)"><f type="i">chikwede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chill(v)"><f type="i">chill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="child(n)"><f type="i">childe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="childish(a)"><f type="i">childish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="childer(n)"><f type="i">childer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="childeren(n)" lexeme="children(n)" lexeme="childern(n)"><f type="i">childeren 
children
childern</form> <xpln><f type="r"> <class type="contraction">Contra.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="Chiltern(pn)"><f type="i">chiltern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chilver(n)"><f type="i">chiluer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chime(v)"><f type="i">chime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chimer(n)"><f type="i">chimer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chimer(n)"><f type="i">chimere </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chin(n)"><f type="i">chin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chine(n)"><f type="i">chine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chincough(n)"><f type="i">chincowgh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chink(n)"><f type="i">chink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chip(n)"><f type="i">chip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chipt(a)"><f type="i">chipt </form> <xpln><f type="r"> <class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chip-axe(n)"><f type="i">chipax </form> <xpln><f type="r"> <class type="contraction">Cont.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="church(n)"><f type="i">chirch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="churchyard(n)"><f type="i">chirchyard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="churchwarden(n)"><f type="i">chirchwarden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="churching(n)"><f type="i">chirching</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chirograph(n)"><f type="i">chirograph </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="chirp(v)"><f type="i">chirp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="churn(n)"><f type="i">chirn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chit(n)"><f type="i">chit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chitterling(n)"><f type="i">chitterling.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chitty(a)" lexeme="wren(n)"><f type="i">chittie wren</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="choke(n)"><f type="i">chok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="choke(n)"><f type="i">choke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="choler(n)"><f type="i">choler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="choleric(a)"><f type="i">cholerik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cholerical(a)"><f type="i">cholericall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chough(n)"><f type="i">chough</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chop(v)"><f type="i">chop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chose(v)"><f type="i">chose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="choice(n)"><f type="i">choyce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chokes(v)"><f type="i">choks</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chop-loge(n)"><f type="i">choplotche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chop-logic(n)"><f type="i">choplogik.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chomlie(n)"><f type="i">chomlie</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="chrism(n)"><f type="i">chrism</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Christ(pn)"><f type="i">Christ</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Christian(n)"><f type="i">christiane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="christned(a)"><f type="i">christned </form> <xpln><f type="r"> <class type="contraction">Contract
for</class></xpln>
<lemenote>Contraction for "christened" (next entry).</lemenote></wordentry>

<wordentry type="h"><form lexeme="christened(a)"><f type="i">christened</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chronicle(n)"><f type="i">chronicle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chub(n)"><f type="i">chub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chuff(n)"><f type="i">chuf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chok(v)"><f type="i">chok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chune(n)"><f type="i">chune</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="churl(n)"><f type="i">churle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="churlish(n)"><f type="i">churlish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="choose(v)"><f type="i">chuse.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chux(n)" lexeme="chucks(n)"><f type="i">chux 
Chuks </form> <xpln><f type="r"> <class type="inflection">Ori.
Plurall</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cycle(n)"><f type="i">C&ibreve;cle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cygnet(n)"><f type="i">cygnet </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cipher(n)"><f type="i">c&ibreve;fer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ciphering(n)"><f type="i">cifering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cymbal(n)"><f type="i">cimball </form> <xpln><f type="r"> <class type="borrowing"><emend err="Efran.">Enfran.</emend></class></xpln></wordentry>

<wordentry type="h"><form lexeme="cinnamon(n)"><f type="i">cinamon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cypress(n)"><f type="i">cipresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cypress(n)"><f type="i">cypresse </form> <xpln><f type="r"> <class type="borrowing">Enfran</class></xpln></wordentry>

<wordentry type="h"><form lexeme="circle(n)"><f type="i">circle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="circuit(n)"><f type="i">circuit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="circumlocution(n)"><f type="i">circumlocution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="circumcise(v)"><f type="i">circumcise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="circumcision(n)"><f type="i">circumcision</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="circumference(n)"><f type="i">circumference</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="circumspect(a)"><f type="i">circumspect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="circumstance(n)"><f type="i">circumstance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scissors(n)"><f type="i">cisers</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cite(v)"><f type="i">cite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="city(n)"><f type="i">citie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="citation(n)"><f type="i">citation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="citizen(n)"><f type="i">citisen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cittern(n)"><f type="i">citern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="citron(n)"><f type="i">citron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="civil(a)"><f type="i">ciuil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="civility(n)"><f type="i">ciuilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clad(a)"><f type="i">Clad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clack(n)"><f type="i">clak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clacker(n)"><f type="i">claker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clay(n)"><f type="i">claie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clam(n)"><f type="i">clame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clam(n)"><f type="i">clam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clammy(a)"><f type="i">clammie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clamor(n)"><f type="i">clamor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clamorous(a)"><f type="i">clamorous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clamp(n)"><f type="i">clamp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clamper(n)"><f type="i">clamper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clang(n)"><f type="i">clang</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clap(n)"><f type="i">clap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clapper(n)"><f type="i">clapper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="claret(n)"><f type="i">claret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clarion(n)"><f type="i">clarion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clarify(v)"><f type="i">clarify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clark(n)" lexeme="clerk(n)"><f type="i">clark 
clerk </form> <xpln><f type="r"> <class type="borrowing">Enfran</class></xpln></wordentry>

<wordentry type="h"><form lexeme="clasp(n)"><f type="i">clasp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clash(v)"><f type="i">clash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cleat(n)"><f type="i">clat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clatter(n)"><f type="i">clatter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clatter-basket(n)"><f type="i">clatter basket</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="clave(n)"><f type="i">claue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clavicord(n)"><f type="i">clauicord</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="claw(n)"><f type="i">claw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="claw-back(n)"><f type="i">clawbak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clause(n)"><f type="i">clause</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clean(a)"><f type="i">clean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clemency(n)"><f type="i">clemencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cleanly(adv)"><f type="i">clenlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cleanliness(n)"><f type="i">cleanlinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clear(a)"><f type="i">clear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cleared(a)"><f type="i">cleared</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cleave(v)"><f type="i">cleaue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cleft(a)"><f type="i">cleft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cleg(n)"><f type="i">cleg</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cleanse(v)"><f type="i">clense</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clergy(n)"><f type="i">clergie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clew(n)"><f type="i">clew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="client(n)"><f type="i">client</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cliff(n)"><f type="i">clif</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clift(n)"><f type="i">clift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="climb(v)"><f type="i">clim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clime(n)"><f type="i">clime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="climate(n)"><f type="i">climate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clinch(v)"><f type="i">clinch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cling(v)"><f type="i">cling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clinge(v)"><f type="i">clinge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clink(n)"><f type="i"><emend err="olink">clink</emend></form> <xpln></xpln></wordentry>
</page>

<page sig="z3r" no="181">
<wordentry type="h"><form lexeme="clip(n)"><f type="i">clip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clyster(n)" lexeme="glyster(n)"><f type="i">clister 
glister </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="clod(n)"><f type="i">clod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clog(n)"><f type="i">clog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cloy(v)"><f type="i">cloie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cloyed(a)"><f type="i">cloied</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cloister(n)"><f type="i">cloyster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clock(n)"><f type="i">clok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cloke(n)"><f type="i">cloke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="close(n)"><f type="i">cl&ograve;se 
close</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="closet(n)"><f type="i">closet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clot(n)"><f type="i">clot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cloth(n)" lexeme="clothe(n)"><f type="i">cloth 
clothe </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clothes(n)"><f type="i">cloth&egrave;s</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clothier(n)"><f type="i">clothy&egrave;r</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clove(n)"><f type="i">cloue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cloven(a)"><f type="i">clouen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clown(n)"><f type="i">cloun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clownish(a)"><f type="i">clounish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cloud(n)"><f type="i">cloud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clout(n)"><f type="i">clout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="club(n)"><f type="i">club</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clubbish(a)"><f type="i">clubbish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="club-head(n)"><f type="i">clubhead</form> <xpln></xpln>
<lemenote>Predates earliest OED citation.</lemenote></wordentry>

<wordentry type="h"><form lexeme="clung(a)"><f type="i">clung</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clumperton(n)"><f type="i">clumperton</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cluster(n)"><f type="i">cluster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="clutter(n)"><f type="i">clutter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cob(n)"><f type="i">Cob</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cobble(n)"><f type="i">coble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cobbler(n)"><f type="i">cobler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cobhead(n)"><f type="i">cobhead</form> <xpln></xpln>
<lemenote>No OED citation.</lemenote></wordentry>

<wordentry type="h"><form lexeme="cobunt(n)"><f type="i">cobunt</form> <xpln></xpln>
<lemenote>No OED citation.</lemenote></wordentry>

<wordentry type="h"><form lexeme="cobweb(n)"><f type="i">cobweb</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cocatrice(n)"><f type="i">cocatrice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cockle(n)"><f type="i">cokle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cod(n)"><f type="i">cod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="codpiece(n)"><f type="i">codpece</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cof(a)"><f type="i">cof</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coffin(n)"><f type="i">coffin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coffer(n)"><f type="i">cofer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coffret(n)"><f type="i">cofret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cofferer(n)"><f type="i">coferer.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cog(n)"><f type="i">cog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cogger(n)"><f type="i">cogger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coif(n)"><f type="i">coif </form> <xpln><f type="r"> quaif</xpln></wordentry>

<wordentry type="h"><form lexeme="quoit(n)"><f type="i">coyt </form> <xpln><f type="r"> quait</xpln></wordentry>

<wordentry type="h"><form lexeme="coin(n)"><f type="i">coin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coiner(n)"><f type="i">coiner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cock(n)"><f type="i">cok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cook(n)"><f type="i">coks 
cokes} </form> <xpln><f type="r"> <class type="inflection">Plural
Sing.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cockal(n)"><f type="i">cokall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cocker(n)"><f type="i">cokker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cockering(n)"><f type="i">cokkering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cockerel(n)"><f type="i">cokkrell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cockish(a)"><f type="i">cokkish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cockfight(n)"><f type="i">cokfight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cockney(n)"><f type="i">coknie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cokneg(n)"><f type="i">cokneg</form> <xpln></xpln>
<lemenote>Not in OED.</lemenote></wordentry>

<wordentry type="h"><form lexeme="colander(n)"><f type="i">colander</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collop(n)"><f type="i">colap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="culler(n)"><f type="i">culler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cole(n)"><f type="i">cole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cold(a)"><f type="i">cold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collet(n)" lexeme="collect(n)"><f type="i">collet. 
collect </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cole-rake(n)"><f type="i">colerak.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collier(n)"><f type="i">colyer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coal(n)"><f type="i">col</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collect(v)"><f type="i">collect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collector(n)"><f type="i">collector</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="college(n)"><f type="i">coll&egrave;ge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collegiate(n)"><f type="i">collegiate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="college(n)"><f type="i">college</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collection(n)"><f type="i">collection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collectary(n)"><f type="i">collectarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collation(n)"><f type="i">collation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="collusion(n)"><f type="i">collusion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coalmouse(n)"><f type="i">colmouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="colt(n)"><f type="i">colt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coltish(a)"><f type="i">coltish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="columbine(n)"><f type="i">columbine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coaly(a)"><f type="i">colie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="colebrand(n)"><f type="i">colebrand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="colewort(n)"><f type="i">colewort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comb(n)"><f type="i">c&ograve;m</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="come(v)"><f type="i">come</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comb-case(n)"><f type="i">comecase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="command(n)"><f type="i">command</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commandment(n)"><f type="i">commandment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="combat(n)"><f type="i">combat </form> <xpln><f type="r"> <class type="inflection">without e.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="combatting(n)"><f type="i">comb&abreve;tting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comedy(n)"><f type="i">comedie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commence(v)"><f type="i">commence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commencement(n)"><f type="i">commencement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commend(v)"><f type="i">commend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commendation(n)"><f type="i">commendation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commendable(a)"><f type="i">commendable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comment(n)"><f type="i">comment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commentary(n)"><f type="i">commentarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comet(n)"><f type="i">comete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commit(v)"><f type="i">commit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commission(n)"><f type="i">commission</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commissary(n)"><f type="i">commissarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commodious(a)"><f type="i">commodious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commodity(n)"><f type="i">commoditie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="common(n)"><f type="i">common</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="commonalty(n)"><f type="i">commonaltie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="community(n)"><f type="i">communitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="communicate(v)"><f type="i">communicate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="communication(n)"><f type="i">communication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compact(n)"><f type="i">compact</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compare(v)"><f type="i">compare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comparison(n)"><f type="i">comparison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compassion(n)"><f type="i">compassion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compatible(a)"><f type="i">compatible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compatibility(n)"><f type="i">compatibilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compeer(n)"><f type="i">compear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compel(v)"><f type="i">compell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compendious(a)"><f type="i">compendious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compendiary(n)"><f type="i">compendiarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="competitor(n)"><f type="i">competitor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compile(v)"><f type="i">compile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="complain(v)"><f type="i">complain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="complaint(n)"><f type="i">complaint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="complexion(n)"><f type="i">complexion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="complices(n)"><f type="i">complices</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compound(n)"><f type="i">compound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compose(v)"><f type="i">compose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compost(n)"><f type="i">compost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="composition(n)"><f type="i">composition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comprehend(v)"><f type="i">comprehend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comprehension(n)"><f type="i">comprehension</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comprehensible(a)"><f type="i">comprehensible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comprise(v)"><f type="i">comprise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compromit(v)"><f type="i">compr&obreve;mit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compromise(v)"><f type="i">compr&obreve;m&ibreve;s</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compulsion(n)"><f type="i">compulsion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conceal(v)"><f type="i">conceal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="concealment(n)"><f type="i">concealment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conceit(n)"><f type="i">conceit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conceive(v)"><f type="i">conceiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consent(v)"><f type="i">concent 
consent </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="concern(n)"><f type="i">concern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="concerning(pp)"><f type="i">concerning</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conception(n)"><f type="i">conception</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conclude(v)"><f type="i">conclude</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conclusion(n)"><f type="i">conclusion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="concord(n)"><f type="i">concord</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="concordance(n)"><f type="i">concordance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="concubine(n)"><f type="i">concubine</form> <xpln></xpln></wordentry>
</page>

<page sig="z3v" no="182">
<wordentry type="h"><form lexeme="concupiscence(n)"><f type="i">concupiscence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="concur(v)"><f type="i">concur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="condemn(v)"><f type="i">condemn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="condemnation(n)"><f type="i">condemnation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="condescend(v)"><f type="i">condiscend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="condition(n)"><f type="i">condition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conditional(a)"><f type="i">conditionall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conditionally(adv)"><f type="i">conditionally</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conduct(n)" lexeme="conduit(n)"><f type="i">conduct 
cundit </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="confection(n)"><f type="i">confection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confect(n)" lexeme="cumfit(n)"><f type="i">confects 
cumfits </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="confederate(v)"><f type="i">confederate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confederacy(n)"><f type="i">confederacie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confer(v)"><f type="i">confer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conference(n)"><f type="i">conference</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confess(v)"><f type="i">confesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confession(n)"><f type="i">confession</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confidence(n)"><f type="i">confidence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confirm(v)"><f type="i">confirm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confirmation(n)"><f type="i">confirmation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confiscate(v)"><f type="i">confiscate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confiscation(n)"><f type="i">confiscation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conflict(n)"><f type="i">conflict</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confound(v)"><f type="i">confound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confute(v)"><f type="i">confute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confutation(n)"><f type="i">confutation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confuse(v)"><f type="i">confuse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="confusion(n)"><f type="i">confusion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="congeal(v)"><f type="i">congeal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="congeald(a)"><f type="i">congeald </form> <xpln><f type="r"><class type="contraction">Cont.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="congregate(v)"><f type="i">congregate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="congregation(n)"><f type="i">congregation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="congrue(v)"><f type="i">congrew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="congruity(n)"><f type="i">congruitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="congruence(n)"><f type="i">congrewence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conjure(v)"><f type="i">coniure 
coniur </form> <xpln><f type="r"> <class type="accent">Distin.
without e,</class></xpln></wordentry>

<wordentry type="h"><form lexeme="conjurer(n)" lexeme="rer(n)"><f type="i">coni&ubreve;rer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conjuration(n)"><f type="i">coniuration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conjurate(v)" lexeme="rate(n)"><f type="i">coni&ubreve;rate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conject(v)"><f type="i">coniect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conjector(n)"><f type="i">coniectour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conjecture(n)"><f type="i">coniectur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conjectural(a)"><f type="i">coniecturall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conquest(n)"><f type="i">conquest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conquer(v)"><f type="i">conquer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conscience(n)"><f type="i">conscience</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consecrate(v)"><f type="i">consecrate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consent(v)"><f type="i">consent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consequence(n)"><f type="i">consequence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conserve(v)"><f type="i">conserue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conservation(n)"><f type="i">conseruation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consider(v)"><f type="i">consider</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consideration(n)"><f type="i">consideration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consist(v)"><f type="i">consist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consistory(n)"><f type="i">consistorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consolation(n)"><f type="i">consolation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consort(n)"><f type="i">consorte 
consort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conspire(v)"><f type="i">conspire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conspire(v)" lexeme="tor(n)"><f type="i">conspir&abreve;tor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conspiracy(n)"><f type="i">conspiracie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="constant(a)"><f type="i">constant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="constancy(n)"><f type="i">constancie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="construe(v)"><f type="i">constrew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conster(v)"><f type="i">conster </form> <xpln><f type="r"> <class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="constrain(v)"><f type="i">constrain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="constraint(n)"><f type="i">constraint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="construction(n)"><f type="i">construction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consume(v)"><f type="i">consume</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consummation(n)"><f type="i">consummation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consumption(n)"><f type="i">consumption</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consult(v)"><f type="i">consult</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="consultation(n)"><f type="i">consultation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contagion(n)"><f type="i">contagion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contagious(a)"><f type="i">contagious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contain(v)"><f type="i">contain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contents(n)"><f type="i">contents</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contend(v)"><f type="i">contend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="content(n)"><f type="i">content</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contentation(n)"><f type="i">contentation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contentment(n)"><f type="i">contentment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contempt(n)"><f type="i">contempt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contemn(v)"><f type="i">contemn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contentions(n)"><f type="i">contentions</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contention(n)"><f type="i">contention</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contemptuous(a)"><f type="i">contemptuous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contemptible(a)"><f type="i">contemptible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="continue(v)"><f type="i">continew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="continuance(n)"><f type="i">continewance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="continent(n)"><f type="i">continent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="continence(n)"><f type="i">continence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="continency(n)"><f type="i">continencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contract(n)"><f type="i">contract</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contraction(n)"><f type="i">contraction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contrary(a)"><f type="i">contr&abreve;rie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contrary(a)"><f type="i">contr&amacron;rie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contrariety(n)"><f type="i">contrari&euml;tie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contribute(v)"><f type="i">contribute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contribution(n)"><f type="i">contribution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contrive(v)"><f type="i">contriue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contrite(a)"><f type="i">contrite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="contrition(n)"><f type="i">contrition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="controversy(n)"><f type="i">controuersie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="control(n)"><f type="i">controll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="controller(n)"><f type="i">controller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convey(v)"><f type="i">conueie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conveyance(n)"><f type="i">conueiance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convert(v)"><f type="i">conu&egrave;rt 
conu&eacute;rt </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conversion(n)"><f type="i">conuersion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convertible(a)"><f type="i">conuertible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convict(a)"><f type="i">conuict</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convent(n)"><f type="i">conuent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convention(n)"><f type="i">conuention</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conventicle(n)"><f type="i">conuenticle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convocation(n)"><f type="i">conuocation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convocate(v)"><f type="i">conuocate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="convulsion(n)"><f type="i">convulsion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cook(n)"><f type="i">cook</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cuckold(n)"><f type="i">cookold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coop(n)"><f type="i">coop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cooper(n)"><f type="i">cooper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cop(n)"><f type="i">cop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="copt(n)"><f type="i">copt </form> <xpln><f type="r">  <class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="cope(n)"><f type="i">cope</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coped(a)"><f type="i">coped</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="copt(a)"><f type="i">copt</form> <xpln><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="copartner(n)"><f type="i">copartner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coparcener(n)"><f type="i">coparcener</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coparcenery(n)"><f type="i">coparcenerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="copy(n)"><f type="i">copie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="couple(n)"><f type="i">cople</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="couplement(n)"><f type="i">coplement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="copyhold(n)"><f type="i">copihold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="copious(a)"><f type="i">copious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="copper(n)"><f type="i">copper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="copporas(n)"><f type="i">coppresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coptank(n)"><f type="i">coptank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coral(n)"><f type="i">corall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="courage(n)"><f type="i">corage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="core(n)"><f type="i">core</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cord(n)"><f type="i">corde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cordwainer(n)"><f type="i">cordwaner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coriander(n)"><f type="i">coriander</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cork(n)"><f type="i">cork</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cormorant(n)"><f type="i">cormerant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corn(n)"><f type="i">corn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corner(n)"><f type="i">corner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cornet(n)"><f type="i">cornet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Cornish(n)"><f type="i">cornish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coronal(n)"><f type="i">coronall</form> <xpln></xpln></wordentry>
</page>

<page sig="z4r" no="183">
<wordentry type="h"><form lexeme="corpse(n)" lexeme="corse(n)"><f type="i">corps
corse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corse(n)"><f type="i">corse </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corporal(a)"><f type="i">corporall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corporation(n)"><f type="i">corporation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corpulent(a)"><f type="i">corpulent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="correct(n)"><f type="i">correct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="correction(n)"><f type="i">correction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="correspondent(n)"><f type="i">correspondent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="correspondence(n)"><f type="i">corresp&obreve;ndence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corroborate(v)"><f type="i">corroborate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corslet(n)"><f type="i">corslet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corrupt(v)"><f type="i">corrupt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corruptor(n)"><f type="i">corruptor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="corruption(n)"><f type="i">corruption</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cosen(v)"><f type="i">c&ograve;sen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cosinage(n)"><f type="i">cosinage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cost(n)"><f type="i">coste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="costmary(n)"><f type="i">costemarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="costive(a)"><f type="i">costif</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="costiveness(n)"><f type="i">costifnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="costard(n)"><f type="i">costard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="costermunger(n)"><f type="i">costerdmunger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cottage(n)"><f type="i">cotage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cote(n)"><f type="i">cote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cotton(n)"><f type="i">coten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="couch(v)"><f type="i">couch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="covent(n)"><f type="i">c&ograve;uent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="covin(n)"><f type="i">couin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="covey(v)"><f type="i">coueie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="covenant(n)"><f type="i">couenant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cover(v)"><f type="i">c&ograve;uer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="covert(a)"><f type="i">couert</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coverlet(n)"><f type="i">couerlet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="covet(v)"><f type="i">couet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="covetous(n)"><f type="i">couetous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cowl(n)"><f type="i">coul</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="could(v)"><f type="i">could</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="colour(n)"><f type="i">couler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="counsel(n)"><f type="i">counsell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="council(n)"><f type="i">councell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="counsellor(n)"><f type="i">counsellor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="count(n)"><f type="i">count</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="counter(n)"><f type="i">counter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="countenance(n)"><f type="i">countenance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="counterfeat(n)" lexeme="counterfet(n)"><f type="i">counterfeat 
counterfet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="counterpoise(n)"><f type="i">counterpoys</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="counterpoint(n)"><f type="i">counterpoint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="counterchange(n)"><f type="i">counterchange</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="countercharge(n)"><f type="i">countercharge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="countercheck(n)"><f type="i">counterchek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="countermand(n)"><f type="i">countermand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="countermure(n)"><f type="i">countermure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="country(n)"><f type="i">countrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cower(n)"><f type="i">cour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="course(n)"><f type="i">course</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="court(n)"><f type="i">court</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="courtier(n)"><f type="i">courtyer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cow(n)"><f type="i">cow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coup(n)"><f type="i">coup</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coot(n)"><f type="i">cout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coward(n)" lexeme="cowheard(n)"><f type="i">coward 
cowheard </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cowslip(n)"><f type="i">cowslip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crab(n)"><f type="i">Crab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crable(n)"><f type="i">crable</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="cradle(n)"><f type="i">cradle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="craft(n)"><f type="i">craft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crafty(a)"><f type="i">craftie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="craftsman(n)"><f type="i">craftsman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crack(n)"><f type="i">crak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crake(n)"><f type="i">crake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="craknel(n)"><f type="i">craknell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crackle(v)"><f type="i">crakle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crag(n)"><f type="i">crag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="craggy(a)"><f type="i">craggie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cram(n)"><f type="i">cram</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cramp(n)"><f type="i">cramp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crampiron(n)"><f type="i">crampiron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crammock(n)"><f type="i">cramok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="campring(n)"><f type="i">campring</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="crank(n)"><f type="i">crank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crane(n)"><f type="i">crane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cranecoler(n)"><f type="i">cranecoler</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="craneshank(n)"><f type="i">craneshank</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="crash(n)"><f type="i">crash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="craze(v)"><f type="i">crase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crazed(a)"><f type="i">crased</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cratch(n)"><f type="i">cratch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crave(v)"><f type="i">craue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="craven(a)"><f type="i">crauen 
crauin </form> <xpln><f type="r"> <class type="accent">Monosyl
Bissillab.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="crall(v)"><f type="i">crall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crest(n)"><f type="i">creast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="creak(v)"><f type="i">creak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="creed(n)"><f type="i">crede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="credence(n)"><f type="i">credence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="credit(n)"><f type="i">credit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="creditor(n)"><f type="i">creditor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="credible(a)"><f type="i">credible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="credulity(n)"><f type="i">credulitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="credulous(a)"><f type="i">credulous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="creep(v)"><f type="i">crepe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="creeper(n)"><f type="i">creper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crept(a)"><f type="i">crept</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cress(n)"><f type="i">cresses</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crevice(n)"><f type="i">creuis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crew(n)"><f type="i">crew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crewel(n)"><f type="i">crewell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crevet(n)"><f type="i">creuet</form> <xpln></xpln>
<lemenote>Predates earliest OED citation</lemenote></wordentry>

<wordentry type="h"><form lexeme="crib(n)"><f type="i">crib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cribble(n)"><f type="i">crible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cryal(n)"><f type="i">criell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cricket(n)"><f type="i">criket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crickle(n)"><f type="i">crikle</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1883)</lemenote></wordentry>

<wordentry type="h"><form lexeme="crime(n)"><f type="i">crime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="criminatory(n)"><f type="i">criminatorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crimsin(n)"><f type="i">crimosin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cripple(n)"><f type="i">criple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crisp(a)"><f type="i">crisp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crystal(n)"><f type="i">cristall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crystaline(n)"><f type="i">cristalline</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cringer(n)"><f type="i">cringer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cringe(v)"><f type="i">cringe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="croak(n)"><f type="i">crok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crocodile(n)"><f type="i">crocodile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crop(n)"><f type="i">crop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cropt(a)"><f type="i">cropt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crook(n)"><f type="i">croke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crooked(a)"><f type="i">croked</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cross(n)"><f type="i">crosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crossbow(n)"><f type="i">crosbow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crow-toe(n)"><f type="i">crowtoes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crow(n)"><f type="i">cro</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crow(n)"><f type="i">cr&oacute;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crowd(n)"><f type="i">croud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crowder(n)"><f type="i">crouder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="croup(n)"><f type="i">croup</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crouk(v)"><f type="i">crouk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crown(n)"><f type="i">croun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crowner(n)"><f type="i">crouner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crouch(v)"><f type="i">crouch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crucify(v)"><f type="i">crucify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crucifix(n)"><f type="i">crucifix</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crutch(n)"><f type="i">cruches</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curd(n)"><f type="i">crud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crud(n)"><f type="i">cruds</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crawl(v)"><f type="i">crule</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crumb(n)"><f type="i">crum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="croup(n)"><f type="i">crup</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crupper(n)"><f type="i">crupper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cruse(n)"><f type="i">cruse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crush(v)"><f type="i">crush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crusht(v)"><f type="i">chrusht</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crust(n)"><f type="i">crust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cry(v)"><f type="i">cry</form> <xpln></xpln></wordentry>
</page>

<page sig="z4v" no="184">
<wordentry type="h"><form lexeme="crying(n)"><f type="i">crying</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="crier(n)"><f type="i">cryer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cub(n)"><f type="i">Cub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cube(n)"><f type="i">cube</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cubit(n)"><f type="i">cubit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cucumber(n)"><f type="i">cucumber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cudgel(n)"><f type="i">cudgel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cud(n)"><f type="i">cud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cuff(n)"><f type="i">cuf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cuckoo(n)"><f type="i">cukcow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cull(v)"><f type="i">cull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="culpable(a)"><f type="i">culpable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="culver(n)"><f type="i">culuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="culvering(n)"><f type="i">culuering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="come(v)"><f type="i">cum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comely(a)"><f type="i">cumlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cumber(v)"><f type="i">cumber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cumbersome(a)"><f type="i">cumbersom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comeliness(n)"><f type="i">cumlinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comfort(n)"><f type="i">cumfort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="comfortable(a)"><f type="i">cumfortable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="company(n)"><f type="i">cumpanie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="companion(n)"><f type="i">cumpanion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compass(n)"><f type="i">cumpas</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compass(n)"><f type="i">cumpases</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compassed(a)"><f type="i">cumpassed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="compast(a)"><f type="i">cumpast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cun(v)"><f type="i">Cun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cunning(n)"><f type="i">cunning</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="conger(n)" lexeme="er(n)"><f type="i">cung`er</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cup(n)"><f type="i">cup</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cupboard(n)"><f type="i">cupboord</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cur(n)"><f type="i">cur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cure(v)"><f type="i">cure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curb(n)"><f type="i">curb</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curl(n)"><f type="i">curle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curate(n)"><f type="i">curate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cuirass(n)"><f type="i">curace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curious(a)"><f type="i">curious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curry-favour(n)"><f type="i">curifauor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curry(n)"><f type="i">currie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="courrier(n)"><f type="i">currier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="currant(n)"><f type="i">currant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="currish(a)"><f type="i">currish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cursed(a)"><f type="i">cursed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curst(a)"><f type="i">curst</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="courtesy(n)" lexeme="curtsy(n)"><f type="i">curtesie 
curtsie </form> <xpln><f type="r"><class type="derivation">Deri.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="curtain(n)"><f type="i">curtin 
curtain </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="curtal(n)"><f type="i">curtall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="custard(n)"><f type="i">custard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cushion(n)"><f type="i">cushion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="custom(n)"><f type="i">custom.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="customer(n)"><f type="i">customer.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="customary(n)"><f type="i">customarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cut(v)"><f type="i">cut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cute(a)"><f type="i">cute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cutpurse(n)"><f type="i">cutpurse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cutthroat(n)"><f type="i">cutthrote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cutler(n)"><f type="i">cutler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cutlery(n)"><f type="i">cutlerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cursory(a)"><f type="i">cursorie</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="d"><alpha>D</alpha>

<wordentry type="h"><form lexeme="dab(n)"><f type="i">Dab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dable(v)"><f type="i">d&abreve;ble.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dace(n)"><f type="i">dace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dad(n)"><f type="i">dad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="daddy(n)"><f type="i">daddie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="daffadil(n)"><f type="i">daffadill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dag(n)"><f type="i">dag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="daggle(n)"><f type="i">d&abreve;gle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dagtail(n)" lexeme="daggletail(n)"><f type="i">dagtail 
dagletail </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="day(n)"><f type="i">daie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="daily(adv)"><f type="i">dailie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dainty(n)"><f type="i">daintie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dale(n)"><f type="i">dale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dam(n)"><f type="i">dam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dame(n)"><f type="i">dame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="damn(v)"><f type="i">damn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="damnation(n)"><f type="i">damnation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="damp(v)"><f type="i">damp.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dampt(a)"><f type="i">dampt </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="damask(n)"><f type="i">damask</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="damosel(n)" lexeme="damsel(n)"><f type="i">damosel 
damsel </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class> 
<class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="dampish(a)"><f type="i">dampish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="damage(n)"><f type="i">dammage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dance(n)"><f type="i">dance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dancing(n)"><f type="i">dancing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dandy(n)"><f type="i">dandie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="danger(n)"><f type="i">danger.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dandle(v)"><f type="i">dandle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dank(a)"><f type="i">dank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dankish(a)"><f type="i">dankish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dapper(a)"><f type="i">dapper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dare(v)"><f type="i">dar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dare(v)"><f type="i">dare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dark(n)"><f type="i">dark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="darkness(n)"><f type="i">darknesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="darling(n)" lexeme="dearling(n)"><f type="i">darling 
dearling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="darnel(n)"><f type="i">darnell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dart(n)"><f type="i">darte</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dazzle(v)"><f type="i">d&amacron;sle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dash(v)"><f type="i">dash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dazy(n)"><f type="i">dasie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dastard(n)"><f type="i">dastard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="date(n)"><f type="i">date</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="daw(n)"><f type="i">daw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="daub(n)"><f type="i">daub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="daunt(v)"><f type="i">daunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="daughter(n)"><f type="i">daughter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dawn(n)"><f type="i">daun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dawning(n)"><f type="i"><emend err="dauniug">dauning</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deacon(n)"><f type="i">Deacon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deaf(a)"><f type="i">deaf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deafness(n)"><f type="i">deafnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deal(n)"><f type="i">deal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dean(n)"><f type="i">dean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deanry(n)"><f type="i">deanrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dear(a)"><f type="i">dear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dearling(n)"><f type="i">dearling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="death(n)"><f type="i">death</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="debate(n)"><f type="i">debate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="debase(v)"><f type="i">debase.</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="debar(v)"><f type="i">debar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="debonair(a)"><f type="i">debonair</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decay(v)"><f type="i">decaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decadence(n)"><f type="i">decadence </form> <xpln><f type="r"><class type="borrowing"><emend err="Eufran.">Enfran.</emend></class></xpln></wordentry>

<wordentry type="h"><form lexeme="deceive(v)" lexeme="deceit(n)"><f type="i">deceiue deceit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decease(v)"><f type="i">decease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deceased(a)"><f type="i">deceased</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decaiuer(n)"><f type="i">decaiuer</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="decemvirate(n)"><f type="i">decemuirat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decent(a)"><f type="i">decent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decency(n)"><f type="i">decencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decide(v)"><f type="i">decide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decision(n)"><f type="i">decision</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decypher(v)"><f type="i">decifer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deciphring(n)" lexeme="decifering(n)"><f type="i">decifring 
decifering </form> <xpln><f type="r"> <class type="contraction">Contra.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="declaim(v)"><f type="i">declame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="declamation(n)"><f type="i">declamation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="declamatory(a)"><f type="i">declamatorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="declare(v)"><f type="i">declare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="declaration(n)"><f type="i">declaration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decline(v)"><f type="i">dicline</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="declination(n)" lexeme="declension(n)"><f type="i">declination 
<emend err="declenson">declension</emend> </form> <xpln><f type="r"><class type="contraction">Enfra.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="decoct(n)"><f type="i">decoct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decoction(n)"><f type="i">decoction</form> <xpln></xpln></wordentry>
</page>

<page sig="aa1r" no="185">
<wordentry type="h"><form lexeme="decease(n)"><f type="i">decease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decrease(v)"><f type="i">decrease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="decree(n)" lexeme="degree(n)"><f type="i">decr&egrave; 
degrees </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deed(n)"><f type="i">dede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dead(a)"><f type="i">ded</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dedicate(v)"><f type="i">dedicate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dedication(n)"><f type="i">dedication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deduct(v)"><f type="i">deduct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deduction(n)"><f type="i">deduction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deface(v)"><f type="i">deface</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="default(v)"><f type="i">defalt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defame(v)"><f type="i">defame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defamation(n)"><f type="i">defamation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defamatory(a)"><f type="i">defamatorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defeat(n)"><f type="i">defeat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defeasance(n)"><f type="i">defeasance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defect(n)"><f type="i">defect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defend(v)"><f type="i">defend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defence(n)"><f type="i">defence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defensible(a)"><f type="i">defensible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defile(v)"><f type="i">defile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deflower(v)"><f type="i">deflour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defray(v)"><f type="i">defraie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defraud(v)"><f type="i">defraud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deformd(a)"><f type="i">deformd</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deformity(n)"><f type="i">deformitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defy(v)"><f type="i">defy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="defiance(n)"><f type="i">defyance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="define(n)"><f type="i">define</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="definite(a)"><f type="i">definite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="definitive(a)"><f type="i">definitiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="degree(n)"><f type="i">degr&egrave;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="degree(n)"><f type="i">degrees</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="degrade(v)"><f type="i">degrade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="degradation(n)"><f type="i">degradation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deity(n)"><f type="i">de&iuml;tie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deify(v)"><f type="i">de&iuml;fy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deification(n)"><f type="i">deification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dairy(n)"><f type="i">deirie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dainty(n)"><f type="i">deintie </form> <xpln><f type="r"><class type="accent">ai.</class> </xpln></wordentry>

<wordentry type="h"><form lexeme="deckt(a)"><f type="i">dekt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deck(n)"><f type="i">dek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dealt(v)"><f type="i">delt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deal(n)"><f type="i">dele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delight(n)"><f type="i">delite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deliver(v)"><f type="i">deliuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delay(v)"><f type="i">delaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delicate(a)"><f type="i">delicate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delectable(a)"><f type="i">delectable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delectation(n)"><f type="i">delectation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delegate(n)"><f type="i">delegate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delve(v)"><f type="i">delue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delver(n)"><f type="i">deluer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="delude(v)"><f type="i">delude</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deluge(n)"><f type="i">deluge </form> <xpln><f type="r"><class type="borrowing">Enfr</class></xpln></wordentry>

<wordentry type="h"><form lexeme="delusion(n)"><f type="i">delusion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deem(v)"><f type="i">deme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="demean(v)"><f type="i">demain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="demand(n)"><f type="i">demand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="demean(v)"><f type="i">demean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="demeanor(n)"><f type="i">demeanor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="demolish(v)"><f type="i">demolish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="demur(v)"><f type="i">demur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="demure(n)"><f type="i">demure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deem(v)"><f type="i">deme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="den(n)"><f type="i">den</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="denison(n)"><f type="i">denison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="denounce(v)" lexeme="denunciation(n)"><f type="i">denounce 
denuntiation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dent(n)"><f type="i">dent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dented(a)"><f type="i">dented</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deny(v)"><f type="i">deny</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="denial(n)"><f type="i">deniall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deep(a)"><f type="i">depe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="depth(n)"><f type="i">depth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="depart(v)"><f type="i">depart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="departure(n)"><f type="i">departure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="depend(v)"><f type="i">depend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deponent(n)"><f type="i">deponent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="depose(v)"><f type="i">depose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deposition(n)"><f type="i">deposition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deprave(v)"><f type="i">depraue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deprive(v)"><f type="i">depriue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deprivation(n)"><f type="i">depriuation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deputy(n)"><f type="i">deputie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="depute(v)"><f type="i">depute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dear(a)"><f type="i">dere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="deride(v)"><f type="i">deride</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="derision(n)"><f type="i">derision</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="derive(v)"><f type="i">deriue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="derivative(a)"><f type="i">deriuatiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="derivation(n)"><f type="i">deriuation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dearth(n)"><f type="i">derth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="descant(n)"><f type="i">descant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="describe(v)"><f type="i">describe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="description(n)"><f type="i">description</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desert(n)"><f type="i">des&egrave;rt 
des&eacute;rt </form> <xpln><f type="r"><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="deserve(v)"><f type="i">deserue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desire(n)"><f type="i">desire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desirous(a)"><f type="i">desirous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desist(v)"><f type="i">desist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desk(n)"><f type="i">desk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desolate(a)"><f type="i">desolate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="despair(n)"><f type="i">despare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desperate(a)"><f type="i">desperate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desperation(n)"><f type="i">desperation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="despise(v)"><f type="i">despise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="despite(pp)"><f type="i">despite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="despiteful(a)"><f type="i">despitefull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="destiny(n)"><f type="i">destinie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="destinate(a)"><f type="i">destinate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="destitute(a)"><f type="i">destitute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="destroy(v)"><f type="i">destroie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="desultory(a)"><f type="i">desultorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="debt(n)"><f type="i">det</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="detain(v)"><f type="i">detain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="detect(v)"><f type="i">detect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="detection(n)"><f type="i">detection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="detinue(n)"><f type="i">detinew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="determ(v)"><f type="i">determ</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="determine(v)"><f type="i">determin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="determination(n)"><f type="i">determination</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="detest(v)"><f type="i">detest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="detestable(a)"><f type="i">detestable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="detract(v)"><f type="i">detract</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="detriment(n)"><f type="i">detriment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="divide(v)"><f type="i">deuide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="devise(v)"><f type="i">deu&iacute;se 
deu&igrave;se </form> <xpln><f type="r"><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="devil(n)"><f type="i">deuil </form> <xpln><f type="r"><class type="pos">prop.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="devotion(n)"><f type="i">deuotion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="devour(v)"><f type="i">deuour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="devout(a)"><f type="i">deuout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dew(n)"><f type="i">dew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="duty(n)"><f type="i">dewtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dewy(n)"><f type="i">dewie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dewlap(n)"><f type="i">dewlap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dexterity(n)"><f type="i">dexteritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diadem(n)"><f type="i">Diademe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dial(n)"><f type="i">diall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diamond(n)" lexeme="diamant(n)"><f type="i">diamond 
diamant </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diameter(n)"><f type="i">diameter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diaper(n)"><f type="i">diaper</form> <xpln></xpln></wordentry>


<wordentry type="h"><form lexeme="dialogue(n)"><f type="i">dialog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dibble(n)"><f type="i">d&ibreve;ble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="die(n)" lexeme="dice(n)"><f type="i">dy 
dice </form> <xpln><f type="r"><class type="derivation">Deri.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="did(v)"><f type="i">did</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="didapper(n)"><f type="i">didopper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diet(n)"><f type="i">diet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="differ(v)"><f type="i">diff&eacute;r 
diff&egrave;r </form> <xpln><f type="r"><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="difference(n)"><f type="i">difference</form> <xpln></xpln></wordentry>
</page>

<page sig="aa1v" no="186">
<wordentry type="h"><form lexeme="different(a)"><f type="i">different</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="difficulty(n)"><f type="i">difficultie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diffue(n)"><f type="i">diffue</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="diffusely(adv)"><f type="i">diffuselie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dig(v)"><f type="i">dig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="digest(v)"><f type="i">digest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="digestion(n)"><f type="i">digestion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dignity(n)"><f type="i">dignitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="digress(v)"><f type="i">digresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="digression(n)"><f type="i">digression</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dill(n)"><f type="i">dill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dilate(v)"><f type="i">dilate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dilatory(n)"><f type="i">dilatorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dilatation(n)"><f type="i">dilatation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dilapidation(n)"><f type="i">dilapidation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diligence(n)"><f type="i">diligence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diligent(a)"><f type="i">diligent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dim(a)"><f type="i">dim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dimmy(n)"><f type="i">dimmie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dimness(n)"><f type="i">dimnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diminish(v)" lexeme="diminution(n)"><f type="i">diminish 
diminution </form> <xpln><f type="r"><class type="derivation">Der.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="demi-lance(n)"><f type="i">dimilance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="din(n)"><f type="i">din</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dine(v)"><f type="i">dine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dingle(n)"><f type="i">dingle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dint(n)"><f type="i">dint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diocese(n)"><f type="i">diocesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diocesian(a)"><f type="i">diocesiane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dip(n)"><f type="i">dip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diphthong(n)"><f type="i">diphthong </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="difthong(n)"><f type="i">difthong</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="direct(v)"><f type="i">direct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="direction(n)"><f type="i">direction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dirge(n)"><f type="i">dirige </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="dirt(n)"><f type="i">dirt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disagree(v)"><f type="i">disagre</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disagreement(n)"><f type="i">disagrement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disallow(v)"><f type="i">disallow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disanchor(v)"><f type="i">disanker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disannul(v)"><f type="i">disanull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discard(v)"><f type="i">disard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disappoint(v)"><f type="i">disappoint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disburden(v)"><f type="i">disburden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="descend(v)"><f type="i">discend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="descent(n)" lexeme="dissent(n)"><f type="i">discent 
dissent </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dissension(n)"><f type="i">dissension</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discharge(v)"><f type="i">discharge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discern(v)"><f type="i">discern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disciple(n)" lexeme="disple(n)"><f type="i">disciple 
disple </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discomfort(n)"><f type="i">discomfort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discomfit(v)"><f type="i">discumfit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discomfiture(n)"><f type="i">discumfiture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discord(n)"><f type="i">discord</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discreet(n)"><f type="i">discrete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discretion(n)"><f type="i">discretion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discontinue(v)"><f type="i">discontinew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discontinuance(n)"><f type="i">discontinuance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discountenance(n)"><f type="i">discountenance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discourse(n)"><f type="i">discourse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discourage(v)"><f type="i">discourage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discouragement(n)"><f type="i">discouragement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="discuss(v)"><f type="i">discusse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disdain(v)"><f type="i">disdain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disdainful(a)"><f type="i">disdainfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disease(n)"><f type="i">disease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disinherit(v)"><f type="i">disenherit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disfigure(v)"><f type="i">disfigure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disfigured(a)"><f type="i">disfigured</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disfranchise(n)"><f type="i">disfranchis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disgrace(n)"><f type="i">disgrace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disguise(n)"><f type="i">disgise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dish(n)"><f type="i">dish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dish-clout(n)"><f type="i">dishclout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dishonest(a)"><f type="i">dishonest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disloyal(a)"><f type="i">disloyall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disloyalty(n)"><f type="i">disloyaltie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dismiss(v)"><f type="i">dismisse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dizziness(n)"><f type="i">dissinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dime(n)" lexeme="decim&aelig;(n)"><f type="i">dismes 
decim&aelig; </form> <xpln><f type="r"><class type="borrowing">Enf.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="dismay(v)"><f type="i">dismaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dismal-day(n)"><f type="i">dismaldaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dismantle(v)"><f type="i">dismantle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dismember(v)"><f type="i">dismember</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disobey(v)"><f type="i">disobeie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disobedience(n)"><f type="i">disobedience</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disorder(n)"><f type="i">disorder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disparage(v)"><f type="i">disparage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disparagement(n)"><f type="i">disparagement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispatch(v)"><f type="i">dispatch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispark(v)"><f type="i">dispark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispend(v)"><f type="i">dispend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispense(n)"><f type="i">dispense</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispensation(n)"><f type="i">dispensation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disperse(v)"><f type="i">disperse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disparple(v)"><f type="i">disperple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispeople(v)"><f type="i">dispeple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispay(v)"><f type="i">dispaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispose(v)"><f type="i">dispose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disposition(n)"><f type="i">disposition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="displease(v)"><f type="i">displease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispraise(nv)"><f type="i">dispraise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispossess(v)"><f type="i">dispossesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dispute(n)"><f type="i">dispute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disputation(n)"><f type="i">disputation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disquietness(n)"><f type="i">disquietnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disquiet(n)"><f type="i">disquiet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dissemble(v)" lexeme="dissimulation(n)"><f type="i">dissemble 
dissimulation </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dissolve(v)"><f type="i">dissolue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dissolute(a)"><f type="i">dissolute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dissoluteness(n)"><f type="i">dissolutenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dissonant(a)"><f type="i">dissonant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distaff(n)"><f type="i">distaf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distance(n)"><f type="i">distance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distil(v)"><f type="i">distill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distinguish(v)"><f type="i">distinguish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distinct(a)"><f type="i">distinct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distinction(n)"><f type="i">distinction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distress(v)"><f type="i">distresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distrain(v)"><f type="i">distrain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distribute(v)"><f type="i">distribute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="distribution(n)"><f type="i">distribution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dissuade(v)"><f type="i">dissuade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disuse(v)"><f type="i">disuse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disunion(n)"><f type="i">disunion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disuniting(n)"><f type="i">disuniting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dizzy(a)"><f type="i">dissie 
dizzie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="disworship(n)"><f type="i">disworship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ditty(n)"><f type="i">ditie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dive(v)"><f type="i">diue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diverse(a)"><f type="i">diuerse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diversity(n)"><f type="i">diuersitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="diverticle(n)"><f type="i">diuerticle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="divine(a)"><f type="i">diuine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="divination(n)"><f type="i">diuination</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="divinity(n)"><f type="i">diuinitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="divorce(n)"><f type="i">diuorce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="divorcement(n)"><f type="i">diuorcement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="division(n)"><f type="i">diuision</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="do(v)"><f type="i">Do</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="do(v)"><f type="i">d&ograve;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dock(n)"><f type="i">dok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="docket(n)"><f type="i">dokket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="doctor(n)"><f type="i">doctor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="doctrine(n)"><f type="i">doctrine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="docility(n)"><f type="i">docilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dodge(v)"><f type="i">dodg</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dog(n)"><f type="i">dog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dodkin(n)"><f type="i">dodkin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dole(n)"><f type="i">dole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dolt(n)"><f type="i">dolt</form> <xpln></xpln></wordentry>
</page>

<page sig="aa2r" no="187">
<wordentry type="h"><form lexeme="dolphin(n)"><f type="i">dolfin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dominion(n)"><f type="i">dominion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dook(n)"><f type="i">dook</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="doom(n)"><f type="i">doom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="doomsday(n)"><f type="i">doomesdaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="don(v)"><f type="i">d&ograve;n</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="door(n)"><f type="i">door</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dor(n)"><f type="i">dor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dormouse(n)"><f type="i">dormouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dortour(n)" lexeme="dormitorie(n)"><f type="i">dortor 
dormitorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dozen(n)"><f type="i">dosen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dote(v)"><f type="i">dote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dotterel(n)" lexeme="dotrell(n)"><f type="i">doterell 
dotrell </form> <xpln><f type="r"><class type="contraction">Contract.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="doth(v)"><f type="i">doth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dotage(n)"><f type="i">dotage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dornick(n)"><f type="i">dorniks</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dove(n)"><f type="i">d&ograve;ue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dow(v)"><f type="i">dow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dowery(n)"><f type="i">dowrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="doubt(n)"><f type="i">dout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="doulasse(n)"><f type="i">doulasse</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="down(adv)"><f type="i">doun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="downward(adv)"><f type="i">dounward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dought(n)"><f type="i">d&ograve;ught</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="doughty(a)"><f type="i">doughtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drab(n)"><f type="i">Drab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="draff(n)"><f type="i">draf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dread(n)"><f type="i">drad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drag(v)"><f type="i">drag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dragon(n)"><f type="i">dragon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="draiman(n)"><f type="i">draiman</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="drake(n)"><f type="i">drake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="draw(v)"><f type="i">drawe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drank(v)"><f type="i">drank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dram(n)"><f type="i">dram</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="draper(n)"><f type="i">draper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="draw(v)"><f type="i">draw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="draught(n)"><f type="i">draught</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="draw-latch(n)"><f type="i">drawlatch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dread(n)"><f type="i">dread</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dream(n)"><f type="i">dream</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dread(n)"><f type="i">dred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dredge(v)"><f type="i">dredge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dregs(n)"><f type="i">dregs</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drench(v)"><f type="i">drench</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dress(v)"><f type="i">dresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dresser(n)"><f type="i">dresser</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dreigh(a)"><f type="i">drigh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drive(v)"><f type="i">driue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drivel(n)"><f type="i">driuil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drift(n)"><f type="i">drift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drink(n)"><f type="i">drink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drip(n)"><f type="i">drip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dripping(n)" lexeme="pan(n)"><f type="i">dripping pan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drone(n)"><f type="i">drone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drop(n)"><f type="i">drop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dropsy(n)"><f type="i">dropsie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dross(n)"><f type="i">drosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drove(v)"><f type="i">droue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drown(v)"><f type="i">droun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drowsy(n)"><f type="i">drousie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drought(n)"><f type="i">drought</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drunk(v)"><f type="i">drunk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drunken(a)"><f type="i">drunken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drudge(n)"><f type="i">drudge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drumble-dore(n)"><f type="i">drumbledorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drum(n)"><f type="i">drum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="drumslade(n)"><f type="i">drumslade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dry(a)"><f type="i">dry</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dub(v)"><f type="i">Dub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="double(a)"><f type="i">duble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dublet(n)"><f type="i">dublet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="duck(n)"><f type="i">duk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="duke(n)"><f type="i">duke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dug(a)"><f type="i">dug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="duchy(n)"><f type="i">duchie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dull(a)"><f type="i">dull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dulcimer(n)"><f type="i">dulcimer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dullard(n)"><f type="i">dullard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dump(n)"><f type="i">dump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dumpish(a)"><f type="i">dumpish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dun(a)"><f type="i">dun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Dunstable(pn)"><f type="i">dunstable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dung(n)"><f type="i">dung</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dunghill(n)"><f type="i">dunghill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dungeon(n)"><f type="i">dungeon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dure(n)"><f type="i">dure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="durance(n)"><f type="i">durance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="during(pp)"><f type="i">during</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dust(n)"><f type="i">dust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dusty(a)"><f type="i">dustie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dusk(n)"><f type="i">dusk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="duskish(a)"><f type="i">duskish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dwarf(n)"><f type="i">Dwarf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dwell(v)"><f type="i">dwell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dweller(n)"><f type="i">dweller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dwale(n)"><f type="i">dwale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="die(n)"><f type="i">Dy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="dyer(n)"><f type="i">dyer</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="e"><alpha>E</alpha>

<wordentry type="h"><form><f type="r">E, </form><xpln>making the 
first sillab alone 
is a latin prepo&shy;
sition, as <f type="I">edict, e&shy;
u<expan type="e+_">en</expan>t<f type="r">. The affinitie 
betwene, e, and 
<expan type="y+e">the</expan> quik i, causeth 
a duble serch in 
the table, <f type="I">intent<f type="r">, 
or <f type="I">entent
</xpln></wordentry>

<wordentry type="h"><form lexeme="eager(a)"><f type="i">Eager</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eagerly(adv)"><f type="i">eagerlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eagle(n)"><f type="i">eagle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ean(v)"><f type="i">ean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="early(adv)"><f type="i">earlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="earl(n)"><f type="i">earle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="earn(v)"><f type="i">earn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ear(n)"><f type="i">ear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="earnest(a)"><f type="i">earnest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="earth(n)"><f type="i">earth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="earthy(a)"><f type="i">earthie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ease(n)"><f type="i">ease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="easy(a)"><f type="i">easie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="easement(n)"><f type="i">easment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="east(n)"><f type="i">east</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="easter(n)"><f type="i">easter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eat(v)"><f type="i">eat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eaves(n)"><f type="i">eaues</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ebb(n)"><f type="i">Eb</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="each(pr)"><f type="i">Ech</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="each-one(pr)"><f type="i">echone</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="each(pr)"><f type="i">eche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eacher(pr)"><f type="i">echer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eclipse(n)"><f type="i">eclipse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ecclesiastical(a)"><f type="i">ecclesiasticall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eddie(n)"><f type="i">Eddie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="edgeling(n)"><f type="i">edgeling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="edict(n)"><f type="i">edict</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="edify(v)"><f type="i">edify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="education(n)"><f type="i">education</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="effect(n)"><f type="i">Effect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="effectual(a)"><f type="i">effectuall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="effeminate(a)"><f type="i">effeminate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="efficacy(n)"><f type="i">efficacie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eftsoon(adv)"><f type="i">eftsoon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="egg(n)"><f type="i">Eg</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eglantine(n)"><f type="i">eglantine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="egress(n)"><f type="i">egresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eye(n)"><f type="i">Eie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eyen(n)"><f type="i">eien</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eye-bree(n)"><f type="i">eiebrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eight(n)"><f type="i">eight</form> <xpln></xpln></wordentry>
</page>

<page sig="aa2v" no="188">
<wordentry type="h"><form lexeme="eighteen(n)"><f type="i">eightene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eighty(n)"><f type="i">eightie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="either(pr)"><f type="i">either</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ell(n)"><f type="i">Ell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ele(v)"><f type="i">ele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elbow(n)"><f type="i">elbow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elder(n)"><f type="i">elder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elect(n)"><f type="i">elect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="election(n)"><f type="i">election</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="electuary(n)"><f type="i">electuarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elegant(a)"><f type="i">elegant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elegancy(n)"><f type="i">elegancie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elephant(n)"><f type="i">elephant 
elefant </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="eleven(n)"><f type="i">eleuen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="element(n)"><f type="i">element</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elementary(n)"><f type="i">elementarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elecampane(n)"><f type="i">elicampane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elm(n)"><f type="i">elm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elf(n)"><f type="i">elf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elves(n)"><f type="i">elues</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elvish(a)"><f type="i">eluish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eloquent(a)"><f type="i">eloquent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eloquence(n)"><f type="i">eloquence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="else(c)"><f type="i">else</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="elsewhere(adv)"><f type="i">elsewhere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambassador(n)"><f type="i">Embassador</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambassage(n)"><f type="i">embassage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embassy(n)"><f type="i">embasie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embosse(n)"><f type="i">embosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embrace(v)"><f type="i">embrace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imbrue(v)"><f type="i">embrew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embroider(v)"><f type="i">embroder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embroiderer(n)"><f type="i">embroderer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambush(n)"><f type="i">embush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ambushment(n)"><f type="i">embushment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embuscado(n)"><f type="i">embuscado</form> <xpln></xpln>
<lemenote>Predates earliest OED citation</lemenote></wordentry>

<wordentry type="h"><form lexeme="emrods(n)"><f type="i">emrods 
aimorhords</form> <xpln><f type="r"> <class type="unknown">Faf</class> </xpln></wordentry>

<wordentry type="h"><form lexeme="emmet(n)"><f type="i">emmet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="empare(v)"><f type="i">empare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="emperor(n)"><f type="i">emperor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="empire(n)"><f type="i">empire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impeach(v)"><f type="i">empeach</form> <xpln></xpln>
<lemenote>Postdates only OED citation (1490)</lemenote></wordentry>

<wordentry type="h"><form lexeme="implant(v)"><f type="i">emplant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="employ(v)"><f type="i">employ</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="employment(n)"><f type="i">employment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imply(v)"><f type="i">emply</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impoverish(v)"><f type="i">empouerish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impoverishment(n)"><f type="i">empouerishment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="empoison(v)"><f type="i">empoison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imprison(v)"><f type="i">emprison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="empty(a)"><f type="i">emptie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="emptiness(n)"><f type="i">emptinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enchant(v)"><f type="i">Enchant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enchanter(n)"><f type="i">enchantour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enchantment(n)"><f type="i">enchantment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enclose(v)"><f type="i">enclose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enclosure(n)"><f type="i">enclosure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incline(v)"><f type="i">encline</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="encounter(n)"><f type="i">encounter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="encourage(v)"><f type="i">encourage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="increase(n)"><f type="i">encrease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="encroach(v)"><f type="i">encroche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="end(n)"><f type="i">end</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="endless(n)"><f type="i">endlesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="endeavor(n)"><f type="i">endeuor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="endew(v)"><f type="i">endew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="endive(n)"><f type="i">endif</form> <xpln></xpln>
<lemenote>No such spelling in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="endite(v)"><f type="i">endite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="endited(v)"><f type="i">endited</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enditement(n)"><f type="i">enditement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="endow(v)"><f type="i">endow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="endowment(n)"><f type="i">endowment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="induce(v)"><f type="i">enduce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enemy(n)"><f type="i">enemie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enmity(n)"><f type="i">enimitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enforce(v)"><f type="i">enforce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inform(v)"><f type="i">enform</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enfranchise(v)"><f type="i">enfranchis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enfranchisement(n)"><f type="i">enfranchisment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inflame(n)"><f type="i">enflame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="engender(v)"><f type="i">engender</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="engine(n)"><f type="i">engine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ingrate(n)"><f type="i">engrate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="engraff(v)"><f type="i">engraf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="engross(v)"><f type="i">engrosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="engrosser(n)"><f type="i">engroser</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enlarge(v)"><f type="i">enlarge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enjoin(v)"><f type="i">enioin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enough(a)"><f type="i">enough</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enjoy(v)"><f type="i">enioy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enquire(v)"><f type="i">enquire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inquest(n)"><f type="i">enquest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enrage(v)"><f type="i">enrage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enrich(v)"><f type="i">enrich</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enrol(v)"><f type="i">enroll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enrolment(n)"><f type="i">enrolment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ensample(n)"><f type="i">ensample</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enseam(n)"><f type="i">enseam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entangle(v)"><f type="i">entangle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intend(v)"><f type="i">entend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intent(n)"><f type="i">entent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enter(v)"><f type="i">ent&egrave;r 
ent&eacute;r </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="interred(a)" lexeme="entered(v)"><f type="i">ent&egrave;rred 
ent&ebreve;red </form> <xpln></xpln> </wordentry>

<wordentry type="h"><form lexeme="entire(a)"><f type="i">entire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entred(v)"><f type="i">entred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interfere(v)"><f type="i">enterfear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intermeddle(v)"><f type="i">entermedle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enterprise(n)"><f type="i">enterprise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entertain(v)"><f type="i">entertain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entice(n)"><f type="i">entice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enticement(n)"><f type="i">enticement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entrance(n)"><f type="i">entrance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entrap(v)"><f type="i">entrap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entrails(n)"><f type="i">entralls</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entreat(n)"><f type="i">entreat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="entreaty(n)"><f type="i">entreatie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="environ(n)"><f type="i">enuiron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="enure(v)"><f type="i">enure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="envy(v)"><f type="i">enuie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="envious(a)"><f type="i">enuious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="epitaph(n)"><f type="i">Epitaph</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="epitome(n)"><f type="i">epitome</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="epistle(n)"><f type="i">epistle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="epicure(n)"><f type="i">epicure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="equity(n)"><f type="i">Equitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="equal(a)"><f type="i">equall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="equality(n)"><f type="i">equalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ere(c)"><f type="i">Er</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="errand(n)"><f type="i">erand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="erect(a)"><f type="i">erect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="erection(n)"><f type="i">erection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="error(n)"><f type="i">error</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="erronious(a)"><f type="i">erronious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="escape(n)"><f type="i">escape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="escheat(n)"><f type="i">escheat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="escheater(n)"><f type="i">escheater</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eschew(v)"><f type="i">eschew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="especial(a)"><f type="i">especiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="espy(v)"><f type="i">espy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="esquire(n)"><f type="i">esquier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="establish(v)"><f type="i">establish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="estate(n)"><f type="i">estate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="esteem(v)"><f type="i">esteme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="estimation(n)"><f type="i">estimation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="estimate(v)"><f type="i">estimate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="estrange(v)"><f type="i">estrange</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eternal(a)"><f type="i">Eternall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eternity(n)"><f type="i">eternitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="evangelist(n)"><f type="i">Euangelist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="evangelical(a)"><f type="i">euangelicall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eve(n)"><f type="i">eue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="even(adv)"><f type="i">euen</form> <xpln></xpln></wordentry>
</page>

<page sig="aa3r" no="189">
<wordentry type="h"><form lexeme="evensong(n)"><f type="i">euensong</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="evening(n)"><f type="i">euening</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ever(adv)"><f type="i">euer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="everlasting(a)"><f type="i">euerlasting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="every(pr)"><f type="i">euerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="evirate(a)"><f type="i">euirate</form> <xpln></xpln>
<lemenote>Predates earliest OED citation</lemenote></wordentry>

<wordentry type="h"><form lexeme="evict(v)"><f type="i">euict</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="eviction(n)"><f type="i">euiction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="evocation(n)"><f type="i">euocation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="evident(a)"><f type="i">euident</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="evidence(n)"><f type="i"><emend err="euideuce">euidence</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="evil(a)"><f type="i">euill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ewe(n)"><f type="i">Ew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ewbow(n)"><f type="i">ewb&oacute;w</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="ewer(n)" lexeme="ewry(n)"><f type="i">eawer 
eawrie </form> <xpln><f type="r"><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="eft(n)"><f type="i">euet
eut </form> <xpln><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="exact(a)"><f type="i">Exact</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exaction(n)"><f type="i">exaction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exaltation(n)"><f type="i">exaltation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="examine(v)"><f type="i">examin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="examination(n)"><f type="i">examination</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="example(n)"><f type="i">example</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exceed(v)"><f type="i">excede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="excel(v)"><f type="i">excell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="excellent(a)"><f type="i">excellent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="excellence(n)"><f type="i">excellence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="excellency(n)"><f type="i">excellencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="except(pp)"><f type="i">except</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exception(n)"><f type="i">exception</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exchange(n)"><f type="i">exchange</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exchequer(n)"><f type="i">exchekker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exclaim(v)"><f type="i">exclame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exclamation(n)"><f type="i">exclamation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="excommunicate(v)"><f type="i">excommunicate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="excommunication(n)"><f type="i">excommunicati<expan type="o+_">on</expan></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="excuse(n)"><f type="i">exc&ugrave;se 
exc&uacute;se </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="execrable(a)"><f type="i">execrable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="execute(v)"><f type="i">execute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="execution(n)"><f type="i">execution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="executor(n)"><f type="i">exec&umacron;tour 
exec&ubreve;tour </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exempt(a)"><f type="i">exempt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exemption(n)"><f type="i">exemption</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exemplify(v)"><f type="i">exemplify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exemplification(n)"><f type="i">exemplifycation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exercise(n)"><f type="i">exercise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exhibit(v)"><f type="i">exhibit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exhibition(n)"><f type="i">exhibition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exhort(v)"><f type="i">exhort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exhortation(n)"><f type="i">exhortation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exigent(n)"><f type="i">exigent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exile(n)"><f type="i">exile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expedient(a)"><f type="i">expedient</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expedition(n)"><f type="i">expedition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expel(v)"><f type="i">expell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expend(v)"><f type="i">expend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="experience(n)"><f type="i">experience</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expert(n)"><f type="i">expert</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expect(v)"><f type="i">expect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expectation(n)"><f type="i">expectation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expenses(n)"><f type="i">expenses</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expire(v)"><f type="i">expire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expiration(n)"><f type="i">expiration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="explicate(v)"><f type="i">explicate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="explication(n)"><f type="i">explication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expound(v)"><f type="i">expound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exposition(n)"><f type="i">exposition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="express(v)"><f type="i">expresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="expulsion(n)"><f type="i">expulsion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="exquisite(a)"><f type="i">exquisite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extend(v)"><f type="i">extend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extenuate(v)"><f type="i">extenuate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extenuation(n)"><f type="i">extenuation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extol(v)"><f type="i">extoll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extort(v)"><f type="i">extort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extortion(n)"><f type="i">extortion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extract(v)"><f type="i">extract</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extraction(n)"><f type="i">extraction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extreme(a)"><f type="i">extreme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="extremity(n)"><f type="i">extremitie</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="f"><alpha>F</alpha>

<wordentry type="h"><form lexeme="fable(n)"><f type="i">Fable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="face(n)"><f type="i">face</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fact(n)"><f type="i">fact</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="factor(n)"><f type="i">factor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faction(n)"><f type="i">faction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="factions(n)"><f type="i"><emend err="factious">factions</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="facility(n)"><f type="i">facilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fade(v)"><f type="i">fade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fathom(n)"><f type="i">fadom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fadge(n)"><f type="i">fadge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faffle(n)"><f type="i">fafle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fagot(n)"><f type="i">fagot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fail(v)"><f type="i">fail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fain(v)"><f type="i">fain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faint(a)"><f type="i">faint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fained(a)"><f type="i">fained </form> <xpln><f type="r"><class type="contraction">Contr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="fair(a)"><f type="i">fair</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fairing(n)"><f type="i">fairing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fairy(n)"><f type="i">farie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faith(n)"><f type="i">faith</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faithful(a)"><f type="i">faithfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faithfulness(n)"><f type="i">faithfulnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fall(n)"><f type="i">fall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="falconer(n)"><f type="i">falconer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="false(a)"><f type="i">false</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="falsify(v)"><f type="i">falsify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="falsehood(n)"><f type="i">falsehood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fallow(n)"><f type="i">fallow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="falter(v)"><f type="i">falter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fault(n)"><f type="i">falt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faultless(a)"><f type="i">faltlesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fame(n)"><f type="i">fame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="famous(a)"><f type="i">famous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="family(n)"><f type="i">familie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="familiarity(n)"><f type="i">familiaritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="familiarly(adv)"><f type="i">familiarlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="familiar(a)"><f type="i">familiar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="famine(n)"><f type="i">famin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="famish(v)"><f type="i">famish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fan(n)"><f type="i">fan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fane(n)"><f type="i">fane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fantasy(n)"><f type="i">fantsie 
fantasie </form> <xpln><f type="r"><class type="contraction">Contract.</class>  
<class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="fantastic(a)" lexeme="fantastical(a)"><f type="i">fantastik 
fantasticall </form> <xpln><f type="r"> <class type="borrowing">Enfra.</class></xpln>
<note>
<f type="r"> And why not with f, &amp; yet 
the originalls be with ph?
</note>
</wordentry>

<wordentry type="h"><form lexeme="farse(v)"><f type="i">farse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="farding(n)"><f type="i">farding</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fardel(n)"><f type="i">fardle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="farcy(n)"><f type="i">farcie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="farthingale(n)" lexeme="verdingale(n)"><f type="i">fardingale 
verdingale </form> <xpln><f type="r"> <class type="borrowing">Enfr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="far(a)"><f type="i">far</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fare(v)"><f type="i">fare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="farewell(n)"><f type="i">farewell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="farrow(n)"><f type="i">farrow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="farm(n)"><f type="i">farm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="farmer(n)"><f type="i">farmor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fashion(n)"><f type="i">fashion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fast(a)"><f type="i">fast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fasten(v)"><f type="i">fasten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fastening(n)"><f type="i">fastning</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fasting(n)"><f type="i">fasting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fat(a)"><f type="i">fat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fate(n)"><f type="i">fate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fates(n)"><f type="i">fates</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fatal(a)"><f type="i">fatall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fact(n)"><f type="i">fact</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="farther(adv)"><f type="i">farther</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faucet(n)"><f type="i">fawcet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="favor(n)"><f type="i">fauor</form> <xpln></xpln></wordentry>
</page>

<page sig="aa3v" no="190">
<wordentry type="h"><form lexeme="favorite(n)"><f type="i">fauorite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faubourg(n)"><f type="i">fauburg</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="faun(n)"><f type="i">faun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fee(n)"><f type="i">F&egrave;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fees(n)"><f type="i">fees</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fealty(n)"><f type="i">fealtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feather(n)"><f type="i">feather</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pheasant(n)"><f type="i">feasant </form> <xpln><f type="r"> <class type="spelling">ph.</class> <class type="borrowing">Enfran</class></xpln></wordentry>

<wordentry type="h"><form lexeme="fear(n)"><f type="i">fear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fearful(a)"><f type="i">fearfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feast(n)"><f type="i">feast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="festival(n)"><f type="i">festiuall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="festinity(n)"><f type="i">festinitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feat(n)"><f type="i">feat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fever(n)"><f type="i">feauer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feverfew(n)"><f type="i">feauerfew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feeble(a)"><f type="i">feble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fed(a)"><f type="i">fed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feed(v)"><f type="i">fede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fiefment(n)"><f type="i">fefment</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="field(n)"><f type="i">feild</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fell(n)"><f type="i">fell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fele(a)"><f type="i">fele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fieldfare(n)"><f type="i">feldifare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fellmonger(n)"><f type="i">felmonger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="felon(n)"><f type="i">felon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="felony(n)"><f type="i">felonie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fellow(n)"><f type="i">fellow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fellowship(n)"><f type="i">fellowship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fells(n)"><f type="i">fells</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="felt(n)"><f type="i">felt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="female(a)"><f type="i">female</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feminine(a)"><f type="i">feminine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fen(n)"><f type="i">fen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fend(v)"><f type="i">fend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fennel(n)"><f type="i">fenell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fennel-stalk(n)"><f type="i">fenelstalk</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1691)</lemenote></wordentry>

<wordentry type="h"><form lexeme="fence(n)"><f type="i">fense</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feudary(n)"><f type="i">feodarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fern(n)"><f type="i">fern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ferret(n)"><f type="i">ferret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ferrer(n)"><f type="i">ferrar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ferry(n)"><f type="i">ferie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fertile(a)" lexeme="fertil(n)"><f type="i">fertle 
fertil </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="fertility(n)"><f type="i">fertilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fervent(a)"><f type="i">feruent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fervency(n)"><f type="i">feruencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fescue(n)"><f type="i">festew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fester(v)"><f type="i">festur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fet(v)"><f type="i">fet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="feet(n)"><f type="i">fete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fetter(n)"><f type="i">fetter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fetch(v)"><f type="i">fetch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="few(pr)"><f type="i">few</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fewterer(n)"><f type="i">fewterer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fuel(n)"><f type="i">fewell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fickle(a)"><f type="i">Ficle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fiddle(n)"><f type="i">fidle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fiddling-stick(n)"><f type="i">fidlingstik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fire(n)"><f type="i">fier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="firy(a)"><f type="i">fierie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fierce(a)"><f type="i">fierce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fift(a)"><f type="i">fift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fifteen(n)"><f type="i">fiftene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fifty(n)"><f type="i">fiftie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fig(n)"><f type="i">fig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="figure(n)"><f type="i">figur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="figurative(a)" lexeme="tiue(n)"><f type="i">figur&abreve;tiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fight(v)"><f type="i">fight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fill(v)"><f type="i">fill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="filbert(n)"><f type="i">filberd</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="file(n)"><f type="i">file</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fillet(n)"><f type="i">filet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="filly(n)"><f type="i">fillie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="filch(v)"><f type="i">filch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="filth(n)"><f type="i">filth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="filthy(a)"><f type="i">filthie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="filthiness(n)"><f type="i">filthinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="filthily(adv)"><f type="i">filthilie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fin(n)"><f type="i">fin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fine(n)"><f type="i">fine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="finess(n)"><f type="i">fines 
finesse </form> <xpln><f type="r"> <class type="spelling">sse.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="finers(n)"><f type="i">finers</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="finally(adv)"><f type="i">finallie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="finch(n)"><f type="i">finch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="find(v)"><f type="i">find</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="finder(n)"><f type="i">finder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="finger(n)"><f type="i">fin'ger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="finish(v)"><f type="i">finish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fir(n)"><f type="i">fir</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="firm(a)"><f type="i">firm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="firmament(n)"><f type="i">firmament</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="first(a)"><f type="i">first</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fish(n)"><f type="i">fish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fishmonger(n)"><f type="i">fishmonger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fist(n)"><f type="i">fist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fist(n)"><f type="i">fiste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fifle(n)"><f type="i">fifle</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="fit(n)"><f type="i">fit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fitches(n)"><f type="i">fitches</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fitchew(n)"><f type="i">fitchew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="five(n)"><f type="i">fiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fixt(v)"><f type="i">fixt </form> <xpln><f type="r"><class type="contraction">Contra</class></xpln></wordentry>

<wordentry type="h"><form lexeme="flag(n)"><f type="i">flag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flagon(n)"><f type="i">flagon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flake(n)"><f type="i">flake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flail(v)"><f type="i">flaile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flame(n)"><f type="i">flame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flamfew(n)"><f type="i"><emend err="flamflew">flamfew</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flannel(n)"><f type="i">flanell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flank(n)"><f type="i">flank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flang(v)"><f type="i">flang</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flap(n)"><f type="i">flap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flaps(n)"><f type="i">flaps</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flash(n)"><f type="i">flash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flatter(v)"><f type="i">flatter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flask(n)"><f type="i">flask</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flasket(n)"><f type="i">flasket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flaw(n)"><f type="i">flaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flawn(n)"><f type="i">flawn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flax(n)"><f type="i">flax</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flea(n)"><f type="i">fl&eacute;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flees(v)"><f type="i">fl&eacute;es</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flea(n)"><f type="i">flea</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fleam(n)"><f type="i">fleam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fleer(n)"><f type="i">flear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fleece(n)"><f type="i">flece</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fletcher(n)"><f type="i">flecher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Fleming(n)"><f type="i">fleming</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flesh(n)"><f type="i">flesh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flesh-hook(n)"><f type="i">fleshook </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="fleet(n)"><f type="i">flete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fleeting(a)"><f type="i">fleting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flexible(a)"><f type="i">flexible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fly(v)"><f type="i">flie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flew(v)"><f type="i">flew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flidge(n)"><f type="i">flidge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flight(n)"><f type="i">flight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flickering(n)"><f type="i">flikkering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fling(v)"><f type="i">fling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flint(n)"><f type="i">flint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flinder-mouse(n)"><f type="i">flindermouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flitch(n)"><f type="i">flitch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flit(v)"><f type="i">flit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flite(n)"><f type="i">flite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flitting(n)"><f type="i">flitting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fliting(n)"><f type="i">fliting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flix(n)"><f type="i">flix</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flock(n)"><f type="i">flok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="float(v)"><f type="i">flote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flourish(n)"><f type="i">florish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flounder(v)"><f type="i">flounder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flout(v)"><f type="i">flout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flour(n)"><f type="i">flour</form> <xpln></xpln></wordentry>
</page>

<page sig="aa4r" no="191">
<wordentry type="h"><form lexeme="flow(v)"><f type="i">fl&oacute;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flood(n)"><f type="i">flud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fluke(n)"><f type="i">fluke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flute(n)"><f type="i">flute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="flux(n)"><f type="i">flux</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fly(v)"><f type="i">fly</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foe(n)"><f type="i">Fo</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fodder(n)"><f type="i">foder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fog(n)"><f type="i">fog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foggy(a)"><f type="i">foggie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foil(n)"><f type="i">foil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foin(n)"><f type="i">foin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foins(n)"><f type="i">foins</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foist(n)"><f type="i">foist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fool(n)"><f type="i">fole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="folly(n)"><f type="i">folie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="folk(n)"><f type="i">folk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fold(v)"><f type="i">fold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="follow(v)"><f type="i">follow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="four(n)"><f type="i">four</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fond(a)"><f type="i">fond</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fondness(n)"><f type="i">fondnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="food(n)"><f type="i">food</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="footman(n)"><f type="i">footman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foot(n)"><f type="i">foot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="for(pp)"><f type="i">for</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fore(adv)"><f type="i">fore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forbear(n)"><f type="i">forbear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forborn(n)"><f type="i">forborn</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="forbid(v)"><f type="i">forbid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forethought(n)"><f type="i">forthought</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forethought(n)"><f type="i">forethought</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forfeit(v)"><f type="i">forfit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forfeiture(n)"><f type="i">forfiture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forget(v)"><f type="i">forget</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forgive(v)"><f type="i">forgiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forgiveness(n)"><f type="i">forgiuenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forgiven(a)"><f type="i">forgiuen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forsake(v)"><f type="i">forsake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forsaken(a)"><f type="i">forsaken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forsooth(adv)" lexeme="for-soot'h(n)"><f type="i">forsoot`h 
for-soot'h </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forspeak(v)"><f type="i">forspeak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forslow(v)"><f type="i">forslow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forthink(v)"><f type="i">forthink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forward(adv)"><f type="i">forward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forswear(v)"><f type="i">forswear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forsworn(a)"><f type="i">forsworn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fore(adv)"><f type="i">fore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foreign(a)"><f type="i">foren</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forecast(n)"><f type="i">forecast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forethought(n)"><f type="i">forethought</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forehead(n)"><f type="i">forehead</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foredeal(n)"><f type="i">foredeal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forsee(v)"><f type="i">fores&eacute;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forspeak(v)"><f type="i">forespeak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forstall(v)"><f type="i">forestall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fortell(v)"><f type="i">foretell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forthink(v)"><f type="i">forethink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forward(adv)"><f type="i">foreward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forage(v)"><f type="i">forage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="force(n)"><f type="i">force</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forceable(a)" lexeme="forcible(n)"><f type="i">forceable 
forcible </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forcet(n)"><f type="i">forcet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fork(n)"><f type="i">fork</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forel(n)"><f type="i">forell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="form(n)"><f type="i">form</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="form(n)"><f type="i">forme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="former(a)"><f type="i">former</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="formal(a)"><f type="i">formall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="formality(n)"><f type="i">formalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forest(n)"><f type="i">forest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forester(n)"><f type="i">forester</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fornication(n)"><f type="i">fornication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foreman(n)"><f type="i">forman 
foreman </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foreset(v)"><f type="i">foreset</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forced(a)"><f type="i">forced</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fort(n)"><f type="i">fort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forty(n)"><f type="i">fortie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="forth(adv)"><f type="i">forth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fortress(n)"><f type="i">fortresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fortify(v)"><f type="i">fortify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fortification(n)"><f type="i">fortification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fortune(n)"><f type="i">fortun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fortunate(a)"><f type="i">fortunate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fortnight(n)"><f type="i">fortnight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foster(n)"><f type="i">foster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fostered(a)"><f type="i">fostered</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foul(a)"><f type="i">foul</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="four(n)"><f type="i">fo&ugrave;r</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="found(a)"><f type="i">found</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="founder(n)"><f type="i">founder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fountain(n)"><f type="i">fountain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fox(n)"><f type="i">fox</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fray(v)"><f type="i">Fraie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frail(a)"><f type="i">frail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frailty(n)"><f type="i">frailtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fragments(n)"><f type="i">fragments</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="freight(n)"><f type="i">frait</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frame(n)"><f type="i">frame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frank(a)"><f type="i">frank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="franion(n)"><f type="i">franion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="franch(v)"><f type="i">franch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="franchise(n)"><f type="i">franchis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="franchises(n)"><f type="i">franchisses</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frankincense(n)"><f type="i">frankincense</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frantic(a)"><f type="i">frantik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fraternity(n)"><f type="i">fraternitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fraud(n)"><f type="i">fraud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fraudulent(a)"><f type="i">fraudulent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fraught(a)"><f type="i">fraught</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="free(a)"><f type="i">fr&egrave;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="freehold(n)"><f type="i">frehold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="freckle(n)"><f type="i">frekle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="freckled(a)"><f type="i">frekled</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="freedom(n)"><f type="i">fredom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frenzy(a)"><f type="i">frensie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="freeze(v)"><f type="i">frese</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fretish(n)"><f type="i">fretish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="friend(n)"><f type="i">frend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frequent(a)"><f type="i">frequent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fresh(a)"><f type="i">fresh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fret(v)"><f type="i">fret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fret(v)"><f type="i">freat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="friday(n)"><f type="i">fridaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fringe(n)"><f type="i">fringe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="friend(n)"><f type="i">frind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="friendship(n)"><f type="i">frindship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frizzle(n)"><f type="i">frisle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frisk(n)"><f type="i">frisk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frisky(a)"><f type="i">friskaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fritter(n)"><f type="i">friter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frivolous(n)"><f type="i">friuolous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fro(pp)"><f type="i">fro</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frog(n)"><f type="i">frog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frock(n)"><f type="i">frok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frolic(n)"><f type="i">frolik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="from(pp)"><f type="i">from</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="front(n)"><f type="i">front</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frontlet(n)"><f type="i">frontlet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frown(v)"><f type="i">froun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frounce(n)"><f type="i">frounce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="froward(a)"><f type="i">froward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frost(n)"><f type="i">frost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frozen(a)"><f type="i">frosen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="froth(n)"><f type="i">froth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frustrate(v)"><f type="i">frustrate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fruit(n)"><f type="i">frute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fruiterer(n)"><f type="i">fruterer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frump(n)"><f type="i">frump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fry(v)"><f type="i">fry</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="frying-pan(n)"><f type="i">fryingpan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fugitive(n)"><f type="i">Fugitiue</form> <xpln></xpln></wordentry>
</page>

<page sig="aa4v" no="192">
<wordentry type="h"><form lexeme="full(a)"><f type="i">full</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fulfil(v)"><f type="i">fulfill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fuller(n)"><f type="i">fuller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foumart(n)"><f type="i">fulmart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fulsome(a)"><f type="i">fulsom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fume(n)"><f type="i">fume</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fumble(v)"><f type="i">fumble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fumish(a)"><f type="i">fumish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fumitory(n)"><f type="i">fumitorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="funeral(a)"><f type="i">funerall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="foundation(n)"><f type="i">fundation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="funnel(n)"><f type="i">funell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furbish(v)"><f type="i">furbish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furbisher(n)"><f type="i">furbisher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furth(adv)"><f type="i">furth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="further(adv)"><f type="i">further</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furmenty(n)" lexeme="frumenty(n)"><f type="i">furmentie 
frumentie </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fur(n)"><f type="i">fur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furnish(v)"><f type="i">furnish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furniture(n)"><f type="i">furniture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fury(n)"><f type="i">furie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furious(a)"><f type="i">furious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furlong(n)"><f type="i">furlong</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furnace(n)"><f type="i">furnace 
furnesse </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furrow(n)"><f type="i">furrow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="furtherance(n)"><f type="i">furtherance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fustian(n)"><f type="i">fustiane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="future(n)"><f type="i">future</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="g"><alpha>G</alpha>

<wordentry type="h"><form lexeme="strong(n)" lexeme="before(n)"><f type="r"> The strong g, 
before, e, and i, </form> <xpln>
in English is 
warr<expan type="a+_">an</expan>ted by the 
like in the greke 
tung
</xpln></wordentry>

<wordentry type="h"><form lexeme="gay(a)"><f type="i">Gaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gay(n)"><f type="i">ga&iacute;e</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gable(n)"><f type="i">g&abreve;ble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gable(n)"><f type="i">g&amacron;ble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gab(n)"><f type="i">gab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gag(n)"><f type="i">gag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gage(n)"><f type="i">gage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gaggle(v)"><f type="i">gagle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gain(n)"><f type="i">gain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gainful(a)"><f type="i">gainfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gainstand(n)"><f type="i">gainstand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gainsay(v)"><f type="i">gainsaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gale(n)"><f type="i">gale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gaol-delivery(n)"><f type="i">galedeliuerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="galery(n)"><f type="i">galerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gallimaufry(n)"><f type="i">galiemaufrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gallant(n)"><f type="i">gallant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gallows(n)"><f type="i">gallous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="galley(n)"><f type="i">galie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gallon(n)"><f type="i">galon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gallop(v)"><f type="i">gallop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gall(n)"><f type="i">gall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gald(v)"><f type="i">gald</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gald-back(n)"><f type="i">galdbak</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="game(n)"><f type="i">game</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gambol(n)"><f type="i">gambold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gammon(n)"><f type="i">gamon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gander(n)"><f type="i">gander</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gant(n)"><f type="i">gant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gap(n)"><f type="i">gap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gape(v)"><f type="i">gape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garbage(n)"><f type="i">garbage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garbish(n)"><f type="i">garbish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garble(n)"><f type="i">garble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garboil(n)"><f type="i">garboil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garden(n)"><f type="i">garden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gardener(n)"><f type="i">gardiner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="guardian(n)"><f type="i">gardian</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gargle(v)"><f type="i">gargle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garish(a)"><f type="i">garish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garland(n)"><f type="i">garland</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garlic(n)"><f type="i">garlik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garment(n)"><f type="i">garment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garnish(v)"><f type="i">garnish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gardnap(n)"><f type="i">gardnape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garnet(n)"><f type="i">garnet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garner(n)"><f type="i">garner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="garter(n)"><f type="i">garter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gaunt(a)"><f type="i">gaunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gauntlet(n)"><f type="i">gauntlet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gaze(v)"><f type="i">gase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gash(n)"><f type="i">gash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gasp(n)"><f type="i">gasp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gat(v)"><f type="i">gat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gate(n)"><f type="i">gate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gatehouse(n)"><f type="i">gatehouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gather(v)"><f type="i">gather</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gangrel(n)"><f type="i">gangrell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gave(v)"><f type="i">gaue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gawd(n)"><f type="i">gaud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gawdy(n)"><f type="i">gaudie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gate(n)"><f type="i">Geat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="geck(n)"><f type="i">'gek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="geld(n)"><f type="i">'geld</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gelding(n)"><f type="i">`gelding</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gelly(n)"><f type="i">gelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gillyflower(n)"><f type="i">geloflour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jealousy(n)"><f type="i">gelosie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gentle(a)"><f type="i">gentle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gentleman(n)"><f type="i">gentleman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gentleness(n)"><f type="i">gentlenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gentility(n)"><f type="i">gentilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gentry(n)"><f type="i">gentrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="general(n)"><f type="i">generall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="generality(n)"><f type="i">generalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="generation(n)"><f type="i">generation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="genet(n)"><f type="i">genet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gender(n)"><f type="i">gender</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="genealogy(n)"><f type="i">genealogie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="German(n)"><f type="i">germaine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="germander(n)"><f type="i">germander</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="guess(n)"><f type="i">'gesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="guest(n)"><f type="i">`gest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gesture(n)"><f type="i">gesture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="geese(n)"><f type="i">gese</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gosling(n)"><f type="i">`gesling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Gib(pn)"><f type="i">'Gib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="giblet(n)"><f type="i">`giblet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gibe(v)"><f type="i">gibe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="giant(n)"><f type="i">giant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gide(n)"><f type="i">gide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="giddy(a)"><f type="i">`giddie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="'giddiness(n)"><f type="i">'gidinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gift(n)"><f type="i">`gift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gill(n)"><f type="i">`gill 
gill </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gig(n)" lexeme="'gig(n)"><f type="i">`gig 
'gig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="giggle(n)"><f type="i">`gigle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="giglet(n)"><f type="i">giglet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="guilt(n)"><f type="i">`gilt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="guilty(n)"><f type="i">`giltie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gild(n)"><f type="i">`gild</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gimlet(n)"><f type="i">`gimlet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gemew(n)"><f type="i">'gimew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gin(n)"><f type="i">gin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ginger(n)"><f type="i">ginger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gird(v)"><f type="i">gird</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="girdler(n)"><f type="i">girdler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="girdle(n)"><f type="i">girdle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jerk(n)"><f type="i">girk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="girl(n)"><f type="i">`girle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="girn(n)"><f type="i">`girn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gherkin(n)"><f type="i">girkin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="girth(n)"><f type="i">`girth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gridiron(n)"><f type="i">`girdiron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="guise(n)"><f type="i">gise</form> <xpln></xpln></wordentry>
</page>

<page sig="bb1r" no="193">
<wordentry type="h"><form lexeme="gittern(n)"><f type="i">gittern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="give(v)" lexeme="g&igrave;ue(n)"><f type="i">g&iacute;ue 
g&igrave;ue </form> <xpln><f type="r"> 1 Gen.</xpln></wordentry>

<wordentry type="h"><form lexeme="glabber(n)"><f type="i">Glabber</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="glad(a)"><f type="i">glad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glade(n)"><f type="i">glade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glaze(v)"><f type="i">glase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glass(n)"><f type="i">glasse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glance(n)"><f type="i">glance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glaive(n)"><f type="i">glaiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glean(n)"><f type="i">glean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glee(n)"><f type="i">gl&eacute;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glede(n)"><f type="i">glede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glide(v)"><f type="i">glide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glister(n)"><f type="i">glister</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glitter(n)"><f type="i">glitter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glory(n)"><f type="i">glorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glorious(a)"><f type="i">glorious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glose(v)"><f type="i">glose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gloss(n)"><f type="i">glosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glove(n)"><f type="i">gloue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glover(n)"><f type="i">glouer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gloom(n)"><f type="i">gloom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glow(v)"><f type="i">gl&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glowworm(n)"><f type="i">gloworm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="glutton(n)"><f type="i">gluton </form> <xpln><f type="r"><class type="accent">O, passant</class></xpln></wordentry>

<wordentry type="h"><form lexeme="glut(n)"><f type="i">glut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gluttony(n)"><f type="i">glutonie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gnash(v)"><f type="i">Gnash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gnat(n)"><f type="i">gnat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gnaw(v)"><f type="i">gnaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gnawing(n)"><f type="i">gnawing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gnible(v)"><f type="i">gnible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="go(v)"><f type="i">Go</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gobbet(n)"><f type="i">gobet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="goblet(n)"><f type="i">goblet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="God(n)"><f type="i">God</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="good(a)"><f type="i">gode</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="goddess(n)"><f type="i">goddesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="godly(n)"><f type="i">godlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="godliness(n)"><f type="i">godlinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="godfather(n)"><f type="i">godfather</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="godmother(n)"><f type="i">godmother</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gogs(n)"><f type="i">gogs</form> <xpln></xpln>
<lemenote>OED "gog" 3</lemenote></wordentry>

<wordentry type="h"><form lexeme="goggle-eye(n)"><f type="i">gogleeie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gold(n)"><f type="i">gold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="goldsmith(n)"><f type="i">goldsmith</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="good(a)"><f type="i">good</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="goard(n)"><f type="i">goord</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="goose(n)"><f type="i">gouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gorbelly(n)"><f type="i">gorbellie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gore(v)"><f type="i">gore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gorgeous(a)"><f type="i">gorgeous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gorget(n)"><f type="i">gorget</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gosse(n)"><f type="i">gosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="goshawk(n)"><f type="i">gosehauk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gosling(n)"><f type="i">gosling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gossip(n)" lexeme="gospell(n)" lexeme="gospeller(n)"><f type="i">gossip 
gospell 
gospeller </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="got(v)"><f type="i">got</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="goat(n)"><f type="i">gote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gotten(v)"><f type="i">goten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gole(n)"><f type="i">gole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ghost(n)"><f type="i">goste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="govern(v)"><f type="i">gouern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="governour(n)"><f type="i">gouernour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="government(n)"><f type="i">gouernment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gown(n)"><f type="i">goun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grab(v)"><f type="i">Grab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grabble(n)"><f type="i">grable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grace(n)"><f type="i">grace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gracious(a)"><f type="i">gracious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gradation(n)"><f type="i">gradation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grade(n)"><f type="i">grade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="graduate(v)"><f type="i">graduate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="graff(n)"><f type="i">graf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gray(n)"><f type="i">graie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grain(n)"><f type="i">grain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grammer(n)"><f type="i">grammer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grandam(n)"><f type="i">grandam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grandfather(n)"><f type="i">grandfather</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grape(n)"><f type="i">grape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grapper(n)"><f type="i">graper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grapple(v)"><f type="i">graple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grass(n)"><f type="i">grasse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grasshopper(n)"><f type="i">grashoper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="graze(v)"><f type="i">grase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grasp(v)"><f type="i">grasp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grate(v)"><f type="i">grate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grater(n)"><f type="i">grater</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gratify(v)"><f type="i">gratify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gratification(n)"><f type="i">gratification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grave(n)"><f type="i">graue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gravy(n)"><f type="i">grauie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gravell(n)"><f type="i">grauell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gravity(n)"><f type="i">grauitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grand(n)"><f type="i">grand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grant(n)"><f type="i">grant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grease(n)"><f type="i">grease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="great(a)"><f type="i">great</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="greyhound(n)"><f type="i">greihound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="greedy(n)"><f type="i">gredie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="greediness(n)"><f type="i">gredinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grief(n)"><f type="i">grefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Greek(n)"><f type="i">greke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Greece(pn)"><f type="i">grece</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="green(n)"><f type="i">grene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="greenness(n)"><f type="i">grenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="great(a)"><f type="i">grete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grieve(n)"><f type="i">greue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grievous(a)"><f type="i">greuous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grew(v)"><f type="i">grew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gruel(n)"><f type="i">grewell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grig(n)"><f type="i">grig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grim(a)"><f type="i">grim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grime(n)"><f type="i">grime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grin(n)"><f type="i">grin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grind(v)"><f type="i">grind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grindstone(n)"><f type="i">grindstone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gripe(v)"><f type="i">gripe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="griffin(n)"><f type="i">griffin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grizzle(n)"><f type="i">grisle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grizzling(n)"><f type="i">grisling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grizzly(n)"><f type="i">grieslie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gross(n)"><f type="i">groce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="groan(n)"><f type="i">grone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="groom(n)"><f type="i">groom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grope(v)"><f type="i">grope</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="groat(n)"><f type="i">grote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grow(v)"><f type="i">gr&oacute;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gross(n)"><f type="i">gr&oacute;sse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grove(n)" lexeme="grovelling(n)"><f type="i">gr&oacute;ue 
gr&ograve;ueling </form> <xpln><f type="r"><class type="accent">Distinct</class></xpln></wordentry>

<wordentry type="h"><form lexeme="ground(n)"><f type="i">ground</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="groundsel(n)"><f type="i">groundsell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grub(n)"><f type="i">grub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grudge(n)"><f type="i">grudge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gruel(n)"><f type="i">gruell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="grunt(n)"><f type="i">grunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gruntle(n)"><f type="i">gruntle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gubbins(n)"><f type="i">Gubbins</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gudgeon(n)"><f type="i">gudgin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gull(n)"><f type="i">gull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gully(n)"><f type="i">gullie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gulf(n)"><f type="i">gulf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="guerdon(n)"><f type="i">guerdon </form> <xpln><f type="r"> <class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="gully-gut(n)"><f type="i">gulliegut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gum(n)"><f type="i">gum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gun(n)"><f type="i">gun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gunshot(n)"><f type="i">gunshot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gunner(n)"><f type="i">gunner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gunpowder(n)"><f type="i">gunpowder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gurnard(n)"><f type="i">gurnard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gut(n)"><f type="i">gut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="gutter(n)"><f type="i">gutter</form> <xpln></xpln></wordentry>
</wordgroup1>
</page>

<page sig="bb1v" no="194">
<wordgroup1 type="a" object="h"><alpha>H</alpha>

<wordentry type="h"><form><f type="r"> H, </form> <xpln>is so gentlie 
pronounced, or 
rather so not 
<expan type="p,">pro</expan>no<expan type="u+_">un</expan>ced in our 
tung, as manie 
words, which 
begin with it, 
maie be sought 
for by ther first 
vowell, rather 
then h, onelesse 
the originall be 
well known, as 
<f type="i">honest, humble, 
honor, hostage<f type="r">,
&amp;c. which so<expan type="u+_">un</expan>d 
vpon the, o, not 
aspirate
</xpln></wordentry>

<wordentry type="h"><form lexeme="hab(n)" lexeme="nab(n)"><f type="i">Hab or nab</form> <xpln></xpln>
<lemenote>See OED "hab" adv. 2</lemenote></wordentry>

<wordentry type="h"><form lexeme="habit(n)"><f type="i">habit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="habitable(a)"><f type="i">habitable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="habitation(n)"><f type="i">habitation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="habergeon(n)"><f type="i">habergen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="had(v)"><f type="i">had</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hadst(v)"><f type="i">hadst</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haddock(n)"><f type="i">haddok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hag(n)"><f type="i">hag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haggis(n)"><f type="i">haggesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hack(n)"><f type="i">hak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hake(n)"><f type="i">hake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hackney(n)"><f type="i">haknie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hay(n)"><f type="i">haie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hainous(a)"><f type="i">hainous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heifer(n)"><f type="i">haifer </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="haidow(n)"><f type="i">haidow</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="hail(n)"><f type="i">hail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hailstone(n)"><f type="i">hailstone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hat(n)" lexeme="hate(n)"><f type="i">hat 
hate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haiting(n)"><f type="i">haiting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hating(n)"><f type="i">hating</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hale(a)"><f type="i">hale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hallow(v)"><f type="i">hallow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="half(n)"><f type="i">half</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="halfpenny(n)"><f type="i">halfpenie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="halt(v)"><f type="i">halt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="halter(n)"><f type="i">halter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="halter-sick(n)"><f type="i">haltersik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="halting(n)"><f type="i">halting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hall(n)"><f type="i">hall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hallows(n)"><f type="i">hallowes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ham(n)"><f type="i">ham</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hame(n)"><f type="i">hame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hammer(n)"><f type="i">hammer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hamper(n)"><f type="i">hamper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haunch(n)"><f type="i">hanch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hand(n)"><f type="i">hand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="handy-dandy(n)"><f type="i">handidandie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="handle(n)"><f type="i">handle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="handsome(a)"><f type="i">handsom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="handful(a)"><f type="i">handfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="handmaid(n)"><f type="i">handmaide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="handicraft(n)"><f type="i">handicraft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="handgun(n)"><f type="i">handgun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hang(v)"><f type="i">hang</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hanger(n)"><f type="i">hanger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hangman(n)"><f type="i">hangman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hap(n)"><f type="i">hap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="happy(a)"><f type="i">happie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="happen(v)"><f type="i">happen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hapt(v)" lexeme="happed(v)"><f type="i">hapt 
happed </form> <xpln><f type="r"><class type="contraction">Contract</class></xpln></wordentry>

<wordentry type="h"><form lexeme="harbour(n)"><f type="i">harbour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hard(a)"><f type="i">hard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hardness(n)"><f type="i">hardnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hardy(n)"><f type="i">hardie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hardiness(n)"><f type="i">hardinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hardly(adv)"><f type="i">hardlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hardily(adv)"><f type="i">hardilie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hard-head(n)"><f type="i">hardhead</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hare(n)"><f type="i">hare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hare-brain(n)"><f type="i">harebrain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hark(v)"><f type="i">hark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harlot(n)"><f type="i">harlot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harletry(n)"><f type="i">harletrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harm(n)"><f type="i">harm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harmful(n)"><f type="i">harmfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harmony(n)"><f type="i">harmonie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harness(n)"><f type="i">harnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harp(n)"><f type="i">harp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harper(n)"><f type="i">harper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harsh(a)"><f type="i">harsh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hart(n)"><f type="i">hart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hearty(a)"><f type="i">hartie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="herald(n)"><f type="i">harold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hearth(n)"><f type="i">harth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harrow(n)"><f type="i">harrow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harrower(n)"><f type="i">harrower</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harvest(n)"><f type="i">haruest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haste(n)"><f type="i">haste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hast(v)"><f type="i">h&amacron;st</form> <xpln><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="hasty(a)"><f type="i">hastie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hastier(a)"><f type="i">hastier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hasp(n)"><f type="i">hasp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hazel(n)"><f type="i">hasle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hazard(n)"><f type="i">hasard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hazardous(n)"><f type="i">hasardous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hassock(n)"><f type="i">hassok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hastings(n)"><f type="i">hastings</form> <xpln></xpln>
<lemenote>See OED "hasting" ppl. a. B 2 </lemenote></wordentry>

<wordentry type="h"><form lexeme="hastiness(n)"><f type="i">hastinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hatch(n)"><f type="i">hatch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hatchet(n)"><f type="i">hatchet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hatching(n)"><f type="i">hatching</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hat(n)"><f type="i">hat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hate(n)"><f type="i">hate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hatred(n)"><f type="i">hatred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hated(v)"><f type="i">hated</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="have(v)"><f type="i">haue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haven(n)"><f type="i">hauen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="havoc(n)"><f type="i">hauok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haunt(v)"><f type="i">haunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haw(n)"><f type="i">haw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hawes(n)"><f type="i">hawes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hawk(n)"><f type="i">hauk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hauberd(n)" lexeme="halberd(n)"><f type="i">hauberd 
halberd </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="haughty(a)"><f type="i">hautie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hawthorn(n)"><f type="i">hawthorn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="he(pr)"><f type="i">He</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Hebrew(n)"><f type="i">hebrew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="head(n)"><f type="i">head</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heady(a)"><f type="i">headdie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="head-stall(n)"><f type="i">headstall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="headpiece(n)"><f type="i">headpece</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="headlong(a)"><f type="i">headlong</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heal(v)"><f type="i">heal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heap(n)"><f type="i">heap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hear(v)"><f type="i">hear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hearsay(v)"><f type="i">hearsaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heard(a)"><f type="i">heard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="herdman(n)"><f type="i">heardman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hearing(n)"><f type="i">hearing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heat(n)"><f type="i">heat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heath(n)"><f type="i">heath</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heathen(n)"><f type="i">heathen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heaven(n)"><f type="i">heauen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heave(v)"><f type="i">heaue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="head(n)"><f type="i">hede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heedless(a)"><f type="i">hedelesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hedge(n)"><f type="i">hedge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hedgehog(n)"><f type="i">hedgehog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heir(n)"><f type="i">heir</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="height(n)"><f type="i">height</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hell(n)"><f type="i">hell</form> <xpln></xpln></wordentry>
</page>

<page sig="bb2r" no="195">
<wordentry type="h"><form lexeme="heal(v)"><f type="i">hele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="health(n)"><f type="i">helth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="healthful(a)"><f type="i">helthfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="helm(n)"><f type="i">helm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="helmet(n)"><f type="i">helmet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="help(n)"><f type="i">help</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hem(n)"><f type="i">hem</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hemlock(n)"><f type="i">hemlok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hemp(n)"><f type="i">hemp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hen(n)"><f type="i">hen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hence(n)"><f type="i">hens 
hence </form> <xpln><f type="r"><class type="inflection">Plural</class></xpln></wordentry>

<wordentry type="h"><form lexeme="henhouse(n)"><f type="i">henhouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="henbane(n)"><f type="i">henbane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="henceforth(n)"><f type="i">henceforth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="herb(n)"><f type="i">herb</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="harbinger(n)"><f type="i">herbinger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="herbage(n)"><f type="i">herbage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="here(adv)"><f type="i">here</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heresy(n)"><f type="i">heresie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heretical(a)"><f type="i">hereticall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ring(n)"><f type="i">h&ebreve;ring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heritage(n)"><f type="i">heritage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hern(n)"><f type="i">hern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hernshaw(n)"><f type="i">hernshaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heavy(a)"><f type="i">heuie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="heaviness(n)"><f type="i">heuinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hue(n)"><f type="i">hew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hatchel(n)"><f type="i">Hichel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hickwall(n)"><f type="i">hikwaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hickock(n)"><f type="i">hik&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hire(v)"><f type="i">hire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hireling(n)"><f type="i">hireling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hid(a)"><f type="i">hid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hide(v)"><f type="i">hide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hidden(v)"><f type="i">hiden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hideous(a)"><f type="i">hideous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="high(a)"><f type="i">high</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="highness(n)"><f type="i">highnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="highway(n)"><f type="i">highwaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hiccup(n)"><f type="i">hikop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hill(n)"><f type="i">hill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hills(n)"><f type="i">hills</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hilding(n)"><f type="i">hilding</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hilt(n)"><f type="i">hilt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="him(pr)"><f type="i">him</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hymn(n)"><f type="i">hymn 
himn </form> <xpln><f type="r"><class type="borrowing">Enfran.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="hind(n)"><f type="i">hind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hend(n)"><f type="i">hinde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hinder(n)"><f type="i">hinder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hinge(n)"><f type="i">hinge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hingle(n)"><f type="i">hingel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hip(n)"><f type="i">hip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hip-ache(n)"><f type="i">hipache </form> <xpln><f type="r"> <class type="contraction">Cont.</class></xpln>
<lemenote>Antedates OED "hip-ache" (a. 1625)</lemenote></wordentry>

<wordentry type="h"><form lexeme="hypocrite(n)" lexeme="hypocrisy(n)"><f type="i">hipocrite 
hipocrase
hipocrise </form> <xpln><f type="r"><class type="borrowing">Enfran</class> 
<class type="spelling">y</class></xpln></wordentry>

<wordentry type="h"><form lexeme="hisop(n)"><f type="i">hisope </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hiss(v)" lexeme="his(pr)"><f type="i">hisse 
his </form> <xpln><class type="spelling">z</class></xpln></wordentry>

<wordentry type="h"><form lexeme="hist(v)"><f type="i">hist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="history(n)"><f type="i">historie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hit(pr)"><f type="i">hit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hither(adv)"><f type="i">hither</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hitherward(adv)"><f type="i">hitherward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hive(n)"><f type="i">hiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ho(ex)"><f type="i">Ho</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hob(n)"><f type="i">hob</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hobby(n)"><f type="i">hobbie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hobble(v)"><f type="i">hoble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hodge(n)"><f type="i">hodge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hog(n)"><f type="i">hog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoggerel(n)"><f type="i">hogrell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoist(v)"><f type="i">hoist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoistings(n)"><f type="i">hoistings</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hole(n)"><f type="i">hole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="holy(a)"><f type="i">holie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="holiness(n)"><f type="i">holinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hollow(a)"><f type="i">hollow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wholsome(a)"><f type="i">holsom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hold(v)"><f type="i">hold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="holt(n)"><f type="i">holt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="home(n)"><f type="i">home</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="homage(n)"><f type="i">homage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="homely(a)"><f type="i">homelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="homeliness(n)"><f type="i">homelinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="honey(n)"><f type="i">honie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="honeycomb(n)"><f type="i">honicome</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="honeysuckle(n)"><f type="i">honisucle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="honest(a)"><f type="i">honest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="honor(n)"><f type="i">honor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="honorable(n)"><f type="i">honorable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="honorableness(n)"><f type="i">honorablenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hood(n)"><f type="i">hood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoodman-blind(n)"><f type="i">hoodmanblind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoof(n)"><f type="i">hoof</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hook(n)"><f type="i">hook</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hookunhappy(n)"><f type="i">hookvnhappie</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="hoop(n)"><f type="i">hoop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hooping(n)"><f type="i">hooping</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whore(n)"><f type="i">hoor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoarse(a)"><f type="i">hoors</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hop(n)"><f type="i">hop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hope(n)"><f type="i">hope</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hops(n)"><f type="i">hops</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hopper(n)"><f type="i">hopper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hopping(n)"><f type="i">hopping</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoping(n)"><f type="i">hoping</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whorehound(n)"><f type="i">horehound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoary(a)"><f type="i">horie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hoariness(n)"><f type="i">horinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="horse(n)"><f type="i">h&oacute;rse 
hors </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="horseman(n)"><f type="i">horsman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="horse-leche(n)"><f type="i">horsleche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="horn(n)"><f type="i">horn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hornet(n)"><f type="i">hornet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="horrible(a)"><f type="i">horrible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hose(n)"><f type="i">hose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hosen(n)"><f type="i">hosen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hospital(n)"><f type="i">hospitall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hostage(n)"><f type="i">hostage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hostice(n)"><f type="i">hostice</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="hospitality(n)"><f type="i">hospitalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="host(n)"><f type="i">hoste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hostility(n)"><f type="i">hostilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hot(a)"><f type="i">hot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hote(n)"><f type="i">hote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hotchpot(n)"><f type="i">hotchpot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hovel(n)"><f type="i">h&ograve;vel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="holl(n)"><f type="i">houl</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="house(n)"><f type="i">ho&ugrave;se 
ho&uacute;se </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="houses(n)"><f type="i">houses</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hover(v)"><f type="i">houer</form> <xpln></xpln></wordentry>


<wordentry type="h"><form lexeme="hovering(n)"><f type="i">houering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="houseleek(n)"><f type="i">houseleke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="how(c)"><f type="i">how</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hound(n)"><f type="i">hound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="howlet(n)"><f type="i">houlet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="huckle(n)"><f type="i">Hukle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hucklebone(n)"><f type="i">huklebone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="huckster(n)"><f type="i">hukster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="huddle(n)"><f type="i">hudle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="huge(a)"><f type="i">huge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hug(n)"><f type="i">hug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="humble(a)"><f type="i">humble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="humility(n)"><f type="i">humilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hum(ex)" lexeme="hah(ex)"><f type="i">hum hah</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hung(a)"><f type="i">hung</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hunger(n)"><f type="i">hunger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hundred(n)"><f type="i">hundred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hunt(n)"><f type="i">hunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hunter(n)"><f type="i">hunter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hunting(n)"><f type="i">hunting</form> <xpln></xpln></wordentry>
</page>

<page sig="bb2v" no="196">
<wordentry type="h"><form lexeme="hurl(n)"><f type="i">hurle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurdle(n)"><f type="i">hurdle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurly-burly(n)"><f type="i">hurlieburlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurlwind(n)"><f type="i">hurlewind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurlpool(n)"><f type="i">hurlepoul</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurlpit(n)"><f type="i">hurlepit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurlbat(n)"><f type="i">hurlebat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurry(n)"><f type="i">hurrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurt(n)"><f type="i">hurt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hurtful(a)"><f type="i">hurtefull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="husband(n)"><f type="i">husband</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="husbandry(n)"><f type="i">husbandrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hush(n)"><f type="i">hussh&ibreve;r</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hush(n)"><f type="i">hush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="husht(ex)"><f type="i">husht</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="huss(n)" lexeme="us(pr)"><f type="i">husse 
us </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hutch(n)"><f type="i">hutch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="hie(n)"><f type="i">Hy</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="i"><alpha><f type="r">I</alpha>

<wordentry type="h"><form><emend err="">I</emend> </form> <xpln><f type="r"> The first person 
alwaie great <f type="r"> There is great 
kindred betwen the 
weak, g, &amp; i, 
the conson<expan type="a+_">an</expan>t &amp; 
therefor theie 
enterch<expan type="a+_">an</expan>ge of 
times both so<expan type="u+_">un</expan>d 
&amp; place, &amp; so in 
the table maie 
cause searching 
in both the let&shy;
ters
</xpln></wordentry>

<wordentry type="h"><form lexeme="jay(n)"><f type="i">Iaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jade(n)"><f type="i">iade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jacinth(n)"><f type="i">iacinct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jag(n)"><f type="i">iag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jack(n)"><f type="i">iak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jackdaw(n)"><f type="i">iakdaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jacket(n)"><f type="i">iakket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jakes(n)"><f type="i">iakes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jail(n)"><f type="i">iail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jailor(n)"><f type="i">iailor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jangle(n)"><f type="i">iangle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jangling(n)"><f type="i">iangling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jar(n)"><f type="i">iar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jarring(n)"><f type="i">iarring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="javelin(n)"><f type="i">iauelin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jaundice(n)"><f type="i">iaundis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jawbone(n)"><f type="i">iawbone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="javell(n)"><f type="i">iauell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jaw(n)"><f type="i">iaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="idiot(n)"><f type="i">Idiot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="idle(a)"><f type="i">idle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="idleness(n)"><f type="i">idlenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="idolatry(n)"><f type="i">idolatrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jet(n)"><f type="i">Ieat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jealous(a)"><f type="i">ieloous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jealousy(n)"><f type="i">ielosie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jeopard(n)"><f type="i">iepard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jeopardy(n)"><f type="i">iepardie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jeopardous(n)"><f type="i">iepardous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jest(n)" lexeme="jester(n)" lexeme="ieasting(n)"><f type="i">ieast 
ieaster
ieasting </form> <xpln><f type="r"> Iocus.</xpln></wordentry>

<wordentry type="h"><form lexeme="jesses(n)"><f type="i">iesses</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jet(n)"><f type="i">iet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jetter(n)"><f type="i">ietter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Jew(n)"><f type="i">iew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jewel(n)"><f type="i">iewell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Jewish(a)"><f type="i">iewish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="if(c)"><f type="i">If</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ignorant(a)"><f type="i">Ignorant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ignorance(n)"><f type="i">ignorance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ignominy(n)"><f type="i">ignominie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ignominious(a)"><f type="i">ignominious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ill(n)" lexeme="I'll(v)"><f type="i">Ill 
ile </form> <xpln><f type="r"> <class type="contraction">Contr.</class> euill
I will</xpln></wordentry>

<wordentry type="h"><form lexeme="I'd(v)"><f type="i">ild 
illed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="illegitimate(a)"><f type="i">illegitimate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="illegitimation(n)"><f type="i">illegitimation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="illation(n)"><f type="i">illation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="illure(n)"><f type="i">illure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="illurement(n)"><f type="i">illurement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="illusion(n)"><f type="i">illusion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="illness(n)"><f type="i">ilnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="image(n)"><f type="i">Image</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imagine(v)"><f type="i">imagin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imagination(n)"><f type="i">imagination</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embar(v)"><f type="i">imbers</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embarring(n)"><f type="i">imbring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="embarred(v)"><f type="i">imbard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imbarge(v)"><f type="i">imbarg</form> <xpln></xpln>
<lemenote>predates earliest OED entry</lemenote></wordentry>

<wordentry type="h"><form lexeme="immediate(a)"><f type="i">immediate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="immediately(adv)"><f type="i">immediatlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imitate(v)"><f type="i">imitate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imitation(n)"><f type="i">imitation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="immoderate(a)"><f type="i">immoderate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="immortal(a)"><f type="i">immortall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="immortality(n)"><f type="i">immortalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="immunity(n)"><f type="i">immunitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imp(n)"><f type="i">imp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impatient(a)"><f type="i">impacient</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impatience(n)"><f type="i">impacience</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impatible(a)"><f type="i">impatible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impediment(n)"><f type="i">impediment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imperial(a)"><f type="i">imperiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imperfect(a)"><f type="i">imperfit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imperfection(n)"><f type="i">imperfection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impenitent(n)"><f type="i">impenitent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impertinent(a)"><f type="i">impertinent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impertinence(n)"><f type="i">impertinence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="implement(n)"><f type="i">implement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impiety(n)"><f type="i">impietie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="import(n)"><f type="i">import</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="importance(n)"><f type="i">importance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impose(v)"><f type="i">impose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imposition(n)"><f type="i">imposition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impost(n)"><f type="i">impost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impossible(a)"><f type="i">impossible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impossibility(n)"><f type="i">impossibilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impostume(n)" lexeme="aposteme(n)"><f type="i">impostume 
aposteme </form> <xpln><f type="r"> <class type="contraction">Enfra.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="impostumation(n)"><f type="i">impostumation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impoverish(v)"><f type="i">impouerish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impregnable(a)"><f type="i">imprenable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imprison(v)"><f type="i">imprison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imprisonment(n)"><f type="i">imprisonment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impudent(a)"><f type="i">impudent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impudence(n)"><f type="i">impudence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impure(a)"><f type="i">impure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impugn(v)"><f type="i">impugn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impute(v)"><f type="i">impute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impunity(n)"><f type="i">impunitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="improper(a)"><f type="i">impropre</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="impropriety(n)"><f type="i">improprietie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="improperation(n)"><f type="i">improperation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="immanity(n)"><f type="i">immanitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="importune(v)"><f type="i">importun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="importunate(v)" lexeme="nate(n)"><f type="i">import&ubreve;nate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="importunity(n)"><f type="i">importunitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="implicate(v)"><f type="i">implicate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="implicatively(adv)"><f type="i">implicatiuelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="imperious(a)"><f type="i">imperious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="in(pp)"><f type="i">In</form> <xpln></xpln>
<note>
Great affinitie 
betwene, <f type="i">en, in,<f type="r"> 
&amp; <f type="I">vn, enquire, in
<term>quisiti<expan type="o+_">on</expan></term>, <term>vnquiet</term>.
</note>
</wordentry>

<wordentry type="h"><form lexeme="incense(n)" lexeme="inc&eacute;nse(n)"><f type="i">inc&egrave;nse 
inc&eacute;nse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inch(n)"><f type="i">inch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incident(n)"><f type="i">incident</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inkle(n)"><f type="i">incle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inkling(n)"><f type="i">incling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incline(n)"><f type="i">incline</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inclination(n)"><f type="i">inclination</form> <xpln></xpln></wordentry>
</page>

<page sig="bb3r" no="197">
<wordentry type="h"><form lexeme="incommodious(a)"><f type="i">incommodious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incommodity(n)"><f type="i">incommoditie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incompatible(a)"><f type="i">incompatible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incompatibility(n)"><f type="i">incompatibilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incongrue(a)"><f type="i">incongrew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incongruity(n)"><f type="i">incongruitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inconstant(a)"><f type="i">inconstant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inconstancy(n)"><f type="i">inconstancie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incontinent(n)"><f type="i">incontinent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inconvenient(a)"><f type="i">inconuenient</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inconvenience(n)"><f type="i">inconuenience</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incur(v)"><f type="i">incur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incumber(v)"><f type="i">incumber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="incurable(a)"><f type="i">incurable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indebt(v)"><f type="i">indet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indemnity(n)"><f type="i">indemnitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indenture(n)"><f type="i">indentur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indent(n)"><f type="i">indent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indignity(n)"><f type="i">indignitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indifferent(a)"><f type="i">indifferent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indifference(n)"><f type="i">indifference</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indignation(n)"><f type="i">indignation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indite(v)"><f type="i">indite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inditement(n)"><f type="i">inditement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="induce(v)"><f type="i">induce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inducement(n)"><f type="i">inducement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="indurate(v)"><f type="i">indurate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="induct(n)"><f type="i">induct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="induction(n)"><f type="i">induction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inequal(a)" lexeme="inequality(n)"><f type="i">inequall 
inequalitie </form> <xpln><f type="r"><class type="compound">Com.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="inexcusable(a)"><f type="i">inexcusable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infamy(n)" lexeme="mie(n)"><f type="i">inf&abreve;mie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infamous(a)"><f type="i">infamous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infancy(n)"><f type="i">infancie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infant(n)"><f type="i">infant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infect(v)"><f type="i">infect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infection(n)"><f type="i">infection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infer(v)"><f type="i">infer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inferior(a)"><f type="i">inferior</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inferiority(n)"><f type="i">inferioritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infernal(a)"><f type="i">infernall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infirmity(n)"><f type="i">infirmitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inflammation(n)"><f type="i">inflammation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infinite(n)"><f type="i">infinit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="infinity(n)"><f type="i">infinitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="influence(n)"><f type="i">influence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="information(n)"><f type="i">information</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ingredience(n)"><f type="i">ingredience</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inhabit(v)" lexeme="inherit(v)"><f type="i">inhabit
inherit </form> <xpln><f type="r"> <class type="borrowing">Enf.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="inheritance(n)"><f type="i">inheritance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="iniquity(n)"><f type="i">iniquitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inhibition(n)"><f type="i">inhibition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inhibit(v)"><f type="i">inhibit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="innholder(n)"><f type="i">inholder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="injunction(n)"><f type="i">iniunction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="injury(n)"><f type="i">iniurie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="injurious(a)"><f type="i">iniurious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ink(n)"><f type="i">ink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inmost(a)" lexeme="innermost(a)"><f type="i">inmost 
innermost </form> <xpln><f type="r"><class type="contraction">Cont.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="inmate(n)"><f type="i">inmate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inner(a)"><f type="i">inner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="innocence(n)"><f type="i">innocence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="innocency(n)"><f type="i">innocencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="innocent(a)"><f type="i">innocent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="innovate(v)"><f type="i">innouate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="innovation(n)"><f type="i">innouation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inordinate(a)"><f type="i">inordinate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inordinately(adv)"><f type="i">inordinatelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inquire(v)"><f type="i">inquire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inquisition(n)"><f type="i">inquisition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inroad(n)"><f type="i">inrode</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inspire(v)"><f type="i">inspire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inspiration(n)"><f type="i">inspiration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="instigation(n)"><f type="i">instigation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="institute(n)"><f type="i">institute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="institution(n)"><f type="i">institution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="instruct(v)"><f type="i">instruct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="instruction(n)"><f type="i">instruction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="instrument(n)"><f type="i">instrument</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intention(n)"><f type="i">intention</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intercede(v)"><f type="i">intercede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intercession(n)"><f type="i">intercession</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interchange(v)"><f type="i">interchange</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interchangeable(a)"><f type="i">interchangeable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inter(v)"><f type="i">inter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interring(n)"><f type="i">interring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interest(n)"><f type="i">interest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interlace(v)"><f type="i">interlace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interline(v)"><f type="i">interline</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intermeddle(v)"><f type="i">intermedle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intermingle(v)"><f type="i">intermingle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interpret(v)"><f type="i">interpret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interpretor(n)"><f type="i">interpretor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interrupt(v)"><f type="i">interrupt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="interruption(n)"><f type="i">interuption</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intitle(v)"><f type="i">intitle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intricate(a)"><f type="i">intricate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="introduction(n)"><f type="i">introduction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intrude(v)"><f type="i">intrude</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="intrusion(n)"><f type="i">intrusion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="invade(v)"><f type="i">inuade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="invasion(n)"><f type="i">inuasion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inveagle(v)"><f type="i">inueagle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="invent(v)"><f type="i">inuent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="invention(n)"><f type="i">inuention</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inventory(n)"><f type="i">inuentorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="invincible(a)"><f type="i">inuincible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="inward(a)"><f type="i">inward 
in-ward </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="John(pn)"><f type="i">Iohn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Joan(pn)"><f type="i">Ione</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Jonas(pn)"><f type="i">Ionas</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jog(n)"><f type="i">iog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="join(v)"><f type="i">ioin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="joint(n)"><f type="i">ioint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="joly(a)"><f type="i">iolie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jolity(n)"><f type="i">iolitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jowl(v)"><f type="i">ioll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jolt(n)"><f type="i">iolt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="journey(n)"><f type="i">iournie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jouk(n)"><f type="i">iouk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jounce(v)"><f type="i">iounse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="joy(n)"><f type="i">ioy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="joyous(a)"><f type="i">ioyous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="irchin(n)"><f type="i">Irchin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="iron(n)"><f type="i">iron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="irruption(n)"><f type="i">irruption</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="irrevocable(a)"><f type="i">irreuocable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="irreprehensible(a)"><f type="i">irreprehensible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="is(v)"><f type="i">Is</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ice(n)"><f type="i">ise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Israel(pn)"><f type="i">Israell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Israelite(pn)"><f type="i">Israelit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="issue(n)"><f type="i">ishew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="iy(pr)"><f type="i">It</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="itch(n)"><f type="i">itch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="itching(n)"><f type="i">itching</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="judge(n)"><f type="i">Iudge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="judgement(n)"><f type="i">iudgement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="judicial(a)"><f type="i">iudiciall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="judicially(adv)"><f type="i">iudiciallie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jug(n)"><f type="i">iug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="juggler(n)"><f type="i">iuggler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jugglery(n)"><f type="i">iugglerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="juice(n)"><f type="i">iuyce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="junket(n)"><f type="i">iunket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jump(n)"><f type="i">iump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jumper(n)"><f type="i">iumper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jurate(a)"><f type="i">iurate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jury(n)"><f type="i">iurie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jurer(n)"><f type="i">iurers</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="just(a)"><f type="i">iust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="justice(n)"><f type="i">iustice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="justify(v)"><f type="i">iustify</form> <xpln></xpln></wordentry>
</page>

<page sig="bb3v" no="198">
<wordentry type="h"><form lexeme="justify(v)"><f type="i">iustify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="justification(n)"><f type="i">iustification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="justificatory(a)"><f type="i">iustificatorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="jousting(n)"><f type="i">iusting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ivy(n)"><f type="i">iuie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ivory(n)"><f type="i">iuorie</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="k"><alpha>K</alpha>

<wordentry type="h"><form lexeme="key(n)"><f type="i">Keie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kemb(n)"><f type="i">keam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kersey(n)"><f type="i">kearsie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="keel(v)"><f type="i">kele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ken(n)"><f type="i">ken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kennel(n)"><f type="i">kenell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="cackle(v)"><f type="i">kecle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="keep(n)"><f type="i">kepe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kept(v)"><f type="i">kept</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="keeper(n)"><f type="i">keper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kerchief(n)"><f type="i">kerchefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="keetle(n)"><f type="i">ketle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kettler(n)"><f type="i">ketler</form> <xpln></xpln>
<lemenote>predates earliest OED citation (1604)</lemenote></wordentry>

<wordentry type="h"><form lexeme="kibe(n)"><f type="i">kibe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kiby(a)"><f type="i">kibie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kid(n)"><f type="i">kid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kidgell(n)"><f type="i">kidgell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kidney(n)"><f type="i">kidnie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kick(n)"><f type="i">Kik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kill(n)"><f type="i">kill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kilderkin(n)"><f type="i">kilderken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kin(n)"><f type="i">kin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kinred(n)"><f type="i">kinred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kinsman(n)"><f type="i">kinsman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kind(n)"><f type="i">kinde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kindship(n)"><f type="i">kindeship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kine(n)"><f type="i">kine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kindness(n)"><f type="i">kindenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kindle(v)"><f type="i">kindle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="king(n)"><f type="i">king</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kingdom(n)"><f type="i">kingdom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kirchian(n)" lexeme="christian(n)"><f type="i">kirchian 
Christian </form> <xpln><f type="r"><class type="borrowing">Enf.</class></xpln>
<lemenote>"kirchian" not found in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="kernel(n)"><f type="i">kirnell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kirtle(n)"><f type="i">kirtle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kiss(n)"><f type="i">kisse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kit(n)"><f type="i">kit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kite(n)"><f type="i">kite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kith(n)"><f type="i">kith</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kitling(n)"><f type="i">kitling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kitchen(n)"><f type="i">kitching</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kiver(n)"><f type="i">kiuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kivering(n)"><f type="i">kiuering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knab(v)"><f type="i">Knab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knabble(v)"><f type="i">knable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knack(n)"><f type="i">knak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knag(n)"><f type="i">knag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knap(n)"><f type="i">knap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knave(n)"><f type="i">knaue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knavery(n)"><f type="i">knauerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knee(n)"><f type="i">kn&eacute;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knead(a)"><f type="i">knede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kneel(v)"><f type="i">knele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knell(n)"><f type="i">knell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knew(v)"><f type="i">knew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knevet(n)"><f type="i">kneuet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knife(n)"><f type="i">knife</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knight(n)"><f type="i">knight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knit(a)"><f type="i">knit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knock(n)"><f type="i">knok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knoll(n)"><f type="i">knoll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knot(n)"><f type="i">knot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="know(v)"><f type="i">know</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knowledge(n)"><f type="i">knowlege</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="known(a)"><f type="i">known</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knuckle(n)"><f type="i">knukle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knur(n)"><f type="i">knur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knurry(a)"><f type="i">knurrie</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="l"><alpha>L</alpha>

<wordentry type="h"><form lexeme="label(n)"><f type="i">Labell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="labor(n)"><f type="i">labor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laborer(n)"><f type="i">laborer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laborious(a)"><f type="i">laborious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laborsome(a)"><f type="i">laborsom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lace(n)"><f type="i">lace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lace(n)"><f type="i">laces</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lad(n)"><f type="i">lad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lade(v)"><f type="i">lade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lady(n)"><f type="i">ladie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ladle(n)"><f type="i">ladle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laden(a)"><f type="i">laden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lag(n)"><f type="i">lag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lay(v)"><f type="i">laie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laitire(n)"><f type="i">laitire</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="laid(a)"><f type="i">laid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lack(n)"><f type="i">lak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lake(n)"><f type="i">lake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lamb(n)"><f type="i">lam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lame(a)"><f type="i">lame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lament(n)"><f type="i">lament</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lamentation(n)"><f type="i">lamentation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lamentable(a)"><f type="i">lamentable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lamp(n)"><f type="i">lamp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lamprey(n)"><f type="i">lamprie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lampern(n)"><f type="i">lampurn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lane(n)"><f type="i">lane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="land(n)"><f type="i">land</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lank(a)"><f type="i">lank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="language(n)"><f type="i">language</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="languish(v)"><f type="i">languish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lantern(n)"><f type="i">lantern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lap(n)"><f type="i">lap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lapper(v)"><f type="i">lapper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lapwing(n)"><f type="i">lapwing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lapidary(n)"><f type="i">lapidarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="large(a)"><f type="i">large</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="largeness(n)"><f type="i">largenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="largesse(n)"><f type="i">largesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="largis(?)"><f type="i">largis</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="lard(n)"><f type="i">lard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="larder(n)"><f type="i">larder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="larderhouse(n)"><f type="i">larderhouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lark(n)"><f type="i">lark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="larding(n)"><f type="i">larding</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lare(n)"><f type="i">lare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lazy(a)"><f type="i">lasie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laziness(n)"><f type="i">lasinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lascivious(a)"><f type="i">lasciuious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lash(n)"><f type="i">lash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lashes(n)"><f type="i">lashes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lask(n)"><f type="i">lask</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="last(a)"><f type="i">last</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lasting(n)"><f type="i">lasting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lastage(n)"><f type="i">lastage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="late(a)"><f type="i">late</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lately(adv)"><f type="i">lately</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lat(n)"><f type="i">lat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lath(n)"><f type="i">lath</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Latin(n)"><f type="i">latin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lat-in(?)"><f type="i">lat-in</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="latch(n)"><f type="i">latch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="latchet(n)"><f type="i">latchet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="latter(pr)"><f type="i">latter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="later(adv)"><f type="i">later</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laver(v)"><f type="i">lauer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lavish(v)"><f type="i"><emend err="lauisb">lauish</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lavender(n)"><f type="i">lauender</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lave(v)"><f type="i">laue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lawn(n)"><f type="i">laun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lance(n)"><f type="i">launce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lance-knight(n)"><f type="i">launceknight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="launcher(n)"><f type="i">launcher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laundress(n)"><f type="i">laundresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laundry(n)"><f type="i">laundrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="law(n)"><f type="i">law</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lawyer(n)"><f type="i">lawyer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lawless(a)"><f type="i">lawlesse</form> <xpln></xpln></wordentry>
</page>

<page sig="bb4r" no="199">
<wordentry type="h"><form lexeme="laud(n)"><f type="i">laud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laugh(v)"><f type="i">laugh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laughter(n)"><f type="i">laughter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laurel(n)"><f type="i">laurell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lax(a)"><f type="i">lax</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laxative(n)"><f type="i">laxatiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="laskative(n)"><f type="i">laskatiue</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="le(n)"><f type="i">Le</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lead(n)"><f type="i">lead</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leading(n)"><f type="i">leading</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lease(n)"><f type="i">lease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lease(n)"><f type="i">leace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leaf(n)"><f type="i">leaf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="league(n)"><f type="i">leag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leak(n)"><f type="i">leak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lean(n)"><f type="i">lean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leam(n)"><f type="i">leam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leap(n)"><f type="i">leap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leap-year(n)"><f type="i">leapyere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="learn(v)"><f type="i">learn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="learning(n)"><f type="i">learning</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="least(a)"><f type="i">least</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leather(n)"><f type="i">leather</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lear(n)"><f type="i">leare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lechery(n)"><f type="i">lecherie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lecherer(n)"><f type="i">lecherour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lecherous(a)"><f type="i">lecherous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="led(v)"><f type="i">led</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leaf(n)"><f type="i">lefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="left(v)"><f type="i">left</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leg(n)"><f type="i">leg</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="legion(n)"><f type="i">legion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="legionary(n)"><f type="i">legionarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="legerdemain(n)"><f type="i">legier dumain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="legacy(n)"><f type="i">legacie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="legate(n)"><f type="i">legate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leek(n)"><f type="i">leke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lemon(n)"><f type="i">lemon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leman(n)"><f type="i">leman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lither(a)"><f type="i">leither</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="length(n)"><f type="i"><emend err="leugth">length</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lent(n)"><f type="i">lent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leper(n)"><f type="i">leper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leprosy(n)"><f type="i">leprosie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leper(n)" lexeme="house(n)"><f type="i">leper house</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leese(n)"><f type="i">lese</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="less(a)"><f type="i">lesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leesing(n)"><f type="i">lesing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lessen(v)"><f type="i">lessen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="let(v)"><f type="i">let</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leet(n)"><f type="i">lete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lettice(n)"><f type="i">lettis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="letter(n)"><f type="i">letter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lectern(n)"><f type="i">lettern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="levin(n)"><f type="i">leuin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="level(n)"><f type="i">leuell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="levy(n)"><f type="i">leuie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="levity(n)"><f type="i">leuitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leveret(n)"><f type="i">leueret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lewd(a)"><f type="i">lewd</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="libel(n)"><f type="i">libell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leopard(n)"><f type="i">libard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="liberal(a)"><f type="i">liberall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="liberality(n)"><f type="i">liberalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="liberty(n)"><f type="i">libertie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="libertine(n)"><f type="i">libertine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="library(n)"><f type="i">librarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lice(n)"><f type="i">lice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="licence(n)"><f type="i">licence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="licencious(a)"><f type="i">licencious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="licenciousness(n)"><f type="i">licenciousnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="licorice(n)"><f type="i">licoras</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lickerish(n)"><f type="i">licorish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lickerishness(n)"><f type="i">licorishnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="life(n)"><f type="i">life</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lift(v)"><f type="i">lift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lifter(n)"><f type="i">lifter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="light(n)"><f type="i">light</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lightning(n)"><f type="i">lightning</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lightness(n)"><f type="i">lightnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="like(n)"><f type="i">lik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="like(n)"><f type="i">like</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="likewise(adv)"><f type="i">likewise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="likeness(n)"><f type="i">likenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="likelihood(n)"><f type="i">likelihood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="likely(adv)"><f type="i">likelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lightly(adv)"><f type="i">lightlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lily(n)"><f type="i">lilie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="limbeck(n)"><f type="i">limbek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="limb(n)"><f type="i">lim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lime(n)"><f type="i">lime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lime-twig(n)"><f type="i">limetwig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="limit(n)"><f type="i">limit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="limitation(n)"><f type="i">limitacion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="limiter(n)"><f type="i">limiter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="limp(n)"><f type="i">limp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lin(v)"><f type="i">lin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="line(n)"><f type="i">line</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lingel(n)"><f type="i">lingell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="linen(n)"><f type="i">linen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lining(n)"><f type="i">lining</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ling(n)"><f type="i">ling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="link(n)"><f type="i">link</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="linnet(n)"><f type="i">linet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lint(n)"><f type="i">lint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lion(n)"><f type="i">lion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lioness(n)"><f type="i">lionesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lip(n)"><f type="i">lip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lipsalve(n)"><f type="i">lipsalue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="list(n)"><f type="i">list</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="listen(v)"><f type="i">listen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="leather(n)"><f type="i">lether</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="little(a)"><f type="i">litle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lite(n)"><f type="i">lite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lighter(a)"><f type="i">liter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="live(a)"><f type="i">liue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lend(v)"><f type="i">lend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="liver(n)"><f type="i">liuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="livery(n)"><f type="i">liuerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lively(adv)"><f type="i">liuelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="liveliness(n)"><f type="i">liuelinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="living(n)"><f type="i">liuing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="livering(n)"><f type="i">liuering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="liverwort(n)"><f type="i">liuerwort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lizard(n)"><f type="i">lisard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lie(n)"><f type="i">Ly</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="liar(n)"><f type="i">lyer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="low(a)"><f type="i">Lo</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lob(n)"><f type="i">lob</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lobcock(n)"><f type="i">lobcok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="looby(n)"><f type="i">lobie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lobster(n)"><f type="i">lobster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loach(n)"><f type="i">loche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="locust(n)"><f type="i">locust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lode(n)"><f type="i">lode</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lodestone(n)"><f type="i">lodestone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loaden(a)"><f type="i">loden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lodge(n)"><f type="i">lodge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lodging(n)"><f type="i">lodging</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loaf(n)"><f type="i">lofe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loft(n)"><f type="i">loft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lofty(adv)"><f type="i">loftie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loftiness(n)"><f type="i">loftinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="log(n)"><f type="i">log</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="logician(n)"><f type="i">logiciane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="logic(n)"><f type="i">logik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lock(n)"><f type="i">lok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lockram(n)"><f type="i">lokeram</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loin(n)"><f type="i">loin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loll(n)"><f type="i">lol</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loam(n)"><f type="i">lome</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lone(a)"><f type="i">lone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="long(a)"><f type="i">long</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="longing(n)"><f type="i">longing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="longer(a)"><f type="i">longer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="look(v)"><f type="i">look</form> <xpln></xpln></wordentry>
</page>

<page sig="bb4v" no="200">
<wordentry type="h"><form lexeme="look(n)"><f type="i">look</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loop(n)"><f type="i">loop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loom(n)"><f type="i">loom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lop(n)"><f type="i">lop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lope(n)"><f type="i">lope</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loophole(n)"><f type="i">loophole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lord(n)"><f type="i">lorde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lordship(n)"><f type="i">lord ship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lording(n)"><f type="i">lording</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lose(v)"><f type="i">lose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="losenge(n)"><f type="i">losenge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loss(n)"><f type="i">losse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="losel(n)"><f type="i">lossell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lost(a)"><f type="i">lost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lot(n)"><f type="i">lot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lotary(n)"><f type="i">lotarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loath(a)"><f type="i">lo'the 
lo`the </form> <xpln><f type="r"><class type="accent">Dist.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="love(n)"><f type="i">loue 
lo&ugrave;e </form> <xpln><f type="r"><class type="accent">Dist.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="loving(n)"><f type="i">louing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loving(n)"><f type="i">lo&ugrave;ing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lown(a)"><f type="i">loun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lout(n)"><f type="i">lout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loutish(a)"><f type="i">loutish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lowly(adv)"><f type="i">lowlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="low(a)"><f type="i">low</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lowliness(n)"><f type="i">lowlinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loud(a)"><f type="i">loud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loudly(adv)"><f type="i">loudle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lour(n)"><f type="i">lour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="louse(n)"><f type="i">louse 
louse </form> <xpln><f type="r"><class type="pos">Parts 
Verb.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="loyal(a)"><f type="i">loyall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loyalty(n)"><f type="i">loyaltie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loiter(v)"><f type="i">loyter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="loitering(n)"><f type="i">loytering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lubber(n)"><f type="i">lubber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="long(a)"><f type="i">long</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lug-pudding(n)"><f type="i">lugpudding</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="luck(n)"><f type="i">luk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lucky(a)"><f type="i">lukkie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="luke(n)"><f type="i">luke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lukewarm(n)"><f type="i">lukewarm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lull(v)"><f type="i">lull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lullaby(n)"><f type="i">lullaby</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lumber(n)"><f type="i">lumber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lump(n)"><f type="i">lump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lumpish(a)"><f type="i">lumpish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lunatic(a)"><f type="i">l&uacute;natik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lungs(n)"><f type="i">lungs</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lungsought(n)"><f type="i">lungsought</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lurdon(n)"><f type="i">lurdon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lurch(v)"><f type="i">lurch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lurcher(n)"><f type="i">lurcher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lurk(v)"><f type="i">lurk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lust(n)"><f type="i">lust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lusty(a)"><f type="i">lustie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lusk(n)"><f type="i">lusk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="luskish(a)"><f type="i">luskish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lustiness(n)"><f type="i">lustinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="luskishness(n)"><f type="i">luskishnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="lute(n)"><f type="i">lute</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="m"><alpha>M</alpha>

<wordentry type="h"><form lexeme="may(v)"><f type="i">Maie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mace(n)"><f type="i">mace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mackerel(n)"><f type="i">macrell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mad(a)"><f type="i">mad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="made(v)"><f type="i">made</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="madder(n)"><f type="i">madder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="madness(n)"><f type="i">madnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maid(n)"><f type="i">maid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maidenly(adv)"><f type="i">maidenlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mail(n)"><f type="i">mail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maim(v)"><f type="i">maim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="main(a)"><f type="i">main</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mainly(n)"><f type="i">mainlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="majesty(n)"><f type="i">maiestie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mayoralty(n)"><f type="i">mairaltie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="major(a)" lexeme="mair(a)"><f type="i">maior 
mair </form> <xpln><f type="r"><class type="borrowing">Enf.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="maintain(v)"><f type="i">maintain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maintenance(n)"><f type="i">maintenance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mainprise(n)"><f type="i">mainprise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Mahound(pn)"><f type="i">mahound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="magic(n)"><f type="i">magik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="magician(n)"><f type="i">magicien</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="magical(a)"><f type="i">magicall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="majoram(n)"><f type="i">maioram</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="magistrate(n)"><f type="i">magistrat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="magnanimity(n)"><f type="i">magnanimitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="magnifical(n)"><f type="i">magnificall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="magnificence(n)"><f type="i">magnificence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="make(v)"><f type="i">make</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maker(n)"><f type="i">maker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maul(n)"><f type="i">mal 
mall </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="male(n)"><f type="i">male</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mallet(n)"><f type="i">mallet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="malapert(n)"><f type="i">malapert</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="malice(n)"><f type="i">malice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="malicious(a)"><f type="i">malicious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maliciously(adv)"><f type="i">maliciouslie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="malcontent(n)"><f type="i">malcontent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="malefactor(n)"><f type="i">malefactor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="malt(n)"><f type="i">malt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maltworm(n)"><f type="i">maltworm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="malmesy(n)"><f type="i">malmesie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mam(n)"><f type="i">mam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mammering(n)"><f type="i">mammering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="man(n)"><f type="i">man</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mane(n)"><f type="i">mane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manch(n)"><f type="i">manch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mangepresent(n)"><f type="i">mangepresent</form> <xpln></xpln>
<lemenote>Not in OED -- "mangy-present"?</lemenote></wordentry>

<wordentry type="h"><form lexeme="mannish(a)"><f type="i">mannish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manly(adv)"><f type="i">manlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manliness(n)"><f type="i">manlinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manchet(n)"><f type="i">manchet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mandilion(n)"><f type="i">mandilion</form> <xpln></xpln>
<lemenote>Cited in OED.</lemenote></wordentry>

<wordentry type="h"><form lexeme="mandrake(n)"><f type="i">mandrag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mankiller(n)"><f type="i">mankiller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manner(n)"><f type="i">maner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manicle(n)"><f type="i">manicle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manifest(a)"><f type="i">manifest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manifold(a)"><f type="i">manifold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manger(n)"><f type="i">manger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mangler(n)"><f type="i">mangler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manor(n)" lexeme="manure(n)"><f type="i">manor 
manure </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manuring(n)"><f type="i">manering 
man&ubreve;ring </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manuary(n)"><f type="i">manuarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mantle(n)"><f type="i">mantle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manumise(v)"><f type="i">manumise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="manumission(n)"><f type="i">manumission</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maple(n)"><f type="i">m&amacron;ple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mar(v)"><f type="i">mar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mare(n)"><f type="i">mare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marble(n)"><f type="i">marble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mart(n)"><f type="i">marte</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="march(n)"><f type="i">march</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marches(n)"><f type="i">marches</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marry(v)"><f type="i">m&abreve;rie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marriage(n)"><f type="i">mariage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marigold(n)"><f type="i">marigold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mariner(n)"><f type="i">mariner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mary(n)"><f type="i">m&amacron;rie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marmoset(n)"><f type="i">marmset</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mark(n)"><f type="i">mark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="market(n)"><f type="i">market</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marlin(n)"><f type="i">marlin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marchpane(n)"><f type="i">marchpane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="margent(n)" lexeme="marginal(a)"><f type="i">margent 
marginall </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marle(n)"><f type="i">marle</form> <xpln></xpln></wordentry>
</page>

<page sig="cc1r" no="201">
<emend err="marle"></emend>

<wordentry type="h"><form lexeme="marmalade(n)"><f type="i">marmelade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marquess(n)"><f type="i">marquesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marsh(n)" lexeme="marish(n)"><f type="i">marsh 
marish </form> <xpln><f type="r"><class type="contraction">Cont.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="marshes(n)"><f type="i">marshes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marshall(n)"><f type="i">marshall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marshalled(a)"><f type="i">marshalled</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="martial(a)"><f type="i">martiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="martnet(n)"><f type="i">martnet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="martyr(n)"><f type="i">martir</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="martyrdom(n)"><f type="i">martirdom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marvel(n)"><f type="i">maruel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="marvellous(a)"><f type="i">maruellous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mash(n)"><f type="i">mash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maze(n)"><f type="i">mase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mazer(n)"><f type="i">maser</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mass(n)"><f type="i">masse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="massy(a)"><f type="i">massie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mason(n)"><f type="i">mason  </form> <xpln><f type="r"><class type="accent">O passon.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="master(n)"><f type="i">master 
master </form> <xpln><f type="r"> <class type="borrowing">Enf.</class> <class type="spelling">the I not
out or what 
if best with i?</class></xpln></wordentry>

<wordentry type="h"><form lexeme="mistress(n)"><f type="i">mistresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mastership(n)"><f type="i">mastirship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mistresship(n)"><f type="i">mistresship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mast(n)"><f type="i">m&agrave;st </form> <xpln><f type="r"><class type="unknown">Conf.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="mast(n)"><f type="i">m&aacute;st</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="masterful(a)"><f type="i">masterfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mat(n)"><f type="i">mat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mate(n)"><f type="i">mate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="matter(n)"><f type="i">mater</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="material(a)"><f type="i">materiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="materiality(n)"><f type="i">materialitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="matrimony(n)"><f type="i">matrimonie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="matrimonial(a)"><f type="i">matrimoniall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mattress(n)"><f type="i">matresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="matrice(n)"><f type="i">matrice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mattock(n)"><f type="i">mattok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="match(n)"><f type="i">match</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mavis(n)"><f type="i">mauis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maw(n)"><f type="i">maw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maw-worm(n)"><f type="i">mawworm</form> <xpln></xpln>
<lemenote>Cited by OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="mawks(n)"><f type="i">mauks</form> <xpln></xpln>
<lemenote>Predates earliest OED citation</lemenote></wordentry>

<wordentry type="h"><form lexeme="malkin(n)"><f type="i">maukin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maund(n)"><f type="i">maund</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maundy(n)"><f type="i">maundie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="me(pr)"><f type="i">Me</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meacock(n)"><f type="i">meacok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mead(n)"><f type="i">mead</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meal(n)"><f type="i">meal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mean(n)"><f type="i">mean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meanly(adv)"><f type="i">meanlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="measles(n)"><f type="i">measles</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="measure(n)"><f type="i">measur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="measured(a)"><f type="i">meas&ubreve;red</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mease(n)"><f type="i">mease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meat(n)"><f type="i">meat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mere(n)"><f type="i">mear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="march(n)"><f type="i">mearce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meresauce(n)"><f type="i">mearsauce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mermaid(n)"><f type="i">mearmaid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="merestone(n)"><f type="i">mearstone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meager(a)"><f type="i">meager</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="menalty(n)"><f type="i">meanaltie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mead(n)"><f type="i">mede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mediocrity(n)"><f type="i">mediocritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="medicine(n)" lexeme="medcin(n)"><f type="i">medicin 
medcin </form> <xpln><f type="r"><class type="contraction">Cnt.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="meddle(n)"><f type="i">medle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meddler(n)"><f type="i">medler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="medley(n)"><f type="i">medlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mediator(n)"><f type="i">mediator</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mediation(n)"><f type="i">mediation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meditate(v)"><f type="i">meditate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meditation(n)"><f type="i">meditation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meadow(n)"><f type="i">medow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meek(a)"><f type="i">meke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meekness(n)"><f type="i">mekenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="melancholy(n)"><f type="i">melancholie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="melody(n)"><f type="i">melodie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="melodious(a)"><f type="i">melodious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mellow(a)"><f type="i">melow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="melons(n)"><f type="i">melons</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="melt(v)"><f type="i">melt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="member(n)"><f type="i">member</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="memory(n)"><f type="i">memorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="memorial(n)"><f type="i">memoriall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="men(n)"><f type="i">men</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mend(v)"><f type="i">mend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meant(v)"><f type="i">ment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mention(v)"><f type="i">mention</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="merry(a)"><f type="i">mere 
merie </form> <xpln><f type="r"><class type="borrowing">Enf.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="mercy(n)"><f type="i">mercie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="merciful(a)"><f type="i">mercifull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mercifulness(n)"><f type="i">mercifulnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mercer(n)"><f type="i">mercer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mercy(n)"><f type="i">mercie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mercery(n)"><f type="i">mercerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="merit(n)"><f type="i">merit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meritorious(a)"><f type="i">meritorious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="merchant(n)"><f type="i">merchant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="merchandise(n)"><f type="i">merchandise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="message(n)"><f type="i">message</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="messenger(n)"><f type="i">messager</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="maslin(n)"><f type="i">mesling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="met(v)"><f type="i">met</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meet(a)"><f type="i">mete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="metal(n)"><f type="i">metle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="meek(n)"><f type="i">meke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mere(n)"><f type="i">mere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mew(n)"><f type="i">mewe 
mew </form> <xpln><f type="r">Cat 
Hauk</xpln></wordentry>

<wordentry type="h"><form lexeme="mible(n)"><f type="i">mible</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="mid(a)"><f type="i">mid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="middle(n)"><f type="i">midle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="midst(n)"><f type="i">midst</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="midnight(n)"><f type="i">midnight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="midriff(n)"><f type="i">midrif</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="midwife(n)"><f type="i">midwife</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="midway(n)"><f type="i">midwaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mice(n)"><f type="i">mice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="micher(n)"><f type="i">micher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mighty(n)"><f type="i">mightie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="might(n)"><f type="i">might</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mightiness(n)"><f type="i">mightinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mill(n)"><f type="i">mill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mile(n)"><f type="i">mile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="million(n)"><f type="i">milion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="miller(n)"><f type="i">miller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="milt(n)"><f type="i"><emend err="mi lt">milt</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mild(a)"><f type="i">milde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="milk(n)"><f type="i">milk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mildew(n)"><f type="i">mildew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mince(v)"><f type="i">mince</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mine(pr)"><f type="i">mine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mine(n)"><f type="i">min</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mining(n)"><f type="i">mining</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mineral(n)"><f type="i">minerall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mind(n)"><f type="i">minde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mindful(a)"><f type="i">mindefull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mingle(v)"><f type="i">mingle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="minikin(n)"><f type="i">minikin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="minish(n)"><f type="i">minish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="minister(n)"><f type="i">minister</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ministry(n)"><f type="i">ministrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="minority(n)"><f type="i">minoritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="minstrel(n)" lexeme="minstrelsie(n)"><f type="i">minstrell 
minstrelsie </form> <xpln><f type="r"><class type="borrowing">Enfr.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="minister(n)" lexeme="monastery(n)"><f type="i">minister 
monasterie </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="mint(n)"><f type="i">mint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="minute(n)"><f type="i">minut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="myrrh(n)"><f type="i">mir</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="myrrha(n)"><f type="i">myrrha</form> <xpln></xpln>
<lemenote>Antedates earliest OED citation (1598)</lemenote></wordentry>

<wordentry type="h"><form lexeme="mire(n)"><f type="i">mire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="miracle(n)"><f type="i">miracle</form> <xpln></xpln></wordentry>
</page>

<page sig="cc1v" no="202">
<lemepagenote>Page 201 is printed "102".</lemepagenote>

<wordentry type="h"><form lexeme="miraculous(a)"><f type="i">miraculous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mirror(n)"><f type="i">mirror</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mirth(n)"><f type="i">mirth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="myrtle(n)"><f type="i">mirtle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="miss(n)"><f type="i">misse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misadventure(n)"><f type="i">misaduentre</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misbeseem(v)"><f type="i"><emend err="msbeseme">misbeseme</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="missel(n)"><f type="i">misle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mistletoe(n)"><f type="i">mistlet&oacute;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mischance(n)"><f type="i">mischance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mischief(n)"><f type="i">mischefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mischieve(v)"><f type="i">mischeue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misconster(v)"><f type="i">misconster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mischevous(a)"><f type="i">mischeuous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misdeed(n)"><f type="i">misdede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misfortune(n)"><f type="i">misfortun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misfashion(v)"><f type="i">misfashion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mishapen(a)"><f type="i">mishapen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misprision(n)"><f type="i">misprision</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="miser(n)"><f type="i">miser</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misery(n)"><f type="i">miserie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="miserable(a)"><f type="i">miserable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mises(n)"><f type="i">mises</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mist(n)"><f type="i">mist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misty(a)"><f type="i">mistie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mistake(n)"><f type="i">mistake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mystical(a)"><f type="i">misticall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mystery(n)"><f type="i">misterie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misdemeanor(n)"><f type="i">misdemeanor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mistrust(v)"><f type="i">mistrust </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="misuse(n)" lexeme="mis&ugrave;se(n)"><f type="i">mis&uacute;se 
mis&ugrave;se </form> <xpln>
<f type="r"><class type="accent">Dist.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="mite(n)"><f type="i">mite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="miter(n)"><f type="i">miter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mitigate(v)"><f type="i">mitigate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mitigation(n)"><f type="i">mitigation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mixt(a)"><f type="i">mixt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mixture(n)"><f type="i">mixture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="my(pr)"><f type="i">my</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="more(n)"><f type="i">Mo</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mobs(n)"><f type="i">mobs</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mobility(n)"><f type="i">mobilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="modest(a)"><f type="i">modest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="modesty(n)"><f type="i">modestie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="model(n)"><f type="i">modell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moderate(a)"><f type="i">moderate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moderation(n)"><f type="i">moderation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="modern(n)"><f type="i">modern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="modulate(v)"><f type="i">modulate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moh(n)"><f type="i">moh</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="moist(a)"><f type="i">moyst</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moisture(n)"><f type="i">moystur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moistness(n)"><f type="i">moystnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moil(n)"><f type="i">moil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moiled(a)"><f type="i">moild</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1618)</lemenote></wordentry>

<wordentry type="h"><form lexeme="mole(n)"><f type="i">mole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mould(n)"><f type="i">mold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mouldy(a)"><f type="i">moldie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="molten(a)"><f type="i">molten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mome(n)"><f type="i">mome</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moment(n)"><f type="i">moment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moon(n)"><f type="i">mone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="money(n)"><f type="i">monie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="month(n)"><f type="i">moneth 
month </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="monster(n)"><f type="i">monster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="monstruous(a)"><f type="i">monstruous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Monday(n)"><f type="i">mondaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mood(n)"><f type="i">mood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moody(a)"><f type="i">moodie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moon(n)"><f type="i">moon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moonish(a)"><f type="i">moonish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moot(n)"><f type="i">moot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mooting(n)"><f type="i">mooting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="morn(n)"><f type="i">moorn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="more(pr)"><f type="i">more</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mortgage(n)"><f type="i">morgage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mourning(n)"><f type="i">moorning</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="morning(n)"><f type="i">morning</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="morphew(n)"><f type="i">morfew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="morsel(n)"><f type="i">morsell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="morter(n)"><f type="i">morter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mortal(a)"><f type="i">mortall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mortality(n)"><f type="i"><emend err="motalitie">mortalitie</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mortuary(n)"><f type="i">mortuarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mortify(v)"><f type="i">mortify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moss(n)"><f type="i">mosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mossy(a)"><f type="i">mossie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="most(pr)"><f type="i">most</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mote(n)"><f type="i">mote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="moth(n)"><f type="i">moth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="motley(n)"><f type="i">motlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mother(n)"><f type="i">m&ograve;ther 
m&oacute;ther </form> <xpln><f type="r"><class type="accent">Dist.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="motherwort(n)"><f type="i">m&ograve;therwort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mount(n)"><f type="i">mount</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mountain(n)"><f type="i">mountain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="move(v)"><f type="i">m&ograve;ue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mouse(n)"><f type="i">mo&ugrave;se 
<emend err="mo&ugrave;se">mo&uacute;se</emend> </form> <xpln><f type="r"><class type="accent">Dist.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="mouser(n)"><f type="i">mo&ugrave;ser</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mousetrap(n)"><f type="i">mo&uacute;setrap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mousehole(n)"><f type="i">mo&ugrave;sehole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mouth(n)"><f type="i">mouth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mouthing(n)"><f type="i">mouthing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mouth(n)"><f type="i">mo&uacute;th</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mow(n)" lexeme="mowing(n)"><f type="i">mow 
mowing </form> <xpln><f type="r"> <class type="accent">Dist.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="mow(n)" lexeme="mowing(n)"><f type="i">m&ograve;w 
m&ograve;wing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mowers(n)"><f type="i">m&ograve;wers 
<emend err="m&ograve;wers">m&oacute;wers</emend> </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="much(pr)"><f type="i">much</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mud(n)"><f type="i">mud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muddy(a)"><f type="i">muddie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mug(n)"><f type="i">mug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mugwort(n)"><f type="i">mugwort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muffle(v)"><f type="i">mufle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muckender(n)"><f type="i">mukender</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muck(n)"><f type="i">muk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mule(n)"><f type="i">mule</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mullet(n)"><f type="i">mullet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muleteer(n)"><f type="i">muletter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mulberry(n)"><f type="i">mulberie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="multitude(n)"><f type="i">multitude</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="multiply(v)"><f type="i">multiply</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="multiplication(n)"><f type="i">multiplication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mum(n)"><f type="i">mum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mumchance(n)"><f type="i">mumchaunce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mummery(n)"><f type="i">mummerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mun(n)"><f type="i">mun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mongrel(n)"><f type="i">mungrell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="monk(n)"><f type="i">munk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="monkey(n)"><f type="i">munkie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="monkish(a)"><f type="i">munkish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mure(n)"><f type="i">mure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="murder(n)"><f type="i">murder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="murrey(n)"><f type="i">murrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="murrain(n)"><f type="i">murren</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="morion(n)"><f type="i">murrion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="murmur(n)"><f type="i">murmur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muse(n)"><f type="i">muse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muses(n)"><f type="i">muses</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="musing(n)"><f type="i">musing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muscadel(n)"><f type="i">muscadell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="musk(n)"><f type="i">musk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muscle(n)"><f type="i">muscle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mustard(n)"><f type="i">mustard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="must(n)"><f type="i">must</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="musty(n)"><f type="i">mustie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mustiness(n)"><f type="i">mustinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="music(n)"><f type="i">musik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="musical(a)"><f type="i">musicall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="musician(n)"><f type="i">musician</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muster(n)"><f type="i">muster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mutable(a)"><f type="i">mutable</form> <xpln></xpln></wordentry>
</page>

<page sig="cc2r" no="203">
<wordentry type="h"><form lexeme="mutability(n)"><f type="i">mutabilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mutter(v)"><f type="i">mutter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="muttering(n)"><f type="i">muttering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="mutation(n)"><f type="i">mutation</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="n"><alpha>N</alpha>

<wordentry type="h"><form lexeme="nay(n)"><f type="i">Naie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nab(n)"><f type="i">nab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nake(a)"><f type="i">nake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="naked(a)"><f type="i">naked</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nakedness(n)"><f type="i"><emend err="nakedensse">nakednesse</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nail(n)"><f type="i">nail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nalle(n)"><f type="i">nall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="name(n)"><f type="i">name</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="namely(adv)"><f type="i">namelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nape(n)"><f type="i">nape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="napery(n)"><f type="i">napery</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="napkin(n)"><f type="i">napkin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="narrow(a)"><f type="i">narrow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nation(n)"><f type="i">nation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="national(a)"><f type="i">nationall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="native(n)"><f type="i">natiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nativity(n)"><f type="i">natiuitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nature(n)"><f type="i">natur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="natural(a)"><f type="i">nat&ubreve;rall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="natch(n)"><f type="i">natch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nave(n)"><f type="i">naue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="navy(n)"><f type="i">nauie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="naviculary(n)"><f type="i">nauicularie</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="navigation(n)"><f type="i">nauigation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="navel(n)"><f type="i">nauil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="naught(n)"><f type="i">naught</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="naughty(n)"><f type="i">naughtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="naughtiness(n)"><f type="i">naughtinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neb(n)"><f type="i">Neb</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ned(n)"><f type="i">ned</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="near(a)"><f type="i">near</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nearness(n)"><f type="i">nearnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neat(a)"><f type="i">neat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neatness(n)"><f type="i">neatnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="needy(a)"><f type="i">nedie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="need(n)"><f type="i">nede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="needly(n)"><f type="i">nedelie</form> <xpln></xpln>
<lemenote>Postdates last OED citation (c1225)</lemenote></wordentry>

<wordentry type="h"><form lexeme="needless(a)" lexeme="needle(n)"><f type="i">nedelesse 
nedle 
nedles </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="needs(n)"><f type="i">nedes </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="niece(n)"><f type="i">nece </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="necessity(n)"><f type="i">necessitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="necessary(a)"><f type="i">necessarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="necessarily(adv)"><f type="i">necessarilie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neck(n)"><f type="i">nek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neckband(n)"><f type="i">nekband</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neckerchief(n)"><f type="i">nekkeirchefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="negligence(n)"><f type="i">negligence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="negligent(a)"><f type="i">negl&icirc;gent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neighbour(n)"><f type="i">neighbour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neighbourhood(n)"><f type="i">neighbourhood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neither(c)"><f type="i">neither</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nether(a)"><f type="i">nether</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nest(n)"><f type="i">nest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nesty(a)"><f type="i">nestie</form> <xpln></xpln>
<lemenote>Predates last OED citation (1860)</lemenote></wordentry>

<wordentry type="h"><form lexeme="nestle(v)"><f type="i">nestle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nestle-cock(n)"><f type="i">nestlecok</form> <xpln></xpln>
<lemenote>Predates last OED citation (a1632)</lemenote></wordentry>

<wordentry type="h"><form lexeme="nese(n)"><f type="i">nese</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neezing(n)"><f type="i">nesing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nettle(n)"><f type="i">netle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="net(n)"><f type="i">net</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="neat(n)"><f type="i">nete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="never(adv)"><f type="i">neuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nephew(n)"><f type="i">neuew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nevertheless(c)"><f type="i">neuerthelesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="new(a)"><f type="i">new</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="newfangle(a)"><f type="i">newfangle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="newness(n)"><f type="i">newnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="next(a)"><f type="i">next</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nib(n)"><f type="i">Nib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nibble(v)"><f type="i">nible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nice(a)"><f type="i">nice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="niffle(n)"><f type="i">nifle</form> <xpln></xpln>
<lemenote>Predates last OED citation (1775)</lemenote></wordentry>

<wordentry type="h"><form lexeme="nigh(adv)"><f type="i">nigh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="niggle(v)"><f type="i">nighole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="night(n)"><f type="i">night</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nightcap(n)"><f type="i">nightcap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="night-rail(n)"><f type="i">nightrail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nightingale(n)"><f type="i">nightingale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nim(v)"><f type="i">nim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nimble(a)"><f type="i">nimble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nip(n)"><f type="i">nip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nipple(n)"><f type="i">niple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nimbleness(n)"><f type="i">nimblnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nit(n)"><f type="i">nit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nits(n)"><f type="i">nits</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nine(n)"><f type="i">nine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ninety(n)"><f type="i">ninetie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nineth(a)"><f type="i">nineth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="no(a)"><f type="i">No</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="noble(a)"><f type="i">noble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nobility(n)"><f type="i">nobilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nobs(n)"><f type="i">nobs</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="noddy(n)"><f type="i">nodie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="noy(n)"><f type="i">noie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="noisome(a)"><f type="i">noisom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="noyance(n)"><f type="i">noiance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="noint(v)"><f type="i">noint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nock(n)"><f type="i">nok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="noon(n)"><f type="i">non</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="none(pr)"><f type="i">none</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nonage(n)"><f type="i">nonage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nonce(n)"><f type="i">nonste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nonsuit(n)"><f type="i">nonsuit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="north(n)"><f type="i">north</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="northerly(a)"><f type="i">northerlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="northeast(n)"><f type="i">northeast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nose(n)"><f type="i">nose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nosegay(n)"><f type="i">nosegaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nose-thrill(n)"><f type="i">nosethrill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="not(c)"><f type="i">not</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="note(n)"><f type="i">note</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="notable(a)"><f type="i">notable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="notorious(a)"><f type="i">notorious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="notary(n)"><f type="i">notarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nothing(n)"><f type="i">nothing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="knotting(n)"><f type="i">notting</form> <xpln></xpln>
<lemenote>Predates last OED citation (1611)</lemenote></wordentry>

<wordentry type="h"><form lexeme="notify(v)"><f type="i">notify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="novice(n)"><f type="i">nouice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="novelty(n)"><f type="i">noueltie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="now(adv)"><f type="i">now</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="noun(n)"><f type="i">noun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="numb(a)"><f type="i">Num</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="number(n)"><f type="i">number</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="numbles(n)"><f type="i">numbles</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nurse(n)" lexeme="nourice(n)"><f type="i">nurse 
nurice </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nourish(v)"><f type="i">nurrish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nurriture(n)"><f type="i">nurriture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nurture(n)"><f type="i">nurture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nuzzle(v)"><f type="i">nusle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nun(n)"><f type="i">nun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nut(n)"><f type="i">nut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="nutritive(a)"><f type="i">nutr&iuml;tiue</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="o"><alpha>O</alpha>

<wordentry type="h"><form lexeme="obey(v)"><f type="i">Obaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obedience(n)"><f type="i">obedience</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obeisance(n)"><f type="i">obeisance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obedient(a)"><f type="i">obedient</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="object(n)"><f type="i">obiect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="objection(n)"><f type="i">obiection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oblation(n)"><f type="i">oblation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obligation(n)"><f type="i">obligation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oblique(a)"><f type="i">oblique</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="observe(v)"><f type="i">obserue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="observation(n)"><f type="i">obseruation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obstinate(a)"><f type="i">obstinate</form> <xpln></xpln></wordentry>
</page>

<page sig="cc2v" no="204">
<lemepagenote>Page 204 is printed page "123".</lemepagenote>

<wordentry type="h"><form lexeme="obstinacy(n)"><f type="i">obstinacie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obstacle(n)"><f type="i">obstacle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obscure(a)"><f type="i">obscure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obscurity(n)"><f type="i">obscuritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="obtain(v)"><f type="i">obtain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="occasion(n)"><f type="i">Occasion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="occasioned(a)"><f type="i">occasioned</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="occupy(v)"><f type="i">occupy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="occupation(n)"><f type="i">occupation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="occident(n)"><f type="i">occident</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="occidental(a)"><f type="i">occidentall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="odd(a)"><f type="i">Od</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="odious(a)"><f type="i">odious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="of(pp)"><f type="i">Of</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="offal(n)"><f type="i">offall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="offence(n)"><f type="i">offence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="offend(v)"><f type="i">offend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="offensive(a)"><f type="i">offensiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="offer(v)"><f type="i">offer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="offering(n)"><f type="i">offering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="office(n)"><f type="i">office</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="officiary(n)"><f type="i">officiarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="official(a)"><f type="i">officiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="officious(a)"><f type="i">officious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="officiousness(n)"><f type="i">officiousnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="offspring(n)"><f type="i">ofspring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oft(adv)"><f type="i">oft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="often(adv)"><f type="i">often</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oftentimes(adv)"><f type="i">oftentimes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oh(ex)"><f type="i">Oh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oil(n)"><f type="i">Oil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oily(n)"><f type="i">oilie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oileous(a)"><f type="i">oiace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ointment(n)"><f type="i">ointment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oak(n)"><f type="i">oke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ochre(n)"><f type="i">okar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="old(a)"><f type="i">Old</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="olive(n)"><f type="i">olif</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="olives(n)"><f type="i">oliues</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="omit(v)"><f type="i">Omit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="omnipotent(a)"><f type="i">omnipotent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="omnipotency(n)"><f type="i">omnipotencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="onset(n)"><f type="i">Onset</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="on(pp)"><f type="i">on</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="one(n)"><f type="i">one</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="only(adv)"><f type="i">onelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="once(adv)" lexeme="ones(n)"><f type="i">once 
ones </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unless(c)"><f type="i">onelesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="union(n)"><f type="i">vnion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="open(a)"><f type="i">Open</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="openly(adv)"><f type="i">openlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="operation(n)"><f type="i">operation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="opinion(n)"><f type="i">opinion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="opitulate(n)"><f type="i">opitulate</form> <xpln></xpln>
<lemenote>OED cites this example</lemenote></wordentry>

<wordentry type="h"><form lexeme="opportunity(n)"><f type="i">oportunitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oppose(v)"><f type="i">oppose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="opposition(n)"><f type="i">opposition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oppress(v)"><f type="i">oppresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oppressed(a)"><f type="i">oppressed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oppression(n)"><f type="i">oppression</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="or(c)"><f type="i">Or</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ore(n)"><f type="i">ore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="orchard(n)"><f type="i">orchard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ordain(v)"><f type="i">ordain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="order(n)"><f type="i">order</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ordinary(n)"><f type="i">ordinarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ordinance(n)"><f type="i">ordinance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ordure(n)"><f type="i">ordure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="orange(n)"><f type="i">orenge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="organs(n)"><f type="i">organes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="origin(n)"><f type="i">origin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="original(a)"><f type="i">originall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ornament(n)"><f type="i">ornament</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="orphan(n)"><f type="i">orphan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="orphanism(n)"><f type="i">orphanism</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1598)</lemenote></wordentry>

<wordentry type="h"><form lexeme="osier(n)"><f type="i">Osier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ospray(n)"><f type="i">ospraie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ostrich(n)" lexeme="estridge(n)"><f type="i">ostridge 
estridge </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="othe(n)"><f type="i">Othe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="other(a)"><f type="i">other</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="otherwise(adv)"><f type="i">otherwise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="otherwhere(adv)"><f type="i">otherwhere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oats(n)"><f type="i">otes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oaten(n)"><f type="i">oten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oatmeal(n)"><f type="i">otemeal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="otepite(n)"><f type="i">otepite</form> <xpln></xpln>
<lemenote>Not in OED -- "otenchyte"</lemenote></wordentry>

<wordentry type="h"><form lexeme="otter(n)"><f type="i">otter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="over(pp)"><f type="i">Ouer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overagainst(pp)"><f type="i">oueragainst</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overcharge(v)"><f type="i">ouercharge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overcome(v)"><f type="i">ouercom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overcame(v)"><f type="i">ouercame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overcast(n)"><f type="i">ouercast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overflow(v)"><f type="i"><emend err="onerfl&ograve;w">ouerfl&ograve;w</emend> 
ouerfl&oacute;w </form> <xpln><f type="r"><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="overgrown(a)"><f type="i">ouergr&oacute;wn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overchastise(v)"><f type="i">ouerchastice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overlay(v)"><f type="i">ouerlaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overly(adv)"><f type="i">ouerly</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overlook(v)"><f type="i">ouerlook</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overmost(adv)" lexeme="vppermost(n)"><f type="i">ouermost 
vppermost </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overmuch(n)"><f type="i">ouermuch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overplus(n)"><f type="i">ouerplus</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overshoot(v)"><f type="i">ouershoot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overskip(v)"><f type="i">ouerskip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overleap(v)"><f type="i">ouerleap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overthwart(adv)"><f type="i">ouerthwart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overtake(v)"><f type="i">ouertake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overthrow(v)"><f type="i">ouerthr&oacute;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overthrow(v)"><f type="i">ouerthr&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="overwhelm(v)"><f type="i">ouerwhelm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ought(n)"><f type="i">&ograve;ught</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="owe(v)"><f type="i">&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="owing(n)"><f type="i">&ograve;wing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="owl(n)"><f type="i">oul</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="own(v)"><f type="i">own</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ounce(n)"><f type="i">ounce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="our(pr)"><f type="i">our</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ours(pr)"><f type="i">ours</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="out(adv)"><f type="i">out</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ouch(ex)"><f type="i">outch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="outlaw(n)"><f type="i">outlaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="outlawry(n)"><f type="i">outlawrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="outwardly(adv)"><f type="i">outwardlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="outrage(n)"><f type="i">outrage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ouslie(n)"><f type="i"><emend err="ouslie">outly</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ox(n)"><f type="i">Ox</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oxen(n)"><f type="i">oxen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="oyster(n)"><f type="i">Oyster</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="p"><alpha>P</alpha>

<wordentry type="h"><form lexeme="pay(v)"><f type="i">Paie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pace(n)"><f type="i">pase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patience(n)"><f type="i">pacience</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patient(a)"><f type="i">patient</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pacify(v)"><f type="i">pacify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pacificatory(a)"><f type="i">pacificatorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paid(a)"><f type="i">paid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="page(n)"><f type="i">page</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pageant(n)"><f type="i">pageant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pack(n)"><f type="i">pak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="packer(n)"><f type="i">pakker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pail(n)"><f type="i">pail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="payment(n)"><f type="i">paiment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="payable(n)"><f type="i">paiable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pain(n)"><f type="i">pain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="painful(a)"><f type="i">painfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paint(n)"><f type="i">paint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="painter(n)"><f type="i">painter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pale(a)"><f type="i">pale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="palace(n)"><f type="i">pallace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="palate(n)" lexeme="pallet(n)"><f type="i">palat 
pallet </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="palm(n)"><f type="i">palm</form> <xpln></xpln></wordentry>
</page>

<page sig="cc3r" no="205">
<wordentry type="h"><form lexeme="palmistry(n)"><f type="i">palmistrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="palfrey(n)"><f type="i">palfrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="palfreyman(n)"><f type="i">palfrieman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="palsy(n)"><f type="i">palsie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pamper(v)"><f type="i">pamper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pamphlet(n)"><f type="i">pamflet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pan(n)"><f type="i">pan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pancake(n)"><f type="i">pancake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="panel(n)"><f type="i">panell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pannier(n)"><f type="i">panyer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pang(n)"><f type="i">pang</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pant(n)"><f type="i">pant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pantry(n)"><f type="i">pantrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="panther(n)"><f type="i">panthere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pantofle(n)"><f type="i">pantofle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pap(n)"><f type="i">pap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pope(n)"><f type="i">pape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paper(n)"><f type="i">paper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pare(n)"><f type="i">pare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parcel(n)"><f type="i">parcell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paradise(n)"><f type="i">paradise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paramour(n)"><f type="i">paramour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parchment(n)"><f type="i">parchement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parch(v)"><f type="i">parch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parable(n)"><f type="i">parable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parability(n)"><f type="i">parabilitie</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1654)</lemenote></wordentry>

<wordentry type="h"><form lexeme="pardon(n)"><f type="i">pardon </form> <xpln><f type="r"><class type="accent">o passant</class></xpln></wordentry>

<wordentry type="h"><form lexeme="parent(n)"><f type="i">parent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parentage(n)"><f type="i">parentage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parget(n)"><f type="i">parget</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pargeter(n)"><f type="i">pargetter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parish(n)"><f type="i">parish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parishioner(n)"><f type="i">parishioner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="park(n)"><f type="i">park</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parle(n)"><f type="i">parl&eacute; </form> <xpln> <class type="borrowing">Enst.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="parliament(n)"><f type="i">parlement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parrot(n)"><f type="i">parret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="part(n)"><f type="i">part</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partial(a)"><f type="i">partiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partiality(n)"><f type="i">partialitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partialist(n)"><f type="i">partialist</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1597)</lemenote></wordentry>

<wordentry type="h"><form lexeme="partake(v)"><f type="i">partake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partaker(n)"><f type="i">partaker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parting(n)"><f type="i">parting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partisan(n)"><f type="i">partisan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partlet(n)"><f type="i">partlet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="particular(n)"><f type="i">particular</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="particularity(n)"><f type="i">particularitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partition(n)"><f type="i">partition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partner(n)"><f type="i">partner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="partridge(n)"><f type="i">partridge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pash(v)"><f type="i">pash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pasht(a)"><f type="i">pasht</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pass(v)"><f type="i">passe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="passage(n)"><f type="i">passage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="passion(n)"><f type="i">passion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="passover(n)"><f type="i">passeouer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="passport(n)"><f type="i">pasport</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="past(n)"><f type="i">past</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paste(v)"><f type="i">paste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pastime(n)"><f type="i">pastime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pasty(n)"><f type="i">pastie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pasture(n)"><f type="i">pastur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pat(n)"><f type="i">pat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pate(n)"><f type="i">pate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patch(n)"><f type="i">patch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pattern(n)"><f type="i">patern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patens(n)"><f type="i">patens</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patent(n)"><f type="i">patent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="path(n)"><f type="i">path</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pathway(n)"><f type="i">pathwaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patriarch(n)"><f type="i">patriarch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patrimony(n)"><f type="i">patrimonie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patrimonial(n)"><f type="i">patrimoniall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patron(n)"><f type="i">patron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="patronage(n)"><f type="i">patronage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pave(v)"><f type="i">paue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paviour(n)"><f type="i">pauiour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pavement(n)"><f type="i">pauement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pavilion(n)"><f type="i">pauilion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paw(n)"><f type="i">paw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pawes(n)" lexeme="pause(n)"><f type="i">pawes 
pause </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paucity(n)"><f type="i">paucitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peace(n)" lexeme="peach(n)" lexeme="pease(n)"><f type="i">Peace 
peach
pease </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pear(n)"><f type="i">pear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pierce(v)"><f type="i">pearce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="piercer(n)"><f type="i">pearcer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="percher(n)"><f type="i">pearcher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pearl(n)"><f type="i">pearle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peal(n)"><f type="i">peal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peerless(n)"><f type="i">pearlesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peak(n)"><f type="i">peak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peat(n)"><f type="i">peat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peach(n)"><f type="i">peche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pecock(n)"><f type="i">pecok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peculiar(a)"><f type="i">peculiar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pecuary(n)"><f type="i">pecuarie</form> <xpln></xpln>
<lemenote>Not in OED -- cf. "pecuarious"</lemenote></wordentry>

<wordentry type="h"><form lexeme="piece(n)"><f type="i">pece</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peddle(n)"><f type="i">pedle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pedlar(n)"><f type="i">pedler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pedigre(n)"><f type="i">pedigr&eacute;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peck(n)"><f type="i">pek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peg(n)"><f type="i">peg</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peal(n)"><f type="i">pele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pelf(n)"><f type="i">pelf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pellet(n)"><f type="i">pellet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pelt(n)"><f type="i">pelt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pellitory(n)"><f type="i">pellitorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pelican(n)"><f type="i">pellicane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pen(n)"><f type="i">pen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pendhouse(n)" lexeme="penthouse(n)"><f type="i">pendhouse 
penthouse </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="penalty(n)"><f type="i">penaltie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="penny(n)"><f type="i">penie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pence(n)" lexeme="pens(n)"><f type="i">pence 
pens</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pencil(n)"><f type="i">penc&iuml;ll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="penknife(n)"><f type="i">penknife</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="penner(n)"><f type="i">pennar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="people(n)"><f type="i">peple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pensive(a)" lexeme="pensiue(n)"><f type="i">pensif 
pensiue </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pensiveness(n)"><f type="i">pensifnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pensiful(a)"><f type="i">pensifull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pensifulness(n)"><f type="i">pensifulnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pension(n)"><f type="i">pension</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pensioner(n)" lexeme="pensionary(n)"><f type="i">pensioner 
pensionarie </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pent(n)"><f type="i">pent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Penticost(n)"><f type="i">penticost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pepper(n)"><f type="i">peper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pear(n)"><f type="i">pere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perbreak(v)"><f type="i">perbrak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perboil(v)"><f type="i">perboil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peerless(a)"><f type="i">perelesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="paradventure(adv)"><f type="i">paraduentur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perchance(adv)"><f type="i">perchance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peremptory(a)"><f type="i">peremptorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perfect(a)"><f type="i">perfect 
perfit </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perfectness(n)"><f type="i">perfitnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perforce(adv)"><f type="i">perforce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perform(v)"><f type="i">perform</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="performance(n)"><f type="i">performance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="performd(v)"><f type="i">performd </form> <xpln><f type="r"><class type="contraction">Cont.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="peril(n)"><f type="i">perill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perilous(a)"><f type="i">perillous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perish(v)"><f type="i">perish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perjury(n)"><f type="i">periurie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perjured(a)"><f type="i">periured</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="permit(v)"><f type="i">permit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="permission(n)"><f type="i">permission</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perpetuity(n)"><f type="i">perpetuitie</form> <xpln></xpln></wordentry>
</page>

<page sig="cc3v" no="206">
<wordentry type="h"><form lexeme="perpetual(a)"><f type="i">perpetuall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perplex(v)"><f type="i">perplex</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perplexity(n)"><f type="i">perplexitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="persecute(v)"><f type="i">persecute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="persecution(n)"><f type="i">persecution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="parsley(n)"><f type="i">perslie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Persian(a)"><f type="i">persian</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="person(n)"><f type="i">person</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="personage(n)"><f type="i">pers&obreve;nage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="persuade(v)"><f type="i">perswade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="persuasion(n)"><f type="i">perswasion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pervert(v)"><f type="i">peruert</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perverse(a)"><f type="i">peruerse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perversity(n)"><f type="i">peruersitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perverseness(n)"><f type="i">peruersnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peruse(v)"><f type="i">peruse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pestle(n)"><f type="i">pestle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pester(v)"><f type="i">pestur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pestilence(n)"><f type="i">pestilence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="petty(a)"><f type="i">petie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="petticoat(n)"><f type="i">petiecote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pevish(a)"><f type="i">peuish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pevishness(n)"><f type="i">peuishnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pettrel(n)"><f type="i">pettrel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="petition(n)"><f type="i">petition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pew(n)"><f type="i">pew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="peewit(n)"><f type="i">pewet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pewter(n)"><f type="i">pewter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pewterer(n)"><f type="i">pewterer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="fantasy(n)" lexeme="fantastical(n)" lexeme="pheasant(n)" lexeme="physician(n)" lexeme="Pharisee(n)" lexeme="physiognomy(n)" lexeme="Philip(n)" lexeme="frenzy(n)" lexeme="philosophy(n)" lexeme="phoenix(n)"><f type="i">Phantasie 
phantasticall
pheasant
phisician  
pharisie 
phisiognomie 
philip 
phrensie 
philosophie 
phenix </form> <xpln><f type="r"><class type="borrowing">En</class>
<class type="spelling">why
not
all
these
with
f?
</class></xpln></wordentry>

<wordentry type="h"><form lexeme="pebble(n)"><f type="i">Pible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="picture(n)"><f type="i">picture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="piddler(n)"><f type="i">pidler</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1602)</lemenote></wordentry>

<wordentry type="h"><form lexeme="piddle(v)"><f type="i">pidle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pig(n)"><f type="i">pig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pigeon(n)"><f type="i">pigeon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pick(v)"><f type="i">pik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pike(n)"><f type="i">pike</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pickaxe(n)"><f type="i">pikax</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pickle(n)"><f type="i">pikle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pickler(n)"><f type="i">pikler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pickerel(n)"><f type="i">pikerell 
pikrell </form> <xpln><f type="r"><class type="contraction">Const.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="pixkthank(n)"><f type="i">pikthank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Pilate(pn)"><f type="i">pilate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pilot(n)"><f type="i">pilote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pill(n)"><f type="i">pill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="piles(n)"><f type="i">piles</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pillar(n)"><f type="i">piller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pillory(n)"><f type="i">pillerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pilgrim(n)"><f type="i">pilgrim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pilgrimage(n)"><f type="i">pilgrimage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pilgrim-salve(n)"><f type="i">pilgrimsalue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pilled(a)"><f type="i">pild</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pillow(n)"><f type="i">pillow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pillow-bere(n)"><f type="i">pilloubear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pimple(n)"><f type="i">pimple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pimpernel(n)"><f type="i">pimpernell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pin(n)"><f type="i">pin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pin-dust(n)"><f type="i">pindust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pine(n)"><f type="i">pine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pineoke(n)"><f type="i">pineoke</form> <xpln></xpln>
<lemenote>Not in OED?</lemenote></wordentry>

<wordentry type="h"><form lexeme="pineapple(n)"><f type="i">pine-aple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pine-tree(n)"><f type="i">pine-tr&egrave;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pinnacle(n)"><f type="i">pinacle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pincers(n)"><f type="i">pinsers</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pinch(n)"><f type="i">pinch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pinch-crust(n)"><f type="i">pinchcrust</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1602)</lemenote></wordentry>

<wordentry type="h"><form lexeme="pin-case(n)"><f type="i">pincase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pinion(n)"><f type="i">pinion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pink(n)"><f type="i">pink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pinson(n)"><f type="i">pinsons</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pinnace(n)"><f type="i">pinace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pint(n)"><f type="i">pinte</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pint-pot(n)"><f type="i">pintepot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pip(n)"><f type="i">pip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pipe(n)"><f type="i">pipe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pipkin(n)"><f type="i">pipkin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pirr(n)"><f type="i">pir</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pirate(n)"><f type="i">pirate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="piracy(n)"><f type="i">piracie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="piss(n)"><f type="i">pisse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pismere(n)"><f type="i">pismere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pisspot(n)"><f type="i">pispot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pit(n)"><f type="i">pit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pittance(n)"><f type="i">pittance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pitch(n)"><f type="i">pitch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pitchfork(n)"><f type="i">pitchfork</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pitcher(n)"><f type="i">pitcher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pitfall(n)"><f type="i">pitfall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pith(n)"><f type="i">pith</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pithy(n)"><f type="i">pithie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="piety(n)" lexeme="pity(n)"><f type="i">pietie 
pitie </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="piteous(a)"><f type="i">piteous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pitiful(a)"><f type="i">pitifull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pitifulness(n)"><f type="i">pitifulnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pie(n)"><f type="i">py</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pyed(a)"><f type="i">pyed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="placard(n)"><f type="i">Placard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="place(n)"><f type="i">place</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plague(n)" lexeme="ge(n)"><f type="i">pla`ge </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plaguy(n)" lexeme="gie(n)"><f type="i">pla`gie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="play(n)"><f type="i">plaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="playing(n)"><f type="i">plaing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plaint(n)"><f type="i">plaint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plaice(n)"><f type="i">plaice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plane(n)"><f type="i">plane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plainly(adv)"><f type="i">planelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plaintiff(n)"><f type="i">plaintif</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="planet(n)"><f type="i">planet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plank(n)"><f type="i">plank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plant(n)"><f type="i">plant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plantane(n)"><f type="i">plantane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plash(n)"><f type="i">plash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plashy(a)"><f type="i">plashie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plaster(n)"><f type="i">plaster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plasterer(n)"><f type="i">plasterer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plat(n)"><f type="i">plat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plate(n)"><f type="i">plate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="platter(n)"><f type="i">platter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="platform(n)"><f type="i">platform</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plea(n)"><f type="i">plea</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plead(v)"><f type="i">plead</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="please(n)"><f type="i">please</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pleasure(n)"><f type="i">pleasur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pleasant(a)"><f type="i">pleasant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pledge(n)"><f type="i">pledge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plenty(n)"><f type="i">plentie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plentiful(a)"><f type="i">plentifull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pleurisy(n)"><f type="i">pleurisie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pliant(a)"><f type="i">pliant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plight(n)"><f type="i">plight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plight(n)"><f type="i">plite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plover(n)"><f type="i">plouer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plough(n)"><f type="i">plough</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plod(v)"><f type="i">plod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ploche(n)"><f type="i">ploche</form> <xpln></xpln>
<lemenote>Predates earliest citation in OED (1586)</lemenote></wordentry>

<wordentry type="h"><form lexeme="pluck(n)"><f type="i">pluk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plum(n)"><f type="i">plum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plume(n)"><f type="i">plume</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plumber(n)"><f type="i">plummer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plunge(n)"><f type="i">plunge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plural(n)"><f type="i">plurall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="plurality(n)"><f type="i">pluralitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ply(v)"><f type="i">ply</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poet(n)"><f type="i">Poet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poetry(n)"><f type="i">poetrie</form> <xpln></xpln></wordentry>
</page>

<page sig="cc4r" no="207">
<wordentry type="h"><form lexeme="poetical(a)"><f type="i">poeticall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pock(n)"><f type="i">pok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poke(n)"><f type="i">poke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pocks(n)"><f type="i">poks</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pokes(n)"><f type="i">pokes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pocky(adv)"><f type="i">pokkie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pocket(n)"><f type="i">pokket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="point(n)"><f type="i">point</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poison(n)"><f type="i">poison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poll(n)"><f type="i">poll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="polecat(n)"><f type="i">polcat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="polish(v)"><f type="i">polish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="policy(n)"><f type="i">pollicie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pollute(v)"><f type="i">pollute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pollution(n)"><f type="i">pollution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pomander(n)"><f type="i">pomander</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pommell(n)"><f type="i">pomell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pomewater(n)"><f type="i">pomewater</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pomegarnete(n)" lexeme="pomegranet(n)"><f type="i">pomegarnet 
pomegranet </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ponds(n)"><f type="i">ponds</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pondering(n)"><f type="i">pondering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ponder(v)"><f type="i">ponder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pool(n)"><f type="i">pooll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poor(a)"><f type="i">poor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Pope(n)"><f type="i">pope</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="popish(a)"><f type="i">popish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="popery(n)"><f type="i">poperie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poppy(n)"><f type="i">poppie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poppy-seed(n)"><f type="i">poppisede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="popinjay(n)"><f type="i">popiniaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="populous(a)"><f type="i">populous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pore(n)"><f type="i">pore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pork(n)"><f type="i">pork</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="porcupine(n)"><f type="i">porkpine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="porch(n)"><f type="i">porche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="porpoise(n)"><f type="i">porpace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="portion(n)"><f type="i">portion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="port(n)"><f type="i">porte</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="portcullis(n)"><f type="i">portcullis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="porter(n)"><f type="i">porter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="portal(n)"><f type="i">portall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="portrait(n)"><f type="i">portraict</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="portraiture(n)"><f type="i">portrature</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pose(n)"><f type="i">pose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="posnet(n)"><f type="i">posnet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="posset(n)"><f type="i">posset</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="possess(v)"><f type="i">possesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="possession(n)"><f type="i">possession</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="postern(n)"><f type="i">postern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="post(n)"><f type="i">poste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pot(n)"><f type="i">pot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pottinger(n)" lexeme="pottage(n)" lexeme="porringer(n)" lexeme="porridge(n)"><f type="i">potinger 
potage 
poringer 
porrage </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pottle(n)" lexeme="pottled(a)" lexeme="pot-lid(n)"><f type="i">potle 
potled 
potlid </form> <xpln><f type="r"><class type="derivation">Deriuat</class> 
<class type="compound">Compound</class></xpln></wordentry>

<wordentry type="h"><form lexeme="potluck(n)"><f type="i">potluk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pouch(n)"><f type="i">poutch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poverty(n)"><f type="i">pouertie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pound(n)"><f type="i">pound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pole(n)"><f type="i">p&oacute;ul</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="power(n)"><f type="i">power</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pout(n)"><f type="i">pout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="powder(n)"><f type="i">pouder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pounce(n)"><f type="i">pounse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="poise(n)"><f type="i">poyse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="practice(n)"><f type="i">Practis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="practitioner(n)"><f type="i">practicioner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pray(v)"><f type="i">praie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prayer(n)"><f type="i">praier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="praise(n)"><f type="i">praise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prank(n)"><f type="i">prank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prat(n)"><f type="i">prat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prate(v)"><f type="i">prate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prattle(n)"><f type="i">pratle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prating(n)"><f type="i">prating</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preach(v)"><f type="i">preach</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preamble(n)"><f type="i">pr&euml;amble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="press(n)"><f type="i">prease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prebend(n)"><f type="i">prebend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prebendary(n)"><f type="i">prebendarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="precious(a)"><f type="i">precious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preferment(n)"><f type="i">preferment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prefixed(a)"><f type="i">prefixed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="predestinate(a)"><f type="i">predestinate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="predestination(n)"><f type="i">predestination</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="predominant(a)"><f type="i">predominant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prejudice(n)"><f type="i">preiudice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prejudicial(a)"><f type="i">preiudiciall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preeminence(n)"><f type="i">preeminence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prelate(n)"><f type="i">prelate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prenumire(n)"><f type="i">prenumire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prepare(v)"><f type="i">prepare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preparation(n)"><f type="i">preparation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preparative(a)"><f type="i">preparatiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preposterous(a)"><f type="i">preposterous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preposition(n)"><f type="i">preposition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prerogative(n)"><f type="i">prerogatiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="present(n)"><f type="i">pres&eacute;nt 
pres&egrave;nt</form> <xpln><f type="r"><class type="accent">Distinct.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="presence(n)"><f type="i">presence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="presentment(n)"><f type="i">presentment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="presentation(n)"><f type="i">presentation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prescribe(v)"><f type="i">prescribe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prescription(n)"><f type="i">prescription</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="preserve(v)"><f type="i">preserue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="perservation(n)"><f type="i">perseruation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="president(n)"><f type="i">president</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="presidence(n)"><f type="i">presidence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="presume(v)"><f type="i">presume</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="presumption(n)"><f type="i">presumption</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="presumptious(v)"><f type="i">presumptious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="press(n)"><f type="i">presse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pretend(v)"><f type="i">pretend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pretence(n)"><f type="i">pretence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pretty(n)"><f type="i">pretie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prevail(v)"><f type="i">preuail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prevent(v)"><f type="i">preuent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="price(n)"><f type="i">price</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pride(n)"><f type="i">pride</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prig(n)"><f type="i">prig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prick(n)"><f type="i">prik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prickle(n)"><f type="i">prikle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pricket(n)"><f type="i">prikket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prime(n)"><f type="i">prime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="primer(n)"><f type="i">primer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="primitive(a)"><f type="i">primitiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="primrose(n)"><f type="i">primerose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prince(n)"><f type="i">prince</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="principal(a)"><f type="i">principall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="principality(n)"><f type="i"><emend err="phincipalitie">principalitie</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="principle(n)"><f type="i">principle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="princely(adv)"><f type="i">princelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="print(n)"><f type="i">print</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="printer(n)"><f type="i">printer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="priority(n)"><f type="i">prioritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prison(n)"><f type="i">prison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prisoner(n)"><f type="i">prisoner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="private(n)"><f type="i">priuate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="privet(n)"><f type="i">priuet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="privy(n)"><f type="i">priuie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="privilege(n)"><f type="i">priuiledge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="privily(adv)"><f type="i">priuilie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="privity(n)"><f type="i">priuitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pry(n)"><f type="i">pry</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="probation(n)"><f type="i">probation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="probationer(n)"><f type="i">probationer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="probate(n)"><f type="i">probate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="procede(v)"><f type="i">procede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proceding(n)"><f type="i">proceding</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="process(n)"><f type="i">proces</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="procession(n)"><f type="i">procession</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proclaim(v)"><f type="i">proclame</form> <xpln></xpln></wordentry>
</page>

<page sig="cc4v" no="208">
<wordentry type="h"><form lexeme="proclamation(n)"><f type="i">proclamation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proctor(n)"><f type="i">procter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="procure(v)"><f type="i">procure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="procuration(n)"><f type="i">procuration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="procurement(n)"><f type="i">procurement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prodigal(a)"><f type="i">prodigall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prodigality(n)"><f type="i">prodigalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="profer(v)"><f type="i">profer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="profit(n)"><f type="i">profit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="profitable(a)"><f type="i">profitable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="profess(v)"><f type="i">professe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="profession(n)"><f type="i">profession</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="professor(n)"><f type="i">professor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="profound(a)"><f type="i">profound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prognosticate(v)"><f type="i">prognosticate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prognostication(n)"><f type="i">prognostication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="progenitor(n)"><f type="i">progenitors</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="progeny(n)"><f type="i">progenie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prohibit(v)"><f type="i">prohibit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prohibition(n)"><f type="i">prohibition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prune(v)"><f type="i">proin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prolong(v)"><f type="i">prolong</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prolongation(n)"><f type="i">prolongation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="promise(n)"><f type="i">promis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="promising(n)"><f type="i">promising</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="promote(v)"><f type="i">promote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="promotion(n)"><f type="i">promotion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prompt(a)"><f type="i">prompt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="promptness(n)"><f type="i">promptnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="promptuary(n)"><f type="i">promptuarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prone(a)"><f type="i">prone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pronounce(v)"><f type="i">pronounce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pronunciation(n)"><f type="i">pronunciation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prop(n)"><f type="i">prop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proper(a)"><f type="i">proper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="property(n)"><f type="i">propertie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proportion(n)"><f type="i">proportion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="propriety(n)"><f type="i">proprietie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="profane(a)" lexeme="profanism(n)" lexeme="profanation(n)" lexeme="prophet(n)" lexeme="prophecy(n)" lexeme="prophetess(n)"><f type="i">prophane 
prophanism 
prophanati<expan type="o+_">on</expan> 
prophet 
prophecie 
prophetisse </form> <xpln><f type="r"><class type="spelling">And
why
not f.</class></xpln>
<lemenote>Predates earliest OED citation "profanism" (1607)</lemenote></wordentry>

<wordentry type="h"><form lexeme="prose(n)"><f type="i">prose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prosper(v)"><f type="i">prosper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prosperity(n)"><f type="i">prosperitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prosperous(a)"><f type="i">prosperous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prostrate(a)"><f type="i">prostrate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="protect(v)"><f type="i">protect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="protector(n)"><f type="i">protectour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prove(v)"><f type="i">proue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proof(n)"><f type="i">prouf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proverb(n)"><f type="i">prouerb</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proverbial(a)"><f type="i">prouerbiall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="provide(v)"><f type="i">prouide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="provision(n)"><f type="i">prouision</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="provoke(v)"><f type="i">prouoke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="provocation(n)"><f type="i"><emend err="pronocation">prouocation</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proud(a)"><f type="i">proud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="provender(n)"><f type="i">prouander</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="proxy(n)"><f type="i">proxie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prowess(n)"><f type="i">prowesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="provident(a)"><f type="i">prouident</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prune(n)"><f type="i">prune</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prudence(n)"><f type="i">prudence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="prudent(a)"><f type="i">prudent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="psalter(n)"><f type="i">psalter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="psalm(n)"><f type="i">psalm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="psalmist(n)"><f type="i">psalmist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pebble(n)"><f type="i">Puble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="publish(v)"><f type="i">publish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="publication(n)"><f type="i">publication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="puddle(n)"><f type="i">pudle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pudding(n)"><f type="i">pudding</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="puff(n)"><f type="i">puf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="puft(a)"><f type="i">puft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pug(n)"><f type="i">pug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="puissant(n)"><f type="i">puissant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="puke(v)"><f type="i">puke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pull(n)"><f type="i">pull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pullet(n)"><f type="i">pullet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pullen(n)"><f type="i">pullen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pulter(n)"><f type="i">pulter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pulley(n)"><f type="i">pullie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pulpit(n)"><f type="i">pulpit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pulse(n)"><f type="i">pulse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pump(n)"><f type="i">pump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pumpion(n)"><f type="i">pumpion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="puny(a)"><f type="i">punie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="punch(n)"><f type="i">punch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="punish(v)"><f type="i">punish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="punishment(n)"><f type="i">punishment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="puppet(n)"><f type="i">puppet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pur(n)"><f type="i">pur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pure(a)"><f type="i">pure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purity(n)"><f type="i">puritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purblind(a)"><f type="i">purblind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purchase(n)"><f type="i">purchase</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purchaser(n)"><f type="i">purchaser</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purfle(n)"><f type="i">purfle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purge(n)"><f type="i">purge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purgatory(n)"><f type="i">purgatorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purgation(n)"><f type="i">purgation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purple(n)"><f type="i">purple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purpose(n)"><f type="i">purpos</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purse(n)"><f type="i">purse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purser(v)"><f type="i">purser</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pursue(v)"><f type="i">pursue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="porcelain(n)"><f type="i">purslaine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pursuivant(n)"><f type="i">purseruant 
pursiuant </form> <xpln><f type="r"><class type="borrowing">Enf.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="pursue(v)"><f type="i">pursew 
persew </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="pursuit(n)"><f type="i">pursuit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purvey(v)"><f type="i">purueie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purveyance(n)"><f type="i">purueance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="purveyer(n)"><f type="i">purueier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="push(n)"><f type="i">push</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ptush(ex)"><f type="i">ptush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="puttock(n)"><f type="i">puttok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="put(v)"><f type="i">put</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="putrify(v)"><f type="i">putrify</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="q"><alpha>Q</alpha>

<wordentry type="h"><form lexeme="quaff(n)"><f type="i">Quaf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="coif(n)"><f type="i">quaif</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quail(n)"><f type="i">quail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quailer(n)"><f type="i">quailer</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="quaint(a)"><f type="i">quaint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quack(n)"><f type="i">quak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quake(n)"><f type="i">quake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quagmire(n)"><f type="i">quagmire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quality(n)"><f type="i">qualitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quantity(n)"><f type="i">quantitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="qualify(v)"><f type="i">qualify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="qualification(n)"><f type="i">qualification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quarrel(n)"><f type="i">quarell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quarreller(n)"><f type="i">quareller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quarry(n)"><f type="i">quarrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quarter(n)"><f type="i">quarter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quart(n)"><f type="i">quart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quartern(n)" lexeme="quartan(n)"><f type="i">quartern 
quartan </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quartpot(n)"><f type="i">quartpot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quartered(a)"><f type="i">quartered</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="kvass(n)"><f type="i">quash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="queasy(a)"><f type="i">quasie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quaum(v)"><f type="i">quaum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="queer(a)"><f type="i">quear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quean(n)"><f type="i">quean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="queen(n)"><f type="i">quene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quench(v)"><f type="i">quench</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quern(n)"><f type="i">quern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="chorister(n)"><f type="i">querister</form> <xpln></xpln></wordentry>
</page>

<page sig="dd1r" no="209">
<wordentry type="h"><form lexeme="quest(n)"><f type="i">quest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="question(n)"><f type="i">question</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="questionist(n)"><f type="i">questionist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quib(n)"><f type="i">quib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quibble(n)"><f type="i">quible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quiddany(n)"><f type="i">quiddenie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quiet(a)"><f type="i">quiet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quick(a)"><f type="i">quik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quicken(v)"><f type="i">quiken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quickly(adv)"><f type="i">quiklie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quickbeam(n)"><f type="i">quikbeam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quikned(a)"><f type="i">quikned</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quill(n)"><f type="i">quill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quilt(n)"><f type="i">quilt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quince(n)"><f type="i">quince</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quinsy(n)"><f type="i">quinsie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quintessence(n)"><f type="i">quintessence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quip(n)"><f type="i">quip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quit(v)"><f type="i">quit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quite(adv)"><f type="i">quite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quitch(v)"><f type="i">quitch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quittance(n)"><f type="i">quittance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quip(n)"><f type="i">quipp&egrave;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="quiver(n)"><f type="i">quiuer</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="r"><alpha>R</alpha>

<wordentry type="h"><form lexeme="ray(n)"><f type="i">Raie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rabbit(n)"><f type="i">rabbet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rabble(n)"><f type="i">rable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="radish(n)"><f type="i">radish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="radiant(a)"><f type="i">radiant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="race(n)"><f type="i">race</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rafter(n)"><f type="i">rafter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rag(n)"><f type="i">rag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ragged(a)"><f type="i">ragged</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raggedness(n)"><f type="i">raggednesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rage(n)"><f type="i">rage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rail(n)"><f type="i">rail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rale(n)"><f type="i">rale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="railer(n)"><f type="i">railour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rain(n)"><f type="i">rain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raignment(n)"><f type="i">rainment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rainbow(n)"><f type="i">rainbow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rack(n)"><f type="i">rak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rake(n)"><f type="i">rake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raker(n)"><f type="i">raker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rakehell(n)"><f type="i">rakehell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="racket(n)"><f type="i">rakket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ram(n)"><f type="i">ram</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rammer(n)"><f type="i">rammer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ramp(n)"><f type="i">ramp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rampire(n)"><f type="i">rampire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ran(v)"><f type="i">ran</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rane(n)"><f type="i">rane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rancor(n)"><f type="i">rancor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rankle(n)"><f type="i">rankle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="range(n)"><f type="i">range</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ranger(n)"><f type="i">ranger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ransack(n)"><f type="i">ransak</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1589)</lemenote></wordentry>

<wordentry type="h"><form lexeme="ransom(n)"><f type="i">ransom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rape(n)"><f type="i">rape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raper(n)"><f type="i">raper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rap(n)"><f type="i">rap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rapt(a)"><f type="i">rapt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rapacity(n)"><f type="i">rapacitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rase(n)"><f type="i">r&aacute;se 
r&agrave;se </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raser(n)"><f type="i">r&agrave;ser</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raisin(n)"><f type="i">rasen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rascal(n)"><f type="i">rascall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rascalion(n)"><f type="i">rascalion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rash(a)"><f type="i">rash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rashness(n)"><f type="i">rashnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raspis(n)"><f type="i">raspis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rat(n)"><f type="i">rat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rate(n)"><f type="i">rate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rather(adv)"><f type="i">rather</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ratify(v)"><f type="i">ratify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ratification(n)"><f type="i">ratification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rattle(n)"><f type="i">ratle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rattling(n)"><f type="i">ratling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rave(n)"><f type="i">raue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raven(n)" lexeme="rauin(n)"><f type="i">rauen 
rauin </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ravelin(n)"><f type="i">rauelin</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1589)</lemenote></wordentry>

<wordentry type="h"><form lexeme="ravish(v)"><f type="i">rauish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ravishment(n)"><f type="i">rauishment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raw(a)"><f type="i">raw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rawness(n)"><f type="i">rawnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="raw-head(n)"><f type="i">rawhead</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reach(n)"><f type="i">Reach</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="real(a)"><f type="i">r&euml;all</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="realty(n)"><f type="i">r&euml;altie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="realm(n)" lexeme="ream(n)"><f type="i">realm 
ream </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="read(v)"><f type="i">read</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reap(v)"><f type="i">reap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reason(n)"><f type="i">reason</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reasonable(a)"><f type="i">reasonable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resty(a)"><f type="i">restie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rebate(n)"><f type="i">rebate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rebec(n)"><f type="i">r&ebreve;bek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rebel(n)"><f type="i">r&ebreve;bell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rebellion(n)"><f type="i">rebellion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rebellious(a)"><f type="i">rebellious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rebound(n)"><f type="i">rebound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rebuke(n)"><f type="i">rebuke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recant(v)"><f type="i">recant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recantation(n)"><f type="i">recantation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reckless(a)"><f type="i">rechlesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="receive(n)"><f type="i">receiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="receipt(n)"><f type="i">receit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recognisance(n)"><f type="i">recognisance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recomfort(n)"><f type="i">recomfort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recommend(v)"><f type="i">recommend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recommendation(n)"><f type="i">recommendation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recompense(v)"><f type="i">recompense</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reconcile(v)"><f type="i">reconcile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reconciliation(n)"><f type="i">reconciliation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="record(n)"><f type="i">rec&ograve;rd 
rec&oacute;rd </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recorder(n)"><f type="i">recorder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recover(v)"><f type="i">recouer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recovery(n)"><f type="i">recouerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recourse(n)"><f type="i">recourse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recount(n)"><f type="i">recount</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recognise(n)"><f type="i">recognise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recoil(n)"><f type="i">recoil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recoiling(n)"><f type="i">recoiling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recreate(v)"><f type="i">recreate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recreation(n)"><f type="i">recreation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recuse(v)"><f type="i">recuse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="recusant(n)"><f type="i">recusant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="red(a)"><f type="i">red</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="redy(a)"><f type="i">redie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="readiness(n)"><f type="i">redinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="redeem(v)"><f type="i">redeme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="redeemer(n)"><f type="i">redemer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="redemption(n)"><f type="i">redemption</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="redress(v)"><f type="i">redresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="redisseisin(n)"><f type="i">redisseason</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="refection(n)"><f type="i">refection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reflection(n)"><f type="i">reflection</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="refer(v)"><f type="i">refer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reform(v)"><f type="i">reform</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reformation(n)"><f type="i">reformation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="refrain(n)"><f type="i">refrain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="refresh(v)"><f type="i">refresh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="refuge(n)"><f type="i">refuge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="refuse(v)"><f type="i">ref&ugrave;se 
ref&uacute;se </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="refusal(n)"><f type="i">refusall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="refine(v)"><f type="i">refine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="referendary(n)"><f type="i">referendarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="regard(n)"><f type="i">regard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="regent(n)"><f type="i">regent</form> <xpln></xpln></wordentry>
</page>

<page sig="dd1v" no="210">
<wordentry type="h"><form lexeme="register(n)"><f type="i">register</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="regiment(n)"><f type="i">regiment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="regrate(n)"><f type="i">regrate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="regrater(n)"><f type="i">regrater</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rehearse(v)"><f type="i">reherse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rehearsal(n)"><f type="i">rehersall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reject(v)"><f type="i">reiect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rejoin(v)"><f type="i">reioyn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rejoinder(n)"><f type="i">reioynder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reiterate(v)"><f type="i">r&euml;iterate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reiteration(n)"><f type="i">r&euml;iteration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reign(n)"><f type="i">reign</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reke(v)"><f type="i">reke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reckon(v)"><f type="i">r&ebreve;ken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reckoning(n)"><f type="i">rekning</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="relation(n)"><f type="i">relation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="relapse(n)"><f type="i">relapse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="relative(n)"><f type="i">relatiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reel(n)"><f type="i">rele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="release(n)"><f type="i">release</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="relent(v)"><f type="i">relent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rely(v)"><f type="i">rely</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="relief(n)"><f type="i">relefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="relic(n)"><f type="i">relice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="religious(n)"><f type="i">religious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="religiousness(n)"><f type="i">religiousnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="relics(n)"><f type="i">reliks</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remain(v)"><f type="i">remain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remainder(n)"><f type="i">remainder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remanent(n)"><f type="i">remanent 
remnant </form> <xpln><f type="r"><class type="borrowing">Enfran.</class> 
<class type="contraction">Contra.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="remedy(n)"><f type="i">remedie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remediable(a)"><f type="i">remediable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remember(v)"><f type="i">remember</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remembrance(n)"><f type="i">remembrance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remembrancer(n)"><f type="i">remembrancer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remit(v)"><f type="i">remit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remission(n)"><f type="i">remission</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remedy(n)"><f type="i">remedie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remediless(n)"><f type="i">remedilesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remorse(n)"><f type="i">remorse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remove(v)"><f type="i">remoue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="remount(v)"><f type="i">remount</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rend(v)"><f type="i">rend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="render(n)"><f type="i">render</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rent(n)"><f type="i">rent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rental(n)"><f type="i">rentall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rennet(n)" lexeme="renate(v)"><f type="i">renet 
renate </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="renegate(n)"><f type="i">renegate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="renew(v)"><f type="i">renew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="renewing(n)"><f type="i">renewing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="renovate(v)"><f type="i">renouate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="renovation(n)"><f type="i">renouation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="renown(n)"><f type="i"><emend err="renoum">renoun</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="renounce(n)"><f type="i">renounce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repay(v)"><f type="i">repaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repayable(a)"><f type="i">repaiable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repair(n)"><f type="i">repare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reparation(n)"><f type="i">reparation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reparative(a)"><f type="i">reparatiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repast(n)"><f type="i">repaste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repeal(n)"><f type="i">repeal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repel(v)"><f type="i">repell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repent(v)"><f type="i">repent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repentance(n)"><f type="i">repentance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repine(v)"><f type="i">repine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="replead(v)"><f type="i">replead</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="replenish(v)"><f type="i">replenish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reply(n)"><f type="i">reply</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="replication(n)"><f type="i">replication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="report(n)"><f type="i">report</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repose(v)"><f type="i">repose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="represent(v)"><f type="i">represent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="representation(n)"><f type="i">representation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reprehend(v)"><f type="i">reprehend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reprehension(n)"><f type="i">reprehension</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repress(v)"><f type="i">represse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reprieve(n)"><f type="i">repriue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reproach(n)"><f type="i">reproche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reprobate(n)"><f type="i">reprobate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reprove(v)"><f type="i">reproue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reproof(n)"><f type="i">reprouf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repulse(n)"><f type="i">repulse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repugnant(a)"><f type="i">repugnant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repugn(v)"><f type="i">repugn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="repute(v)"><f type="i">repute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reputation(n)"><f type="i">reputation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="request(n)"><f type="i">request</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="require(v)"><f type="i">require</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="requisite(a)"><f type="i">requisit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="requite(v)"><f type="i">requite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="requital(n)"><f type="i">requitall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resemble(v)"><f type="i">resemble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resemblance(n)"><f type="i">resemblance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reserve(v)"><f type="i">reserue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reservation(n)"><f type="i">reseruation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rescue(n)"><f type="i">reskew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resign(v)"><f type="i">resigne</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resignation(n)"><f type="i">resignation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resist(v)"><f type="i">resist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resistence(n)"><f type="i">resistence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="residue(n)"><f type="i">residew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="residence(n)"><f type="i">residence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resolve(v)"><f type="i">resolu</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resolute(a)"><f type="i">resolute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resolution(n)"><f type="i">resolution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resort(n)"><f type="i">resort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resound(v)"><f type="i">resound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="respect(n)" lexeme="respit(n)"><f type="i">respect 
respit </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="respective(a)"><f type="i">respectiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rest(n)"><f type="i">rest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="resty(a)"><f type="i">restie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="restitute(v)"><f type="i">restitute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="restitution(n)"><f type="i">restitution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="restorative(n)" lexeme="restority(n)"><f type="i">restauratiue 
restoritie</form> <xpln><f type="r"><class type="borrowing">En.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="restrain(v)"><f type="i">restrain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="restraint(n)"><f type="i">restraint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="retail(n)"><f type="i">retail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="retain(v)"><f type="i">retain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="retainer(n)"><f type="i">retainer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="retentive(a)"><f type="i">retentiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="retire(v)"><f type="i">retire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="retinue(n)"><f type="i">retinew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="retreat(n)"><f type="i">retreat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="retrieve(v)"><f type="i">r&ebreve;tri&ubreve;e</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="return(n)"><f type="i">return</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reave(v)"><f type="i">reaue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reveal(v)"><f type="i">reueal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revel(n)"><f type="i">reuell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revels(n)"><f type="i">reuells</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revelling(n)"><f type="i">reuelling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revenge(n)"><f type="i">reuenge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reverence(n)"><f type="i">reuerence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reverse(n)"><f type="i">reuerse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reversion(n)"><f type="i">reuersion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revile(v)"><f type="i">reuile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revive(v)"><f type="i">reuiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revince(v)"><f type="i">reuince</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revolve(v)"><f type="i">reuolue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="revolution(n)"><f type="i">reuolution</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rue(v)"><f type="i">rew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="realm(n)"><f type="i">rewm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="reward(n)"><f type="i">reward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rib(n)"><f type="i">Rib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ribald(n)"><f type="i">ribald</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ribaldry(n)"><f type="i">ribaldrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ribaud(n)"><f type="i">ribaud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rice(n)"><f type="i">rice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rich(a)"><f type="i">rich</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="riches(n)"><f type="i">riches</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rid(v)"><f type="i">rid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ride(n)"><f type="i">ride</form> <xpln></xpln></wordentry>
</page>

<page sig="dd2r" no="211">
<wordentry type="h"><form lexeme="riddle(n)"><f type="i">ridle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ridge(n)"><f type="i">ridge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rife(a)"><f type="i">rife</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rifle(n)"><f type="i">rifle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rift(n)"><f type="i">rift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rig(n)"><f type="i">rig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="right(n)"><f type="i">right</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="righteous(a)"><f type="i">righteous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="righteousness(n)"><f type="i">righteousnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rigor(n)"><f type="i">rigor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rigorous(a)"><f type="i">rigorous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rim(n)"><f type="i">rim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rhyme(n)"><f type="i">rime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rinse(v)"><f type="i">rinch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rind(n)"><f type="i">rinde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rine(v)"><f type="i">rine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ring(n)"><f type="i">ring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ringtail(n)"><f type="i">ringtail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ringleader(n)"><f type="i">ringleader</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ringworm(n)"><f type="i">ringworm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ringdove(n)"><f type="i">ringdow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="riot(n)"><f type="i">riot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="riotous(a)"><f type="i">riotous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rip(n)"><f type="i">rip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ripe(a)"><f type="i">ripe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ripeness(n)"><f type="i">ripenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rite(n)"><f type="i">rite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rive(n)"><f type="i">riue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="river(n)"><f type="i">riuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rivel(n)"><f type="i">riuel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="riveled(a)"><f type="i">riueled</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rise(v)"><f type="i">rise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roe(n)"><f type="i">Ro</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roebuck(n)"><f type="i">robuk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="robbery(n)"><f type="i">robberie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rob(v)"><f type="i">rob</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="robin(n)"><f type="i">robin <f type="r"></form> <xpln> <f type="r">readbreast </xpln></wordentry>

<wordentry type="h"><form lexeme="robe(n)"><f type="i">robe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roche(n)"><f type="i">roche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rochet(n)"><f type="i">rochet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rock(n)"><f type="i">rok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rocket(n)"><f type="i">rokket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rod(n)"><f type="i">rod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="road(n)"><f type="i">rode</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rogue(n)" lexeme="ge(n)"><f type="i">ro`ge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roguing(n)" lexeme="ging(n)"><f type="i">ro`ging</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roist(n)"><f type="i">roist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roister(n)"><f type="i">roister</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="royal(a)"><f type="i">roial</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="royalty(n)"><f type="i">roialtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roll(n)"><f type="i">roll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rolf(n)"><f type="i">rolf</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="roam(v)"><f type="i">rome</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roaming(n)"><f type="i">roming</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rope(n)"><f type="i">rope</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roper(n)"><f type="i">roper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roar(v)"><f type="i">rore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roaring(n)"><f type="i">roring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rose(n)"><f type="i">rose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rosen(a)"><f type="i">rosen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rosemary(n)"><f type="i">rosemarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roast(n)"><f type="i">roste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roast-meat(n)"><f type="i">rostemeat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rot(n)"><f type="i">rot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rote(v)"><f type="i">rote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roten(a)"><f type="i">roten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rove(v)"><f type="i">roue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rovers(n)"><f type="i">rouers</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="row(n)"><f type="i">r&oacute;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roll(n)" lexeme="rowel(n)"><f type="i">r&ograve;wl 
r&ograve;well</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rout(n)"><f type="i">rout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="round(n)"><f type="i">round</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rough(a)"><f type="i">rough</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rouse(n)"><f type="i">rouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rustle(v)"><f type="i">rousle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="roust(n)"><f type="i">roust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rub(n)"><f type="i">Rub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rubbish(n)"><f type="i">rubbish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rubber(n)"><f type="i">rubber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rubble(n)"><f type="i">ruble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rud(n)"><f type="i">rud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rude(a)"><f type="i">rude</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rudder(n)"><f type="i">rudder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rug(v)"><f type="i">rug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ruged(a)"><f type="i">rugd</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ruffian(n)"><f type="i">ruffiane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ruffle(n)"><f type="i">rufle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ruin(n)"><f type="i">ruin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ruinous(a)"><f type="i">ruinous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rule(n)"><f type="i">rule</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ruling(n)"><f type="i">ruling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rumble(n)"><f type="i">rumble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rumour(n)"><f type="i">rumour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rump(n)"><f type="i">rump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="run(v)"><f type="i">run</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="runt(n)"><f type="i">runt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rusht(a)"><f type="i">rusht</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Russ(n)"><f type="i">russe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rust(n)"><f type="i">rust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rustical(a)"><f type="i">rusticall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="rustling(n)"><f type="i">rustling</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="s"><alpha>S</alpha>

<wordentry type="h"><form lexeme="say(v)"><f type="i">saie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sable(n)"><f type="i">sables</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sabbath(n)"><f type="i">sabboth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="satchel(n)"><f type="i">sachell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sackage(n)"><f type="i">sacage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sacked(a)"><f type="i">sacced</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1593)</lemenote></wordentry>

<wordentry type="h"><form lexeme="sacrify(v)"><f type="i">sacrify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sacrament(n)"><f type="i">sacrament</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sad(a)"><f type="i">sad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saddle(n)"><f type="i">sadle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sadler(n)"><f type="i">sadler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="safe(n)"><f type="i">safe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="safe-conduct(n)"><f type="i">safeconduit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saffron(n)"><f type="i">safron</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="safety(n)"><f type="i">safetie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sag(n)"><f type="i">sag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sage(a)"><f type="i">sage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sageness(n)"><f type="i">sagenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="said(v)"><f type="i">said</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sail(n)"><f type="i">sail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saint(n)"><f type="i">sainct</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sack(n)"><f type="i">sak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saker(n)"><f type="i">saker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saker(n)"><f type="i">sakker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sackcloth(n)"><f type="i">sakcloth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sale(n)"><f type="i">sale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sallet(n)"><f type="i">sallet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="salmon(n)"><f type="i">salmon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="salt(n)"><f type="i">salt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="salter(n)"><f type="i">salter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="salve(n)"><f type="i">salue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="salvation(n)"><f type="i">saluation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="same(n)"><f type="i">same</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sampire(n)"><f type="i">sampier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sand(n)"><f type="i">sand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sand-blind(a)"><f type="i">sandblind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sanctuary(n)"><f type="i">sanctuarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sap(n)"><f type="i">sap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sappy(n)"><f type="i">sappie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sarcenet(n)"><f type="i">sarcenet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sat(v)"><f type="i">sat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="satiety(n)"><f type="i">sacietie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="satisfy(v)"><f type="i"><emend err="satisfitie">satisfie</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="satisfaction(n)"><f type="i">satisfaction</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Saterday(n)"><f type="i">saterdaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saturity(n)"><f type="i">saturitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saturnine(a)"><f type="i">saturnine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="save(v)"><f type="i">saue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="savage(n)"><f type="i">sauage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saved(a)"><f type="i">saued</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sanders(n)"><f type="i">saunders</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saviour(n)"><f type="i">sauiour</form> <xpln></xpln></wordentry>
</page>

<page sig="dd2v" no="212">
<wordentry type="h"><form lexeme="savor(n)"><f type="i">sauor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="savory(n)"><f type="i">sauerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="savin(n)" lexeme="saving(n)"><f type="i">sauin 
sauing </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sauce(n)"><f type="i">sauce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saucy(a)"><f type="i">saucie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sausage(n)"><f type="i">sausage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saw(v)"><f type="i">saw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="saucer(n)"><f type="i">saucer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scab(n)"><f type="i">Scab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scabbed(a)"><f type="i">scabbed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scabby(a)"><f type="i">scabbie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scabbard(n)"><f type="i">scabbard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scaffold(n)"><f type="i">scaffold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scale(n)"><f type="i">scale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scald(a)"><f type="i">scald</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scaling-ladder(n)"><f type="i">scalingladder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scallion(n)"><f type="i">scallion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scalop(n)" lexeme="shallop(n)"><f type="i">scalop 
shalop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scant(a)"><f type="i">scant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scantling(n)"><f type="i">scantling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scape(n)"><f type="i">scape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scathe(n)"><f type="i">scathe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scar(n)"><f type="i">scar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scare(n)"><f type="i">scare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scarf(n)"><f type="i">scarf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scarce(a)"><f type="i">scarce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scarcity(n)"><f type="i">scarcitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scarp(n)"><f type="i">scarp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scatter(v)"><f type="i">scatter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scattered(a)"><f type="i">scattered</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="school(n)"><f type="i">school</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="schoolmaster(n)"><f type="i">schoolmaster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scholar(n)"><f type="i">scholer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="schoolfellow(n)"><f type="i">schoolfellow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scold(n)"><f type="i">scold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slander(n)"><f type="i">sclander</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slanderer(n)"><f type="i">sclanderer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="score(n)"><f type="i">score</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scoff(n)"><f type="i">scof</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scorse(v)"><f type="i">scorce</form> <xpln></xpln>
</wordentry>

<wordentry type="h"><form lexeme="scoffer(n)"><f type="i">scoffer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scope(n)"><f type="i">scope</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scorn(n)"><f type="i">scorn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scotfree(n)"><f type="i">scotfr&eacute;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scrape(n)"><f type="i">scrape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scrap(n)"><f type="i">scrap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scrat(n)"><f type="i">scrat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scratch(n)"><f type="i">scratch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scrawl(n)"><f type="i">scrall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scribe(n)"><f type="i">scribe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scribble(n)"><f type="i">scrible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scribbler(n)"><f type="i">scribler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scrivener(n)"><f type="i">scriuener</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scrip(n)"><f type="i">scrip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scripture(n)"><f type="i">scripture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="screak(v)"><f type="i">screke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scroll(n)"><f type="i">scroll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scrupulous(a)"><f type="i">scrupulous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scruple(n)"><f type="i">scruple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scum(n)"><f type="i">scum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scull(n)"><f type="i">scull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sculler(n)"><f type="i">sculler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scullion(n)"><f type="i">scullion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scurf(n)"><f type="i">scurf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scourge(n)"><f type="i">scurge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scurvy(n)"><f type="i">scuruie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scurrility(n)"><f type="i">scurrilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scutchion(n)"><f type="i">scutchion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scuttle(n)"><f type="i">scutle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="see(v)"><f type="i">Se</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sea(n)"><f type="i">sea</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seal(n)"><f type="i">seal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seam(n)"><f type="i">seam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seamster(n)"><f type="i">seamster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="search(n)"><f type="i">search</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="searcher(n)"><f type="i">searcher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sear(n)"><f type="i">sear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="season(n)"><f type="i">season</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seat(n)"><f type="i">seat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="second(n)"><f type="i">second</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="secondary(a)"><f type="i">secundarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="secondly(adv)"><f type="i">secondlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="secret(n)"><f type="i">secret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="secrecy(n)"><f type="i">secrecie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="secretary(n)"><f type="i">secretarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="secretly(adv)"><f type="i">secretelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sect(n)"><f type="i">sect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sectary(n)"><f type="i">sectarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seed(n)"><f type="i">sede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sedentary(n)"><f type="i">sedentarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sedge(n)"><f type="i">seidge 
sedge </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sedition(n)"><f type="i">sedition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seditious(a)"><f type="i">seditious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seek(v)"><f type="i">seke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sell(v)"><f type="i">sell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="self(n)"><f type="i">self</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seller(n)"><f type="i">seller 
seller </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seldom(adv)"><f type="i">seldom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="selvage(n)"><f type="i">seluage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="self-will(n)"><f type="i">selfwill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seem(v)"><f type="i">seme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="semblance(n)"><f type="i">semblance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="semblable(a)"><f type="i">semblable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seen(a)"><f type="i">sene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="send(v)"><f type="i">send</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sense(n)"><f type="i">sence 
sense</form> <xpln><class type="contraction">Contract of
sithens</class></xpln></wordentry>

<wordentry type="h"><form lexeme="sent(a)"><f type="i">sent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="senate(n)"><f type="i">senat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="senator(n)"><f type="i">senatour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="censer(n)"><f type="i">senser 
censer </form> <xpln><class type="unknown">in</class></xpln></wordentry>

<wordentry type="h"><form lexeme="sensual(a)"><f type="i">sensuall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sensuality(n)"><f type="i">sensualitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="separate(a)"><f type="i">separate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sepulchre(n)"><f type="i">sepulker 
sepulchre </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sequel(n)"><f type="i">sequele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sequester(n)"><f type="i">sequester</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sequestration(n)"><f type="i">sequestration</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sergeant(n)"><f type="i">sergeant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sermon(n)"><f type="i">sermon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="serpent(n)"><f type="i">serpent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="serve(v)"><f type="i">serue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="service(n)"><f type="i">seruice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="servant(n)"><f type="i">seruant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="session(n)"><f type="i">session</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sessment(n)"><f type="i">sesment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="set(n)"><f type="i">set</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="settle(v)"><f type="i">setle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="settled(a)"><f type="i">setled</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sith(adv)"><f type="i">sethe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seven(n)"><f type="i">seuen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seventy(n)"><f type="i">seuentie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="seventeen(n)"><f type="i">seuentene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sever(v)"><f type="i">seuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="severe(a)"><f type="i">seuere</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="severed(a)"><f type="i">seuered</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="severity(n)"><f type="i">seueritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="several(a)"><f type="i">seuerall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="severalty(n)"><f type="i"><emend err="seneraltie">seueraltie</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sew(v)"><f type="i">sew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sewes(n)"><f type="i">sewes</form> <xpln></xpln>
<lemenote>Not in OED -- "sews(v)"?</lemenote></wordentry>

<wordentry type="h"><form lexeme="suet(n)"><f type="i">sewet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sextan(n)"><f type="i">sextane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shad(n)"><f type="i">Shad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shade(n)"><f type="i">shade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shadow(n)"><f type="i">shadow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shaft(n)"><f type="i">shaft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shake(v)"><f type="i">shak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shackle(n)"><f type="i">shakle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shall(v)"><f type="i">shall</form> <xpln></xpln></wordentry>
</page>

<page sig="dd3r" no="213">
<wordentry type="h"><form lexeme="shale(n)"><f type="i">shale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shallow(n)"><f type="i">shallow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shale(v)"><f type="i">shales</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shamble(n)"><f type="i">shambles</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shame(n)"><f type="i">shame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shameful(a)"><f type="i">shamefull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shameless(n)"><f type="i">shamelesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shank(n)"><f type="i">shank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shop(n)"><f type="i">shap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shape(n)"><f type="i">shape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="share(n)"><f type="i">share</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sharp(a)"><f type="i">sharp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shave(v)"><f type="i">shaue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shaveling(n)"><f type="i">shaueling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shaven(a)"><f type="i">shauen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="she(pr)"><f type="i">she</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shear(v)"><f type="i">sheare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sheaf(n)"><f type="i">sheaf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sheath(n)"><f type="i">sheath</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shed(n)"><f type="i">shed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shield(n)"><f type="i">sheild</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shell(n)"><f type="i">shell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shelf(n)"><f type="i">shelf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sheep(n)"><f type="i">shepe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sheepish(a)"><f type="i">shepish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shent(a)"><f type="i">shent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shew(v)"><f type="i">shew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sheet(n)"><f type="i">shete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shift(n)"><f type="i">shift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shine(v)"><f type="i">shine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shin(n)"><f type="i">shin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shingle(n)"><f type="i">shingle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ship(n)"><f type="i">ship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shirt(n)"><f type="i">shirt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shuttle(n)"><f type="i">shitle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shire(n)"><f type="i">shire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sheriff(n)"><f type="i">shirif</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrivalty(n)"><f type="i">shriualtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shit(v)"><f type="i">shit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shit(n)"><f type="i">shite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shive(n)"><f type="i">shiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shiver(n)"><f type="i">shiuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shoe(n)"><f type="i">Sho</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shog(v)"><f type="i">shog</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shook(a)"><f type="i">shok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shop(n)"><f type="i">shop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shore(n)"><f type="i">shore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="short(a)"><f type="i">short</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shove(n)"><f type="i">shoue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shout(n)"><f type="i">shout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shower(n)"><f type="i">shour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="show(v)"><f type="i">show</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shoes(n)"><f type="i">showes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shoemaker(n)"><f type="i">showmaker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shoveller(n)" lexeme="shovel(v)"><f type="i">shoueler 
shoule </form> <xpln><class type="unknown">Dissy.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="shoot(n)"><f type="i">shoot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="show(v)"><f type="i">sh&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="showing(n)"><f type="i">sh&ograve;wing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="should(v)"><f type="i">should</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shoulder(n)"><f type="i">shoulder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shriek(n)"><f type="i">shreke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shred(a)"><f type="i">shred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrew(n)"><f type="i">shrew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrewd(a)"><f type="i">shrewed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrewdly(n)"><f type="i">shrewdlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrike(n)"><f type="i">shrike</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrill(a)"><f type="i">shrill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrimp(n)"><f type="i">shrimp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shritch(n)"><f type="i">shriche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrink(v)"><f type="i">shrink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrine(n)"><f type="i">shrine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrive(v)"><f type="i">shrive</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shriven(a)"><f type="i">shriven</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrift(n)"><f type="i">shrift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shroud(v)"><f type="i">shrood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Shrove(v)"><f type="i">shrove</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Shrovetide(n)"><f type="i">shrovetide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Shraftyde(n)"><f type="i">shraftide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shroud(n)"><f type="i">shroud</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrub(n)"><f type="i">shrub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shrug(n)"><f type="i">shrug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shuffle(n)"><f type="i">shufle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shun(v)"><f type="i">shun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shut(a)"><f type="i">shut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="shuttle(n)"><f type="i">shutle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sib(n)"><f type="i">Sib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="size(n)"><f type="i">sise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sicle(n)"><f type="i">sicle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="side(n)"><f type="i">side</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sider(n)"><f type="i">sider</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sift(v)"><f type="i">sift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sifter(n)"><f type="i">sifter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sifting(n)"><f type="i">sifting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sidder(n)"><f type="i">sidder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sick(a)"><f type="i">sik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sickly(adv)"><f type="i">siklie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sign(n)"><f type="i">signe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="signet(n)" lexeme="cygnet(n)"><f type="i">signet 
cygnet </form> <xpln><f type="r"><class type="borrowing">Enf.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="signify(v)"><f type="i">signify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="signification(n)"><f type="i">signification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sigh(n)"><f type="i">sigh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sight(n)"><f type="i">sight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="silk(n)"><f type="i">silk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="silkworm(n)"><f type="i">silkworm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="silly(a)"><f type="i">sillie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="silence(n)"><f type="i">silence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sillabub(n)"><f type="i">sillibub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="syllab(n)"><f type="i">syllab 
sillab </form> <xpln><f type="r"><class type="borrowing">Enf.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="silver(n)"><f type="i">siluer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="simple(a)"><f type="i">simple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="simplicity(n)"><f type="i">simplicitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sing(v)"><f type="i">sing'</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="singe(v)"><f type="i">singe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sin(n)"><f type="i">sin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sine(n)"><f type="i">sine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sinople(n)"><f type="i">sinople</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sinful(a)"><f type="i">sinfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="since(adv)"><f type="i">since</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sinew(n)"><f type="i">sinew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="single(n)" lexeme="singly(adv)" lexeme="lie(n)"><f type="i">single 
sing`lie </form> <xpln><class type="contraction">Con.</class> </xpln></wordentry>

<wordentry type="h"><form lexeme="singlely(adv)"><f type="i">singlelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="singular(a)"><f type="i">singuler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="singularly(adv)"><f type="i">singularlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="singularity(n)"><f type="i">singularitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sink(n)"><f type="i">sink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sip(n)"><f type="i">sip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sir(n)"><f type="i">sir</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sire(n)"><f type="i">sire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sister(n)"><f type="i">sister</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sit(v)"><f type="i">sit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sith(adv)"><f type="i">sith</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="site(n)"><f type="i">site</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="situation(n)"><f type="i">situation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="situate(v)"><f type="i">situate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sieve(n)"><f type="i">siue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="six(n)"><f type="i">six</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sixty-fold(n)"><f type="i">sixtifold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scape(n)"><f type="i">Skape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scalp(n)"><f type="i">skalp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scarce(a)"><f type="i">skars 
scarce </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skew(n)"><f type="i">skew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skull(n)"><f type="i">skull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skullet(n)"><f type="i">skullet</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="skim(n)"><f type="i">skim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skin(n)"><f type="i">skin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skink(n)"><f type="i">skink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skip(n)"><f type="i">skip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skipper(n)"><f type="i">skipper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skirm(n)"><f type="i">skirm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skirmish(n)"><f type="i">skirmish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skirt(n)"><f type="i">skirts</form> <xpln></xpln></wordentry>
</page>

<page sig="dd3v" no="214">
<wordentry type="h"><form lexeme="slender(a)"><f type="i">sklender</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slice(n)"><f type="i">sklise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scout(n)"><f type="i">skout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="scoutwatch(n)"><f type="i">skoutwatch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slab(n)"><f type="i">Slab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slabby(a)"><f type="i">slabbie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slabber(n)"><f type="i">slabber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slade(n)"><f type="i">slade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slain(a)"><f type="i">slain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slay(v)"><f type="i">slaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slack(n)"><f type="i">slak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slake(n)"><f type="i">slake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slang(n)"><f type="i">slang</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slash(n)"><f type="i">slash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slave(n)"><f type="i">slaue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slaver(n)"><f type="i">slauer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slavery(n)"><f type="i">slauerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slavish(a)"><f type="i">slauish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slaughter(n)"><f type="i">slaughter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slay(v)"><f type="i">slea</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sled(n)"><f type="i">sled</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sledge(n)"><f type="i">sledge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sleight(n)" lexeme="slight(a)"><f type="i">sleight 
slight </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sleekstone(n)"><f type="i">slekestone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sleep(n)"><f type="i">slepe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sleepy(a)"><f type="i">slepie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sleek(v)"><f type="i">sleke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slew(v)"><f type="i">slew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slice(n)"><f type="i">slice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slid(a)"><f type="i">slid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slide(v)"><f type="i">slide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slike(n)"><f type="i">slike</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slick(n)"><f type="i">slik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slight(n)"><f type="i">slight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slime(n)"><f type="i">slime</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sling(n)"><f type="i">sling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sling(n)"><f type="i">slinge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slip(n)"><f type="i">slip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slipper(n)"><f type="i">slipper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slippery(a)"><f type="i">slipperie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slit(n)"><f type="i">slit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slow(a)"><f type="i">slo</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slop(n)"><f type="i">slop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slouth(n)"><f type="i">slouth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slover(n)"><f type="i">sl&oacute;uer</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="slowness(n)"><f type="i">slownesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slubber(n)"><f type="i">slubber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sluice(n)"><f type="i">sluce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slug(n)"><f type="i">slug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slut(n)"><f type="i">slut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sluttish(a)"><f type="i">sluttish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sluttishness(n)"><f type="i">sluttishnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sluggish(a)"><f type="i">sluggish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sluggishness(n)"><f type="i">sluggishnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sluggard(n)"><f type="i">sluggard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="slumber(n)"><f type="i">slumber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sly(a)"><f type="i">sly</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smack(n)"><f type="i">Smak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smack(n)"><f type="i">smake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="small(a)"><f type="i">small</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smallness(n)"><f type="i">smalnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smallage(n)"><f type="i">smallage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smatch(n)"><f type="i">smatch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smatter(v)"><f type="i">smatter</form> <xpln></xpln>
</wordentry>

<wordentry type="h"><form lexeme="smatterer(n)"><f type="i">smatterer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smate(n)"><f type="i">smate</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="smat(n)"><f type="i">smat</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="smear(n)"><f type="i">smear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smell(n)"><f type="i">smell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smelt(n)"><f type="i">smelt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smile(n)"><f type="i">smile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smit(v)"><f type="i">smit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smite(v)"><f type="i">smite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smith(n)" lexeme="smithy(n)"><f type="i">smit`h 
smit`hie </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="smock(n)"><f type="i">smok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smoke(n)"><f type="i">smoke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smooth(a)"><f type="i">smoot`h</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smote(v)"><f type="i">smote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smug(a)"><f type="i">smug</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smudge(n)"><f type="i">smudg</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="smutch(n)"><f type="i">smutch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snaffle(n)"><f type="i">Snafle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snail(n)"><f type="i">snail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snack(n)"><f type="i">snak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snake(n)"><f type="i">snake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snap(n)"><f type="i">snap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snapper(n)"><f type="i">snapper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snape(n)"><f type="i">snape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snaphance(n)"><f type="i">snapharunce</form> <xpln></xpln>
<lemenote>Perhaps this should be emended.</lemenote></wordentry>

<wordentry type="h"><form lexeme="snar(v)"><f type="i">snar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snare(n)"><f type="i">snare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snatch(n)"><f type="i">snatch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sneeze(v)"><f type="i">snese</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snew(v)"><f type="i">snew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snivel(n)"><f type="i">sniuell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snip(n)"><f type="i">snip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snipe(n)"><f type="i">snipe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snore(v)"><f type="i">snore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snort(n)"><f type="i">snort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snow(n)"><f type="i">snow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snout(n)"><f type="i">snout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snuff(n)"><f type="i">snuf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snuffing(n)"><f type="i">snuffing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="snuffle(n)"><f type="i">snufle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="so(adv)"><f type="i">So</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sob(n)"><f type="i">sob</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sober(a)"><f type="i">sober</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soberly(adv)"><f type="i">soberlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soberness(n)"><f type="i">sobernesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sobriety(n)"><f type="i">sobrietie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sociable(a)"><f type="i">sociable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="society(n)"><f type="i">societie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sod(n)"><f type="i">sod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soden(a)"><f type="i">soden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soft(a)"><f type="i">soft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sok(n)"><f type="i">sok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soke(n)"><f type="i">soke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soil(n)"><f type="i">soil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soileth(v)"><f type="i">soilth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sojourn(n)"><f type="i">soiourn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sojourner(n)"><f type="i">soiourner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sole(a)"><f type="i">sole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="solace(n)"><f type="i">solace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="solemn(a)"><f type="i">solemn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sullen(a)"><f type="i">sollen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="solemnity(n)"><f type="i">solemnitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="solitary(a)"><f type="i">solitarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="solicit(v)"><f type="i">solicit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="solicitor(n)"><f type="i">solicitour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sold(a)"><f type="i">sold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soldier(n)"><f type="i">soldyer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="some(a)"><f type="i">som</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="summer(n)"><f type="i">somer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="son(n)"><f type="i">s&ograve;n</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="song(n)"><f type="i">song</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Sunday(n)"><f type="i">sondaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soon(adv)"><f type="i">soon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sooner(adv)"><f type="i">sooner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sooth(n)"><f type="i">so&ograve;th 
sooth </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sop(n)"><f type="i">sop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soap(n)"><f type="i">sope</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soapmaker(n)"><f type="i">sopemaker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sore(n)"><f type="i">sore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sorry(a)"><f type="i">sorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sorrow(n)"><f type="i">sorow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sorrowful(a)"><f type="i">sorowfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sorcery(n)"><f type="i">sorcer&icirc;e</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sorcerer(n)"><f type="i">sorcerer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sorceress(n)"><f type="i">sorceresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sorrel(n)"><f type="i">sorell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sort(n)"><f type="i">sort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soss(n)"><f type="i">sosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sot(n)"><f type="i">sot</form> <xpln></xpln></wordentry>
</page>

<page sig="dd4r" no="215">
<wordentry type="h"><form lexeme="sothery(a)"><f type="i">sotherie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="southernwood(n)"><f type="i">sothernwood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="south(n)"><f type="i">sout'h 
sout'h </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soveraign(n)"><f type="i">soueraign</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soveraignty(n)"><f type="i">soueranitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soul(n)"><f type="i">s&oacute;ul</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="solder(n)"><f type="i">s&ograve;wder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="souse(n)"><f type="i">sowse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sousing(n)"><f type="i">sousing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sow(n)"><f type="i">s&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sow(v)"><f type="i">s&oacute;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sout(n)"><f type="i">sout</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1598)</lemenote></wordentry>

<wordentry type="h"><form lexeme="soul(n)"><f type="i">soul</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sound(n)"><f type="i">sound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sought(v)"><f type="i">s&ograve;ught</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soothsayer(n)"><f type="i">southsaier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="space(n)"><f type="i">Space</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spade(n)"><f type="i">spade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spake(v)"><f type="i">spak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spake(v)"><f type="i">spake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="span(n)"><f type="i">span</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spangle(n)"><f type="i">spangle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spaniel(n)"><f type="i">spanel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spar(n)"><f type="i">spar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spare(a)"><f type="i">spare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spark(n)"><f type="i">spark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sparkle(n)"><f type="i">sparkle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sparrow(n)"><f type="i">sparrow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sparrowhawk(n)"><f type="i">sparrowhauk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spawn(n)"><f type="i">spaun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="speak(v)"><f type="i">speak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spear(n)"><f type="i">spear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="speech(n)"><f type="i">speche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="specify(v)"><f type="i">specify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="special(a)"><f type="i">speci&agrave;ll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="specification(n)"><f type="i">specification</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="specialty(n)"><f type="i">specialtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spectacle(n)"><f type="i">spectacle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="speckle(n)"><f type="i">spekle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="speck(n)"><f type="i">spek</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sped(a)"><f type="i">sped</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="speed(v)"><f type="i">spede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="speedy(a)"><f type="i">spedie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="speeds(v)"><f type="i">spedes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spell(n)"><f type="i">spell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spend(v)"><f type="i">spend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spent(a)"><f type="i">spent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spear(n)"><f type="i">sp&eacute;re</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spice(n)"><f type="i">spice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spicery(n)"><f type="i">spic&eacute;rie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spider(n)"><f type="i">spider</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spin(v)"><f type="i">spin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spinner(n)"><f type="i">spinner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spirt(n)" lexeme="spirit(n)"><f type="i">spirt 
spirit </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spiritual(a)"><f type="i">spirituall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spirituality(n)" lexeme="spritualty(n)"><f type="i">spiritualitie 
spritualtie </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="spires(n)"><f type="i">spires</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spirt(n)"><f type="i">spirt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spite(n)"><f type="i">spite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spit(n)"><f type="i">spit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="speight(n)"><f type="i">spight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spigot(n)"><f type="i">spigot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spinach(n)"><f type="i">spinage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spindle(n)"><f type="i">spindle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spiteful(a)"><f type="i">spitefull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spitefulness(n)"><f type="i">spitefulnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spitter(n)"><f type="i">spitter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spittle(n)"><f type="i">spitle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spittlehouse(n)"><f type="i">spitlehouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="splay(n)"><f type="i">splaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="splay-foot(a)"><f type="i">splaiefoot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spleen(n)"><f type="i">splene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="splint(n)"><f type="i">splent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spoil(n)"><f type="i">spoyl</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spoke(v)"><f type="i">spoke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spoke(v)"><f type="i">spok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spoken(a)"><f type="i">spoken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sport(n)"><f type="i">sporte</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spot(n)"><f type="i">spot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spouse(n)"><f type="i">spouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spout(n)"><f type="i">spout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spoon(n)"><f type="i">spoun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spoonful(n)"><f type="i">spounfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sprawl(v)"><f type="i">sprall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sprat(n)"><f type="i">sprat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spread(v)"><f type="i">spred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spread(v)"><f type="i">sprede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sprig(n)"><f type="i">sprig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sprint(n)"><f type="i">sprint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sprinkle(n)"><f type="i">sprinkle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spring(n)"><f type="i">spring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="springe(n)"><f type="i">springe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sprot(n)"><f type="i">sprot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sprout(n)"><f type="i">sprout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Spruce(pn)"><f type="i">spruce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sprung(a)"><f type="i">sprung</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spurn(v)"><f type="i">spurn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spun(a)"><f type="i">spun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spurge(n)"><f type="i">spurge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spume(n)"><f type="i">spume</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spurlong(n)"><f type="i">spurlong</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="spy(n)"><f type="i">Spy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="spies(n)"><f type="i">spyes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squab(n)"><f type="i">Squab</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1640) for "squab," n.</lemenote></wordentry>

<wordentry type="h"><form lexeme="squatch(v)"><f type="i">squach</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squad(n)"><f type="i">squad</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1649)</lemenote></wordentry>

<wordentry type="h"><form lexeme="squeak(v)"><f type="i">squak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squall(n)"><f type="i">squall</form> <xpln></xpln>
</wordentry>

<wordentry type="h"><form lexeme="squaltor(n)"><f type="i">squaltor</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="square(n)"><f type="i">square</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squaring(n)"><f type="i">squaring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squat(a)"><f type="i">squat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squatter(n)"><f type="i">squatter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squeal(n)"><f type="i">squeal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squeak(n)"><f type="i">squeak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squeamish(a)"><f type="i">sqeamish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squeeze(v)"><f type="i">squease</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1601)</lemenote></wordentry>

<wordentry type="h"><form lexeme="squeeze(v)"><f type="i">squese</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squib(n)"><f type="i">squib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squint(a)"><f type="i">squint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squirrel(n)"><f type="i">squirel</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squirt(n)"><f type="i">squirt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="squib(n)"><f type="i">squib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="skitterbrook(n)"><f type="i">squiterbuk</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1632)</lemenote></wordentry>

<wordentry type="h"><form lexeme="squitch(v)"><f type="i">squitch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stare(n)"><f type="i">Stare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stab(n)"><f type="i">stab</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stable(a)"><f type="i">stable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stablish(v)"><f type="i">stablish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stability(n)"><f type="i">stabilitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stag(n)"><f type="i">stag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stage(n)"><f type="i">stage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stager(n)"><f type="i">stag&eacute;r</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stain(n)"><f type="i">stain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="staff(n)" lexeme="staues(n)"><f type="i">staf 
staues </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stack(n)"><f type="i">stak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stake(n)"><f type="i">stake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stall(n)"><f type="i">stall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stale(n)"><f type="i">stale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stalwin(n)"><f type="i">stalwin</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="stammer(v)"><f type="i">stammer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stand(n)"><f type="i">stand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="standard(n)"><f type="i">standard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stanch(v)"><f type="i">stanche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stalk(n)"><f type="i">stalk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="staple(n)"><f type="i">staple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="star(n)"><f type="i">star</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stare(n)"><f type="i">stare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="startle(v)"><f type="i">startle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="starlight(n)"><f type="i">starlight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="starch(n)"><f type="i">starch</form> <xpln></xpln></wordentry>
</page>

<page sig="dd4v" no="219">
<lemepagenote>Page 216 is printed page "219". Pages 216, 217, and 218 are passed over. No lacuna appear to exist.</lemepagenote>

<wordentry type="h"><form lexeme="stark(n)"><f type="i">stark</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="startup(n)"><f type="i">startop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="starve(v)"><f type="i">starue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="starveling(n)"><f type="i">starueling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="state(n)"><f type="i">state</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="station(n)"><f type="i">station</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stationer(n)"><f type="i">stationer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stationary(a)"><f type="i">stationarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stature(n)"><f type="i">stature</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="statuary(n)"><f type="i">statuarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="statute(n)"><f type="i">statute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stature(n)"><f type="i">stature</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steak(n)"><f type="i">steak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steal(v)"><f type="i">steal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steer(v)"><f type="i">stear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stead(n)"><f type="i">sted</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stead(n)"><f type="i">stede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steady(a)"><f type="i">steddie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steal(v)"><f type="i">stele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stealth(n)"><f type="i">stelth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stem(n)"><f type="i">stem</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steam(n)"><f type="i">steme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="step(n)"><f type="i">step</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steep(a)"><f type="i">stepe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stepmother(n)"><f type="i">stepm&ograve;ther</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steeple(n)"><f type="i">steple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stern(n)"><f type="i">stern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stew(n)"><f type="i">stew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="steward(n)"><f type="i">steward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stewhouse(n)" lexeme="stews(n)"><f type="i">stewhouse 
stewes </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="stick(n)"><f type="i">Stik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stickle(n)"><f type="i">stikle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stickler(n)"><f type="i">stikler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="still(adv)"><f type="i">still</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stile(n)"><f type="i">stile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stillatory(n)"><f type="i">still&agrave;torie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stilt(n)"><f type="i">stilt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sting(n)"><f type="i">sting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stink(n)"><f type="i">stink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stint(n)"><f type="i">stint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stir(v)"><f type="i">stir</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stirrup(n)"><f type="i">stirrup</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stithy(n)"><f type="i">stithie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stitch(n)"><f type="i">stitch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stock(n)"><f type="i">Stok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stoke(n)"><f type="i">stoke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stock-fish(n)"><f type="i">stokefish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stocks(n)"><f type="i">stokes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stockdove(n)"><f type="i">stokdoues</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stole(v)"><f type="i">stole</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stomach(n)"><f type="i">stomach</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stomacher(n)"><f type="i">stomacher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stone(n)"><f type="i">stone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stood(v)"><f type="i">stood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stool(n)"><f type="i">stool</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stoop(n)"><f type="i">stoop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stop(n)"><f type="i">stop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="store(n)"><f type="i">store</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stork(n)"><f type="i">stork</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="storehouse(n)"><f type="i"><emend err="florehonse">storehouse</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="story(n)"><f type="i">storie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="storm(n)"><f type="i">storm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stout(n)"><f type="i">stout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stoutly(adv)"><f type="i">stoutlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stove(n)"><f type="i">st&oacute;ue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stover(n)"><f type="i">st&ograve;uer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stray(n)"><f type="i">strai&egrave;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="straddle(v)"><f type="i">stradle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strait(n)"><f type="i">strait</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strain(n)"><f type="i">strain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="straggle(v)"><f type="i">stragle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="straggler(n)"><f type="i">stragler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strake(n)"><f type="i">strake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="struck(a)"><f type="i">struk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stranger(n)"><f type="i">strainger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stranger(n)"><f type="i">stranger</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strainer(n)"><f type="i">straner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="straw(n)"><f type="i">straw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strawberry(n)"><f type="i">strawberie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="streak(n)"><f type="i">streak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stream(n)"><f type="i">stream</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="street(n)"><f type="i">streat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strength(n)"><f type="i">strength</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stress(n)"><f type="i">stresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stretch(v)"><f type="i">stretch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strew(n)"><f type="i">strew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strict(a)"><f type="i">strict</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stride(n)"><f type="i">stride</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strid(a)"><f type="i">strid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strife(n)"><f type="i">strife</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strike(n)"><f type="i">strike</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="string(n)"><f type="i">string</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strip(n)"><f type="i">strip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stripe(n)"><f type="i">stripe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stripling(n)"><f type="i">stripling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stript(a)"><f type="i">stript</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strive(v)"><f type="i">striue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stroke(n)"><f type="i">stroke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strow(v)"><f type="i">str&oacute;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stroud(n)"><f type="i">stroud</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1683)</lemenote></wordentry>

<wordentry type="h"><form lexeme="strove(v)"><f type="i">stroue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strong(a)"><f type="i">strong</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strout(v)"><f type="i">strout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="strumpet(n)"><f type="i">strumpet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="struggle(n)"><f type="i">strugle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stub(n)"><f type="i">stub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stubble(n)"><f type="i">stuble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stubborn(a)"><f type="i">stubburn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="study(n)"><f type="i">studie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="student(n)"><f type="i">student</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="studious(a)"><f type="i">studious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stuff(n)"><f type="i">stuf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stumble(n)"><f type="i">stumble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stump(n)"><f type="i">stump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stur(n)"><f type="i">stur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sturdy(a)"><f type="i">sturdie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sturgeon(n)"><f type="i">sturgeon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stuck(a)"><f type="i">stuk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="stutter(n)"><f type="i">stutter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sty(n)"><f type="i">Sty</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="subdue(v)"><f type="i">Subdew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sudden(a)"><f type="i">sudain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="subject(n)"><f type="i">subiect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suckle(v)"><f type="i">sukle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="submit(v)"><f type="i">submit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="submission(n)"><f type="i">submission</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suborn(v)"><f type="i">suborn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="subscribe(v)"><f type="i">subscribe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="substitute(n)"><f type="i">substitute</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="subsidy(n)"><f type="i">subsidie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="substance(n)"><f type="i">substance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="substancial(a)"><f type="i">substanciall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="subvert(v)"><f type="i">subuert</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="subversion(n)"><f type="i">subuersion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suburbs(n)"><f type="i">suburbes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="such(pr)"><f type="i">such</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="succeed(v)"><f type="i">succede</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="success(n)"><f type="i">successe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="succession(n)"><f type="i">succession</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="succor(n)"><f type="i">succor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="succory(n)"><f type="i">succorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sugar(n)"><f type="i">sugar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suggest(v)"><f type="i">suggest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suggestion(n)"><f type="i">suggestion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suffise(v)" lexeme="sufficient(a)"><f type="i">suffise 
sufficient </form> <xpln><f type="r"><class type="spelling">s</class> <class type="spelling">c</class></xpln></wordentry>

<wordentry type="h"><form lexeme="sufficiency(n)"><f type="i">sufficiencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suffer(v)"><f type="i">suffer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sufferance(n)"><f type="i">sufferance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suffragan(n)"><f type="i">suffragane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suck(v)"><f type="i">suk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suckle(v)"><f type="i">sukle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suckling(n)"><f type="i">sukling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sum(n)"><f type="i">sum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="summer(n)"><f type="i">summer</form> <xpln></xpln></wordentry>
</page>

<page sig="ee1r" no="220">
<wordentry type="h"><form lexeme="summary(n)"><f type="i">summarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sumner(n)" lexeme="summoner(n)"><f type="i">sumner 
summoner </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="sumptuous(a)"><f type="i">sumptuous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sunder(a)"><f type="i">sunder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sundry(a)"><f type="i">sundrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sup(v)"><f type="i">sup</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="supply(n)"><f type="i">supply</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="supple(a)"><f type="i">suple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="supplication(n)"><f type="i">supplication</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="supper(n)"><f type="i">supper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="superfluous(a)"><f type="i"><emend err="superfluou">superfluous</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="support(n)"><f type="i">supporte</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suppose(v)"><f type="i">suppose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="supposition(n)"><f type="i">supposition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="supposal(n)"><f type="i">supposall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suppress(v)"><f type="i">suppresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="supreme(a)"><f type="i">supreme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="supremacy(n)"><f type="i">supremacie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="superior(a)"><f type="i">superior</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="superiority(n)"><f type="i">sup&eacute;rioritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surcease(v)"><f type="i">surcease</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surcharge(n)"><f type="i">surcharge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surcingle(n)"><f type="i">surcingle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surfeit(n)"><f type="i">surfet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surge(n)"><f type="i">surge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surgeon(n)"><f type="i">surgeon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surmise(v)"><f type="i">surmise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surmount(v)"><f type="i">surmount</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surname(n)"><f type="i">surname</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surplice(n)"><f type="i">surplesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surplus(n)"><f type="i">surplus</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surplusage(n)"><f type="i">surplussage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surrender(n)"><f type="i">surrender</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="surety(n)"><f type="i">suretie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="survive(v)"><f type="i">suruiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suspect(n)"><f type="i">suspect</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suspicion(n)"><f type="i">suspition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sustain(v)"><f type="i">sustain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sustinance(n)"><f type="i">sustinance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suade(v)"><f type="i">swad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="suade(v)"><f type="i">swade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swaddle(n)"><f type="i">swadle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swaddling(n)" lexeme="clootes(n)"><f type="i">swadling clootes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swag(n)"><f type="i">swag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swage(n)"><f type="i">swage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sway(n)"><f type="i">swaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swallow(n)"><f type="i">swallow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swam(v)"><f type="i">swam</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swan(n)"><f type="i">swan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swan(n)"><f type="i">swane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swear(v)"><f type="i">sware</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swarth(n)"><f type="i">swarth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swarve(v)"><f type="i">swarue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swash(adv)"><f type="i">swash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swear(v)"><f type="i">swear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sweal(v)"><f type="i">sweal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swell(n)"><f type="i">swell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swelt(v)"><f type="i">swelt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sweep(v)"><f type="i">swepe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swept(a)"><f type="i">swept</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sweet(a)"><f type="i">swete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sweat(n)"><f type="i">swet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swift(a)"><f type="i">swift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swill(v)"><f type="i">swill</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swill-bowl(n)"><f type="i">swilboll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swim(n)"><f type="i">swim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swine(n)"><f type="i">swine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="swing(n)" lexeme="swinge(n)"><f type="i">swing 
swinge </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="soon(adv)"><f type="i">soon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sword(n)"><f type="i">sword</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="sworn(a)"><f type="i">sworne</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="t"><alpha>T</alpha>

<wordentry type="h"><form lexeme="taber(n)"><f type="i">Taber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tabret(n)"><f type="i">tabret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tabernacle(n)"><f type="i">tabernacle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="table(n)"><f type="i">table</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tablet(n)"><f type="i">tablet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tache(n)"><f type="i">tache</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taffeta(n)"><f type="i">taffatie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tag(n)"><f type="i">tag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="take(v)"><f type="i">tak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tack(n)"><f type="i">take</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tackling(n)"><f type="i">takling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tackle(n)"><f type="i">takle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tail(n)"><f type="i">tail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tailor(n)"><f type="i">tailor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taint(n)"><f type="i">taint</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tenterhook(n)"><f type="i">tainterhooks</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tenter(n)"><f type="i">tainter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tall(a)"><f type="i">tall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tale(n)"><f type="i">tale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="talent(n)"><f type="i">talent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tallow(n)"><f type="i">tallow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tamper(v)"><f type="i">tamper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tampering(n)"><f type="i">tampering</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tame(a)"><f type="i">tame</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tane(a)"><f type="i">tane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tan(n)"><f type="i">tan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tanner(n)"><f type="i">tanner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tankard(n)"><f type="i">tankard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tansy(n)"><f type="i">tansie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tap(n)"><f type="i">tap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tape(n)"><f type="i">tape</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taper(n)"><f type="i">taper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tapestry(n)"><f type="i">tapistrie 
tapstrie </form> <xpln><f type="r"><class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="tapster(n)"><f type="i">tapster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tar(n)"><f type="i">tar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tare(n)"><f type="i">tare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tares(n)"><f type="i">tares</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tarry(v)"><f type="i">tarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tart(n)"><f type="i">tarte</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tattle(v)"><f type="i">tatle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tache(v)"><f type="i">tatch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taste(n)"><f type="i">taste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taster(n)"><f type="i">taster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tavern(n)"><f type="i">tauern</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taverner(n)"><f type="i">tauernour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tawny(a)"><f type="i">taunie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taw(n)"><f type="i">taw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tawer(n)"><f type="i">tawyer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taunt(n)"><f type="i">taunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tax(n)" lexeme="task(n)"><f type="i">tax 
task </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="taught(a)"><f type="i">taught</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="teach(v)"><f type="i">Teach</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="teal(n)"><f type="i">teal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="team(n)"><f type="i">team</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="teat(n)"><f type="i">teat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tester(n)"><f type="i">teastur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="testy(a)"><f type="i">teastie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tedious(a)"><f type="i">tedious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tediousness(n)"><f type="i">tediousnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tell(v)"><f type="i">tell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="teal(n)"><f type="i">tele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Thames(pn)"><f type="i">temse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="theme(n)"><f type="i">teme</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="temerity(n)"><f type="i">temeretie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="temper(n)"><f type="i">temper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="temperance(n)"><f type="i">temperance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="temperature(n)"><f type="i">temperature</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="temperate(a)"><f type="i">temperate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="temperateness(n)"><f type="i">temperatenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tempest(n)"><f type="i">tempest</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tempestuous(a)"><f type="i">tempestuous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tempestuousness(n)"><f type="i">tempestuousnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="temple(n)"><f type="i">temple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="templer(n)"><f type="i">templer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tempt(v)"><f type="i">tempt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="temptation(n)"><f type="i">temptaci&oacute;n</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tend(v)"><f type="i">tend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tench(n)"><f type="i">tench</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tent(n)"><f type="i">tent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tenement(n)"><f type="i">tenement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tender(a)"><f type="i">tender</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tenderness(n)"><f type="i">tendernesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tendering(n)"><f type="i">tendring</form> <xpln></xpln></wordentry>
</page>

<page sig="ee1v" no="221">
<wordentry type="h"><form lexeme="tendering(n)"><f type="i">tendering 
tendring </form> <xpln><f type="r"><class type="contraction">Cont.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="ten(n)"><f type="i">ten</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="teen(n)"><f type="i">tene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tenth(n)"><f type="i">tenth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tendeth(v)"><f type="i">tendeth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tenure(n)"><f type="i">tenure</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="term(n)"><f type="i">term</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="termor(n)"><f type="i">termour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="terrible(a)"><f type="i">terrible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="terrify(v)"><f type="i">terrifie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="territory(n)"><f type="i">territorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="testimony(n)"><f type="i">testimonie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="testify(v)"><f type="i">testify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="testament(n)"><f type="i">testament</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="teeth(n)"><f type="i">tethe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tester(n)"><f type="i">tester</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tetter(n)"><f type="i">tetter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Tuesday(n)"><f type="i">teusdaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thank(v)"><f type="i">thank</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thaw(n)"><f type="i">thaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thatch(n)"><f type="i">thatch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="the(d)"><f type="i">the 
th&eacute; </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thence(adv)"><f type="i">thence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thief(n)"><f type="i">thefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="there(adv)"><f type="i">there</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="therefore(c)"><f type="i">therefore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thievish(a)"><f type="i">theuish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="theft(n)"><f type="i">theft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thigh(n)"><f type="i">thigh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thick(a)"><f type="i">thik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thimble(n)"><f type="i">t`himble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thine(pr)"><f type="i">t`hine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thin(a)"><f type="i">thin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="think(v)"><f type="i">think</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thing(n)"><f type="i">thing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="third(n)"><f type="i">third</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thirteen(n)"><f type="i">thirtene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thirty(n)"><f type="i">thirtie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thirst(n)"><f type="i">thirst</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thirsty(a)"><f type="i">thirstie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thistle(n)"><f type="i">thistles</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thither(adv)"><f type="i">thither</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thitherward(adv)"><f type="i">thitherward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="though(c)"><f type="i">though</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thong(n)"><f type="i">thong</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thought(n)"><f type="i">thought</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thother(n)"><f type="i">th&ograve;ther</form> <xpln></xpln>
<lemenote>Elision of "the other."</lemenote></wordentry>

<wordentry type="h"><form lexeme="thorn(n)"><f type="i">thorn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thornback(n)"><f type="i">thornebak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thousand(n)"><f type="i">thousand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thou(pr)"><f type="i">th&oacute;w 
th&ograve;w </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thread(n)"><f type="i">thread</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="threap(n)"><f type="i">threap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="threat(n)"><f type="i">threat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thresh(v)"><f type="i">thresh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="threshold(n)"><f type="i">threshold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="threw(n)"><f type="i">threw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thrift(n)"><f type="i">thrift</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thrifty(a)"><f type="i">thriftie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="throne(n)"><f type="i">throne</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="throng(n)"><f type="i">throng</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="throat(n)"><f type="i">throte</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="throttle(v)"><f type="i">throtle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thrust(v)"><f type="i">thrust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thrush(n)"><f type="i">thrush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thrum(n)"><f type="i">thrum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thumb(n)"><f type="i">thum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thump(n)"><f type="i">thump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thunder(n)"><f type="i">thunder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thwart(adv)"><f type="i">thwart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thwack(v)"><f type="i">thwak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thwackt(a)"><f type="i">thwakt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thwart(adv)"><f type="i">thwart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Thursday(n)"><f type="i">thursdaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="thy(pr)"><f type="i">thy</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Tib(pn)"><f type="i">Tib</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tide(n)"><f type="i">tide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tidings(n)"><f type="i">tidings</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tick(n)"><f type="i">tik</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tick(n)"><f type="i">tike</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tickle(v)"><f type="i">tikle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tickling(n)"><f type="i">tikling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="till(c)"><f type="i">ti`ll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tile(n)"><f type="i">tile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tillage(n)"><f type="i">tillage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tilt(n)"><f type="i">tilt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tiltyard(n)"><f type="i">tiltyard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tile-sherd(n)"><f type="i">tilesharde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="time(n)"><f type="i">time</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="timber(n)"><f type="i">timber</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="timely(a)"><f type="i">timelie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="timorous(a)"><f type="i">timorous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="timorousness(n)"><f type="i">timorousnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tin(n)"><f type="i">tin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tine(n)"><f type="i">tine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tinker(n)"><f type="i">tinker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tinkling(n)"><f type="i">tinkling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tinder(n)"><f type="i">tinder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tinderbox(n)"><f type="i">tinderbox</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tinsell(n)"><f type="i">tinsell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tip(n)"><f type="i">tip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tipe(n)"><f type="i">tipe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tippet(n)"><f type="i">tipet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tippling(n)"><f type="i">tipling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tippler(n)"><f type="i">tipler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tipple(n)"><f type="i">tiple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tire(n)"><f type="i">tire</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tissue(n)"><f type="i">tishew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tit(n)"><f type="i">tit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="title(n)"><f type="i">t&ibreve;tle 
t&imacron;tle </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="titmouse(n)"><f type="i">titmouse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tithe(n)"><f type="i">tithe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="to(pp)"><f type="i">T&ograve; 
to </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toe(n)"><f type="i">toes</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tod(n)"><f type="i">tod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toad(n)"><f type="i">tode</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="together(adv)"><f type="i">together</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toy(n)"><f type="i">toy`</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toyous(a)" lexeme="to(pp)"><f type="i">t&ograve; 
toyous </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toil(n)"><f type="i">toil</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="token(n)"><f type="i">token</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toll(n)"><f type="i">toll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tongue(n)"><f type="i">toungs</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tooth(n)"><f type="i">tout'h 
to&ugrave;th </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toothache(n)"><f type="i">touthake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="top(n)"><f type="i">top</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tapnet(n)"><f type="i">topnet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="torch(n)"><f type="i">torche</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="torment(n)"><f type="i">torment</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="torn(a)"><f type="i">torne</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toss(v)"><f type="i">tosse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tost(a)" lexeme="toast(n)"><f type="i">tost 
toste </form> <xpln> <class type="contraction">Con.</class> </xpln></wordentry>

<wordentry type="h"><form lexeme="totter(n)"><f type="i">totter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tow(n)"><f type="i">t&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="toward(pp)"><f type="i">t&ograve;ward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="towel(n)"><f type="i">towell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tough(a)"><f type="i">tough</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="touse(v)"><f type="i">touse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tour(n)"><f type="i">tour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="town(n)"><f type="i">toun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trace(n)"><f type="i">Trace</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tract(n)"><f type="i">tract</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tractable(a)"><f type="i">tractable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trade(n)"><f type="i">trade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trad(v)"><f type="i">trad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tradition(n)"><f type="i">tradition</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tray(n)"><f type="i">traie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="train(n)"><f type="i">train</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="traitor(n)"><f type="i">traitour</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="traiterous(a)"><f type="i">traiterous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tramp(n)"><f type="i">tramp</form> <xpln></xpln></wordentry>
</page>

<page sig="ee2r" no="222">
<wordentry type="h"><form lexeme="trample(v)"><f type="i">trample</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trammel(n)"><f type="i">tramell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="train-oil(n)"><f type="i">traneo&igrave;l</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transitory(a)"><f type="i">transitorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transitive(a)"><f type="i">transitiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transom(n)"><f type="i">transom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transform(v)"><f type="i">transform</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transformation(n)"><f type="i">transformation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transgress(v)"><f type="i">transgresse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transgression(n)"><f type="i">transgression</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="translate(v)"><f type="i">translate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="translation(n)"><f type="i">translation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transport(v)"><f type="i">transport</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="transportation(n)"><f type="i">transportati&oacute;n</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trap(n)"><f type="i">trap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trapping(n)"><f type="i">trapping</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trance(n)"><f type="i">traunce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="traverse(v)"><f type="i">trauerse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="traversing(n)"><f type="i">trauersing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tread(n)"><f type="i">tread</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treatable(a)"><f type="i">treatable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treachery(n)"><f type="i">treacherie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treacherous(a)"><f type="i">treacherous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treason(n)"><f type="i">treason</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treasure(n)"><f type="i">treasur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treasury(n)"><f type="i">treasurie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treasurer(n)"><f type="i">treasurer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treat(v)"><f type="i">treat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treaty(n)"><f type="i">treatie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treatise(n)"><f type="i">treatis</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tred(v)"><f type="i">tred</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tremble(v)"><f type="i">tremble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="treen-dish(n)"><f type="i">treend&iacute;sh</form> <xpln></xpln>
<lemenote>Not in OED</lemenote></wordentry>

<wordentry type="h"><form lexeme="trench(n)"><f type="i">trench</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trencher(n)"><f type="i">trencher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trestle(n)"><f type="i">tresle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trespass(n)"><f type="i">trespasse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="truant(n)"><f type="i">trewant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="true(a)"><f type="i">trew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="triacle(n)"><f type="i">triacle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trial(n)"><f type="i">triall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tribe(n)"><f type="i">tribe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tribute(n)"><f type="i">tribut</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tributary(n)"><f type="i">tributarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tribulation(n)"><f type="i">tribulation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trick(n)"><f type="i">tri'k</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trickle(n)"><f type="i">trikle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trifle(n)"><f type="i">trifle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trim(a)"><f type="i">tr&igrave;m</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trindle(n)"><f type="i">trindle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trip(n)"><f type="i">trip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tripe(n)"><f type="i">trip&egrave;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="triple(n)"><f type="i">triple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trivet(n)"><f type="i">triuet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="triumph(n)"><f type="i">triumph</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trod(v)"><f type="i">trod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="troden(a)"><f type="i">troden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trot(n)"><f type="i">trot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="troop(n)"><f type="i">troup</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trough(n)"><f type="i">tr&oacute;ugh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trow(v)"><f type="i">tr&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trowel(n)"><f type="i">tr&ograve;well</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trout(n)"><f type="i">tr&ograve;wt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trouble(n)"><f type="i">truble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trub(n)"><f type="i">trub</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1668)</lemenote></wordentry>

<wordentry type="h"><form lexeme="truce(n)"><f type="i">truce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trillibub(n)"><f type="i">trulliebub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trump(n)"><f type="i">trump</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trumpet(n)"><f type="i">trumpet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trunchion(n)"><f type="i">trunchion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trunk(n)"><f type="i">trunk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="trust(n)"><f type="i">trust</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="truss(n)"><f type="i">trusse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="truth(n)"><f type="i">truth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="try(v)"><f type="i">try</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tub(n)"><f type="i">Tub</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tuck(n)"><f type="i">tuk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tucker(n)"><f type="i">tukker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tough(a)"><f type="i">tuf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tuft(n)"><f type="i">tuft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tumble(v)"><f type="i">tumble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tumbler(n)"><f type="i">tumbler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tun(n)"><f type="i">tun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tune(n)"><f type="i">tune</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tonnage(n)"><f type="i">tunage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tongue(n)"><f type="i">tung</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tunnel(n)"><f type="i">tunell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="turf(n)"><f type="i">turf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Turk(n)"><f type="i">turk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="turkis(n)"><f type="i">turcasse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="turn(n)"><f type="i">turn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="turpentine(n)"><f type="i">turpentine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="turret(n)"><f type="i">turret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="turnip(n)"><f type="i">turnep</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="turtle(n)"><f type="i">turtle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tush(n)"><f type="i">tush</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tusk(n)"><f type="i">tusk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twain(n)"><f type="i">Twain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twang(n)"><f type="i">twang</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twelfth(n)"><f type="i">twelft</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twelve(n)"><f type="i">twelue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twenty(n)"><f type="i">twentie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twibill(n)"><f type="i">twible</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twig(n)"><f type="i">twig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twitch(n)"><f type="i">twitch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twilight(n)"><f type="i">twylight</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twinkle(n)"><f type="i">twinkle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twin(n)"><f type="i">twin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twine(n)"><f type="i">twine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twing(n)"><f type="i">twing'</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twinge(v)"><f type="i">twinge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twins(n)"><f type="i">twins</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twice(adv)"><f type="i">twise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twist(v)"><f type="i">twist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="two(n)"><f type="i">tw&ograve;</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="twagger(n)"><f type="i">twagger</form> <xpln></xpln>
<lemenote>Predates earliest OED citation (1599) </lemenote></wordentry>

<wordentry type="h"><form lexeme="tway(n)"><f type="i"><emend err="tmy">twy</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="tied(a)"><f type="i">tyed</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="v"><alpha>V</alpha>

<wordentry type="h"><form lexeme="vacant(a)"><f type="i">Vacant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vacation(n)"><f type="i">vacation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vagabond(n)"><f type="i">vagabond</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vain(a)"><f type="i">vain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vanity(n)"><f type="i">vanitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vale(n)"><f type="i">vales</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="varlet(n)"><f type="i">varlet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="valley(n)"><f type="i">valleie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="valor(n)" lexeme="valure(n)"><f type="i">valor 
valure </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="valiant(a)"><f type="i">valiant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="van(n)"><f type="i">van</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vain-glorious(a)"><f type="i">vainglori&oacute;us</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vanish(v)"><f type="i">vanish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vanity(n)"><f type="i">vanitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vanquish(v)"><f type="i">vanquish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vantage(n)"><f type="i">vantage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vapour(n)"><f type="i">vapor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vary(v)"><f type="i">varie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="variety(n)"><f type="i">varietie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="varnish(n)"><f type="i">varnish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vaunt(n)"><f type="i">vaunt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vault(n)"><f type="i">vawt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vaulter(n)"><f type="i">vawter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vantguard(n)"><f type="i">vauntgard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="udder(n)"><f type="i">Vdder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="veal(n)"><f type="i">veal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vehement(a)"><f type="i">vehement</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vehemency(n)"><f type="i">vehemencie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="venom(n)"><f type="i">venim</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="venomous(a)"><f type="i">venimous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vengeance(n)"><f type="i">vengeance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="venison(n)"><f type="i">venison</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vent(n)"><f type="i">vent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="venture(n)"><f type="i">ventur</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="verdict(n)"><f type="i">verdit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vardingale(n)"><f type="i">verdingale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="very(adv)"><f type="i">verie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="verity(n)"><f type="i">veritie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="verily(adv)"><f type="i">verilie</form> <xpln></xpln></wordentry>
</page>

<page sig="ee2v" no="223">
<wordentry type="h"><form lexeme="vermin(n)"><f type="i">vermin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vermilion(n)"><f type="i">vermilion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="verse(n)"><f type="i">verse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="versify(v)"><f type="i">versify</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="virtue(n)"><f type="i">vertew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="virtuous(a)"><f type="i">vertewous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vessel(n)"><f type="i">vessell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vesture(n)"><f type="i">vesture</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vestry(n)"><f type="i">vestrie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vestiment(n)" lexeme="vestment(n)"><f type="i">vestiment 
vestment </form> <xpln><f type="r"><class type="contraction">Cont.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="vex(v)"><f type="i">vex</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vexation(n)"><f type="i">vexation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="voyage(n)"><f type="i">Viage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vice(n)"><f type="i">vice</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vicious(a)"><f type="i">vicious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="victory(n)"><f type="i">victorie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="victorious(a)"><f type="i">victorious</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vicar(n)"><f type="i">vicar</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vicarage(n)"><f type="i">vicarage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="viscount(n)"><f type="i">vicount</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="view(n)"><f type="i">view</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vile(a)"><f type="i">vile</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vility(n)"><f type="i">vilite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vileness(n)"><f type="i">vilenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="village(n)"><f type="i">village</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="villain(n)"><f type="i">villan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="villanous(a)"><f type="i">villanous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="villeinage(n)"><f type="i">villanage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vine(n)"><f type="i">vine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vinegar(n)"><f type="i">vineager</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vineyard(n)"><f type="i">vineyard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vintner(n)"><f type="i">vintner</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="violet(n)"><f type="i">violet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="violin(n)"><f type="i">violin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="violent(a)"><f type="i">violent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="violence(n)"><f type="i">violence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="virgin(n)"><f type="i">virgin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="virginity(n)"><f type="i">virginitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="virginals(n)"><f type="i">virginalls</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vizard(n)"><f type="i">visard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="visit(n)"><f type="i">visit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="visitation(n)"><f type="i">visitation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vision(n)"><f type="i">vision</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="victual(n)"><f type="i">vitail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="victualler(n)"><f type="i">vitalor 
vitler </form> <xpln><f type="r"><class type="contraction">Cont.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="umpire(n)"><f type="i">vmpier</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unadvised(a)"><f type="i">Vnaduised</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unadvisedly(adv)"><f type="i">vnaduisedlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unbend(n)"><f type="i">vnbend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unbent(a)"><f type="i">vnbent</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unbelief(n)"><f type="i">vnbelefe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unblamed(a)"><f type="i">vnblamed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unbuckle(n)"><f type="i">vnbucle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unburden(v)"><f type="i">vnburden</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unaccustomed(a)"><f type="i">vnaccustomed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unacquainted(a)"><f type="i">vnacquainted</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unarmed(a)"><f type="i">vnarmed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unburied(a)"><f type="i">vnburied</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unchaste(a)"><f type="i">vnchast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncle(n)"><f type="i">vncle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unclean(a)"><f type="i">vnclean</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncleanly(adv)"><f type="i">vnclenlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncleanness(n)"><f type="i">vncleanesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncleanliness(n)"><f type="i">vnclenlinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncurable(a)"><f type="i">vncurable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncouple(v)"><f type="i">vncuple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncover(v)"><f type="i">vncouer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncourteous(a)"><f type="i">vncurteous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uncouth(a)"><f type="i">vncouth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="underprop(n)"><f type="i">vnderprop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="underset(v)"><f type="i">vnderset</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="understand(v)"><f type="i">vnderstand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="under(pp)"><f type="i">vnder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="undertake(v)"><f type="i">vndertake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="undermine(v)"><f type="i">vndermine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="undiscreet(a)"><f type="i">vndiscrete</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unequal(a)" lexeme="inequality(n)"><f type="i">vnequall 
inequalitie </form> <xpln><f type="r"><class type="derivation">Der.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="uneth(a)"><f type="i">vneth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unfit(a)"><f type="i">vnfit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unfold(v)"><f type="i">vnfold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unfetter(v)"><f type="i">vnfetter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unfortunate(a)"><f type="i">vnfortunate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unfruitful(a)"><f type="i">vnfrutefull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ungentle(a)"><f type="i">vngentle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ungodly(a)"><f type="i">vngodlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ungentleness(n)"><f type="i">vngentlenesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unhorse(v)"><f type="i">vnhorse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unhonest(a)" lexeme="dishonest(a)"><f type="i">vnhonest 
dishonest </form> <xpln><f type="r"><class type="derivation">Deri.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="unhappy(a)"><f type="i">vnhappie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unhappiness(n)"><f type="i">vnhappinesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unhallow(v)"><f type="i">vnhallow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unknit(a)"><f type="i">vnknit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unknown(a)"><f type="i">vnknown</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unlawful(a)"><f type="i">vnlawfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unlearned(a)"><f type="i">vnlearned</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unlike(a)"><f type="i">vnlike</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="untwine(v)"><f type="i">vntwine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="untwist(v)"><f type="i">vntwist</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="untie(v)"><f type="i">vnty</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unlock(v)"><f type="i">vnlok</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unload(v)"><f type="i">vnlode</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unlucky(a)"><f type="i">vnlukkie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unlusty(a)"><f type="i">vnlustie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unmannerly(a)"><f type="i">vnmanerlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unmerciful(a)"><f type="i">vnmercifull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="union(n)"><f type="i">vnion</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unite(v)"><f type="i">vnite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unity(n)"><f type="i">vnitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="university(n)"><f type="i">vniuersitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="universal(a)"><f type="i">vneuersall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="universality(n)"><f type="i">vneuersalitie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unicorn(n)"><f type="i">vnicorn</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unsavoury(a)"><f type="i">vnsauerie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unperfect(a)"><f type="i">vnperfit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unprofitable(a)"><f type="i">vnprofitable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unsatiable(a)"><f type="i">vnsatiable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unrighteous(a)"><f type="i">vnrighteous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unsearchable(a)"><f type="i">vnsearchable</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unsteadfast(a)"><f type="i">vnstedfast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="until(c)" lexeme="untile(v)"><f type="i">vntill 
vntile </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="untiled(v)"><f type="i">vntild 
vntilde </form> <xpln><f type="r"><class type="derivation">Der.</class> 
<class type="contraction">Con.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="unwise(a)"><f type="i">vnwise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unwilling(a)"><f type="i">vnwilling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unwieldy(a)"><f type="i">vnwildie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unwitty(a)"><f type="i">vnwittie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="unwitting(a)"><f type="i"><emend err="vnwtiting">vnwitting</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vocation(n)"><f type="i">Vocation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vocative(n)"><f type="i">vocatiue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vomit(n)"><f type="i">vomit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="voluntary(a)"><f type="i">voluntarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="volume(n)"><f type="i">volum</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="voluptuous(a)"><f type="i">voluptuous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="voluptuary(n)"><f type="i">voluptuarie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="voluptuousness(n)"><f type="i">voluptuousnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vow(n)"><f type="i">vow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vouch(v)"><f type="i">vouch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vouchsafe(v)"><f type="i">vouchsafe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vowel(n)"><f type="i">vowell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="void(a)"><f type="i">voyd</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="voider(n)"><f type="i">voyder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="voidance(n)"><f type="i">voydance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="voice(n)"><f type="i">voyce</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="up(pp)"><f type="i">vp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="upbraid(v)"><f type="i">vpbraide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="upon(pp)"><f type="i">vpon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="upper(a)"><f type="i">vpper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="upmost(a)"><f type="i">vpmost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uppermost(a)"><f type="i">vppermost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uphold(v)"><f type="i">vphold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="upholster(v)"><f type="i">vpholster</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uproar(n)"><f type="i">vprore</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="us(pr)"><f type="i">vs</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="use(v)"><f type="i">vs&egrave; 
vs&eacute; </form> <xpln></xpln></wordentry>
</page>

<page sig="ee3r" no="224">
<wordentry type="h"><form lexeme="usury(n)"><f type="i">vsurie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="usual(a)"><f type="i">vsuall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="usher(n)"><f type="i">vsher</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="usurp(v)"><f type="i">vsurp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="usurpation(n)"><f type="i">vsurpation</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="usually(adv)"><f type="i">vsuallie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="utter(v)"><f type="i">vtter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="utterance(n)"><f type="i">vtterance</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="utterly(adv)"><f type="i">vtterlie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="utmost(a)"><f type="i">vtmost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="uttermost(a)"><f type="i">vttermost</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="vie(v)"><f type="i">Vy</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="w"><alpha>W</alpha>

<wordentry type="h"><form lexeme="wad(n)"><f type="i">Wad</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wade(v)"><f type="i">wade</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wadmal(n)"><f type="i">wadmoll</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wafer(n)"><f type="i">wafer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wag(n)"><f type="i">wag</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wages(n)"><f type="i">wages</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wager(n)"><f type="i">wager</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wagon(n)"><f type="i">wagon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wagtail(n)"><f type="i">wagtail</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="way(n)"><f type="i">waie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weight(n)"><f type="i">weight 
waight </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wayward(adv)"><f type="i">waiward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wayfaring(n)"><f type="i">waiefaring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wain(n)"><f type="i">wain</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wainman(n)"><f type="i">wainman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wait(n)"><f type="i">wait</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whale(n)"><f type="i">wale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wallow(v)"><f type="i">w&abreve;llow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wake(v)"><f type="i">wake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="waken(v)"><f type="i">waken</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="walk(n)"><f type="i">walk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wall(n)"><f type="i">wall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wallop(v)"><f type="i">wallop</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wallet(n)"><f type="i">wallot</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wan(a)"><f type="i">wan</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wane(v)"><f type="i">wane</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wander(v)"><f type="i">wander</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wandering(n)"><f type="i">wandring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wand(n)"><f type="i">wand</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="want(v)"><f type="i">want</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wanton(a)"><f type="i">wanton</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wantonness(n)"><f type="i">wantonnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warble(v)"><f type="i">warble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ward(n)"><f type="i">ward</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ward(n)"><f type="i">warde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wardenship(n)"><f type="i">wardenship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warrant(n)"><f type="i">warrant</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warranty(n)"><f type="i">warrantie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warden(n)"><f type="i">warden 
wardon </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wardrobe(n)"><f type="i">wardrobe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ware(v)"><f type="i">war</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ware(n)"><f type="i">ware</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warlike(a)"><f type="i">warlike</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warfare(n)"><f type="i">warfare</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warrious(a)"><f type="i">warrious</form> <xpln></xpln>
<lemenote>Only other OED citation: Mulcaster's <i>Positions</i> (1581)</lemenote></wordentry>

<wordentry type="h"><form lexeme="wary(a)"><f type="i">warie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warren(n)"><f type="i">waren</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warm(a)"><f type="i">warm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warmth(n)"><f type="i">warmth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="warmness(n)"><f type="i">warmnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wart(n)"><f type="i">wart</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="was(v)"><f type="i">was</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wast(v)"><f type="i">wast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="waste(n)"><f type="i">waste</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="waistcoat(n)"><f type="i">wastecote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wash(v)"><f type="i">wash</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="washt(a)"><f type="i">washt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wassail(n)"><f type="i">wassell</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wat(n)"><f type="i">wat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="water(n)"><f type="i">water</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="waterman(n)"><f type="i">waterman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wattle(n)"><f type="i">watle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wasp(n)"><f type="i">wasp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="waspish(a)"><f type="i">waspish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="watch(n)"><f type="i">watch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="watchman(n)"><f type="i">watchman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wave(n)"><f type="i">waue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wax(n)"><f type="i">wax</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="we(pr)"><f type="i">We</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weak(a)"><f type="i">weak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weal(n)"><f type="i">weal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weapon(n)"><f type="i">weapon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weary(a)"><f type="i">wearie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wear(v)"><f type="i">wear</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weather(n)"><f type="i">weather</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weave(v)"><f type="i">weaue</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weaver(n)"><f type="i">weauer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wet(a)"><f type="i">wet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wert(v)"><f type="i">wert</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="web(n)"><f type="i">web</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wed(a)"><f type="i">wed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wedge(n)"><f type="i">wedge</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Wednesday(n)"><f type="i">wedensdaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wean(v)"><f type="i">wein</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weanling(n)"><f type="i">weinlings</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weak(a)"><f type="i">weak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weal(n)"><f type="i">wele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="well(a)"><f type="i">well</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="welcome(n)"><f type="i">welcom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="welt(n)"><f type="i">welt</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="welkin(n)"><f type="i">welkin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="well-favored(n)"><f type="i">welfauord</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Welsh(n)"><f type="i">welsh</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wen(n)"><f type="i">wen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ween(v)"><f type="i">wene</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="went(v)"><f type="i">went</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wench(n)"><f type="i">wench</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wend(v)"><f type="i">wend</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weep(v)"><f type="i">wepe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wept(v)"><f type="i">wept</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="were(v)"><f type="i">were</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wert(v)"><f type="i">wert</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="west(n)"><f type="i">west</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weasel(n)"><f type="i">wesle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wet(a)"><f type="i">wet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wet-shod(n)"><f type="i">wetshod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weevil(n)"><f type="i">wev&ibreve;l</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wall(n)"><f type="i">whall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whale(n)"><f type="i">Whale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wharf(n)"><f type="i">wharf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wharfage(n)"><f type="i">wharfage</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="what(pr)"><f type="i">what</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weal(n)"><f type="i">wheal</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wheat(n)"><f type="i">wheat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wheel(n)"><f type="i">whele</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wheeler(n)"><f type="i">wheler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whelm(n)"><f type="i">whelm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whelp(n)"><f type="i">whelp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whence(adv)"><f type="i">whence</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="where(adv)"><f type="i">where</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wherefore(adv)"><f type="i">wherefor</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whereunto(adv)"><f type="i">whereunto</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wheresoever(adv)"><f type="i">wheresoeuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="weather(n)"><f type="i">wheather</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whet(v)"><f type="i">whet</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whetstone(n)"><f type="i">whetstone</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="which(pr)"><f type="i">which</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="while(n)"><f type="i">while</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whin(n)"><f type="i">whin</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whine(n)"><f type="i">whine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wince(v)"><f type="i">whinch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whip(n)"><f type="i">whip</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whirl(v)"><f type="i">whirle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whirlwind(n)"><f type="i">whirlewinde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whisk(n)"><f type="i">whisk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whistle(n)"><f type="i">whistle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whistle(n)"><f type="i">whisle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whisper(v)"><f type="i">whisper</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whister(v)"><f type="i">whister</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whit(n)"><f type="i">whit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="white(n)"><f type="i">white</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whiting(n)"><f type="i">whiting</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whither(adv)"><f type="i">whither</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whittle(n)"><f type="i">whitle</form> <xpln></xpln></wordentry>
</page>

<page sig="ee3v" no="225">
<wordentry type="h"><form lexeme="who(pr)"><f type="i">who</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whosoever(pr)"><f type="i">whosoeuer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whose(pr)"><f type="i">whose</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="how(adv)"><f type="i">whow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wid(v)"><f type="i">Wid</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wide(a)"><f type="i">wide</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wider(a)"><f type="i">wider</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="widower(n)"><f type="i">widoer</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="widow(n)"><f type="i">widow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="widowhood(n)"><f type="i">widowhood</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wissel(v)"><f type="i">wisle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wicked(a)"><f type="i">wikked</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wicker(n)"><f type="i">wikker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wife(n)" lexeme="wives(n)"><f type="i">wife 
wiues </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="withy(n)"><f type="i">withie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wicket(n)"><f type="i">wikket</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wild(a)"><f type="i">wilde 
wild </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wilding(n)"><f type="i">wilding</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wilderness(n)"><f type="i">wildernesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wild-fowl(n)"><f type="i">wildfoul</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wily(a)"><f type="i">wilie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wiliness(n)"><f type="i">wilienesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wilful(a)"><f type="i">wilfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wilfulness(n)"><f type="i">wilfulnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="will(v)"><f type="i">will</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="willow(n)"><f type="i">w&ibreve;llow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wig(n)"><f type="i">wig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wigeon(n)"><f type="i">wigeon</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wimble(n)"><f type="i">wimble</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wimple(n)"><f type="i">wimple</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="win(v)"><f type="i">win</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wine(n)"><f type="i">wine</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wine-cellar(n)"><f type="i">wineceller</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="window(n)"><f type="i">window</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="winnow(v)"><f type="i">winow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wind(n)"><f type="i">wind</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="winch(n)"><f type="i">winch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wing(n)"><f type="i">wing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wink(n)"><f type="i">wink</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="winter(n)"><f type="i">winter</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wipe(v)"><f type="i">wipe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wise(a)"><f type="i">wise</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wisdom(n)"><f type="i">wisedom</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wisp(n)"><f type="i">wisp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wisp(n)"><f type="i">wisp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wish(n)"><f type="i">wish</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wit(n)"><f type="i">wit</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="witch(n)"><f type="i">witch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="witty(a)"><f type="i">wittie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wite(n)"><f type="i">wite</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="with(pp)"><f type="i">with</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="withy(n)"><f type="i">withie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="whither(adv)"><f type="i">wither</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="witness(n)"><f type="i">witnesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="witless(a)"><f type="i">witlesse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wittol(n)"><f type="i">witall </form> <xpln><f type="r"><class type="contraction">Com.</class></xpln></wordentry>

<wordentry type="h"><form lexeme="woe(n)"><f type="i">Wo</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="womb(n)"><f type="i">womb</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wont(n)"><f type="i">wont</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="woman(n)"><f type="i">woman</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wonder(n)"><f type="i">wonder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wood(n)"><f type="i">wod</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="word(n)"><f type="i">word</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="world(n)"><f type="i">worlde</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worldling(n)"><f type="i">worldling</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="work(n)"><f type="i">work</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worm(n)"><f type="i">worm</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worn(a)"><f type="i">worne</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wort(n)"><f type="i">wort</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worse(a)"><f type="i">worse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worship(n)"><f type="i">worship</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worth(n)"><f type="i">worth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worthiness(n)"><f type="i"><emend err="worthiuesse">worthinesse</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worthy(a)"><f type="i">worthie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wolf(n)"><f type="i">wolf</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wound(n)"><f type="i">wound</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="worsted(n)"><f type="i">worsted</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="woo(v)"><f type="i">w&ograve;w</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wooed(a)"><f type="i">wowed</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wold(n)"><f type="i">wold</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wooer(n)"><f type="i">wower</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wote(v)"><f type="i">wote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wray(v)"><f type="i">Wraie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrat(n)"><f type="i">wrat</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrate(v)"><f type="i">wrate</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrangle(n)"><f type="i">wrangle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrangler(n)"><f type="i">wrangler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrack(n)"><f type="i">wrak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrake(n)"><f type="i">wrake</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrall(n)"><f type="i">wrall</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrap(n)"><f type="i">wrap</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrestle(v)"><f type="i">wrastle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrestler(n)"><f type="i">wrastler</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrathe(a)"><f type="i">wrathe</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wreak(v)"><f type="i">wreak</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wreath(n)"><f type="i">wreath</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wren(n)"><f type="i">wren</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrench(n)"><f type="i">wrench</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wret(v)"><f type="i">wret</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wretch(n)"><f type="i">wretch</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrig(n)"><f type="i">wrig</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wriggle(n)"><f type="i">wrigle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrestle(v)"><f type="i">wrisle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrinkle(n)"><f type="i">wrincle</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wring(n)"><f type="i">wring</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="write(v)"><f type="i">write</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="writ(n)"><f type="i">writ</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="written(a)"><f type="i">writen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="writing(n)"><f type="i">writing</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrong(a)"><f type="i">wrong</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrongfully(adv)"><f type="i">wrongfullie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrote(v)"><f type="i">wrote</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrought(v)"><f type="i"><emend err="wronght">wrought</emend></form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrout(v)"><f type="i">wrout</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wrung(n)"><f type="i">wrung</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wry(a)"><f type="i">wry</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="wool(n)"><f type="i">wull</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="x"><alpha>X</alpha>

<wordentry type="h"><form lexeme="Christmass(n)"><f type="i"><expan type="xp">Christ</expan>masse</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="Christian(n)"><f type="i"><expan type="xp">Christ</expan>ian</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="y"><alpha>Y</alpha>

<wordentry type="h"><form lexeme="yard(n)"><f type="i">Yard</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yawp(n)"><f type="i">yalp</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yarn(n)"><f type="i">yarne</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yarrow(n)"><f type="i">yarrow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yaw(n)"><f type="i">yaw</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yawn(n)"><f type="i">yaun</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="ye(pr)"><f type="i">Ye</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yea(ex)"><f type="i">yea</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="year(n)"><f type="i">year</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yeast(n)"><f type="i">yeast</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yellow(n)"><f type="i">yellow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yield(v)"><f type="i">yeild</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yolk(n)"><f type="i">yelk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yerk(n)"><f type="i">yirk</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yesterday(n)"><f type="i">yesterdaie</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yet(adv)"><f type="i">yet 
yit </form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yeoman(n)"><f type="i">yemen</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yew(n)"><f type="i">yew</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yex(n)"><f type="i">yex</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="York(pn)"><f type="i">yorke</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yonder(a)"><f type="i">yonder</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="young(a)"><f type="i">young</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="younker(n)"><f type="i">younker</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="you(pr)"><f type="i">yow</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="youth(n)"><f type="i">youth</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="youthful(a)"><f type="i">youthfull</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="yearly(a)"><f type="i">yearlie</form> <xpln></xpln></wordentry>
</wordgroup1>

<wordgroup1 type="a" object="z"><alpha>Z</alpha>

<wordentry type="h"><form lexeme="zealous(a)"><f type="i">Zelous</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="zeal(n)"><f type="i">zeale</form> <xpln></xpln></wordentry>

<wordentry type="h"><form lexeme="zealousness(n)"><f type="i">zealousnesse.</form> <xpln></xpln></wordentry>
</wordgroup1>

<closing>
<f type="r">FINIS.
</closing> 
</section>
</page>

<page sig="ee4r" no="226">
<section type="chapter 27">
<heading>
<f type="I">CAP XXVI.
The conclusion of this treatis concerning the right writing of
our English tung.<f type="r">

THis is that, which I had to saie concerning the right wri&shy;
ting of our English tung, both for the rules, which I haue 
obserued in dailie experience, and for the table, which I 
haue collected to confirm that experience. As for the right of 
my rules, I maie not take vpon me anie more certaintie, then 
the naturall force of such probable directions doth ordinarilie 
infer, which is to hold commonlie trew, and euer most likelie, 
from which probabilitie I wander not far, if my self maie be 
iudge. As for the table I sought in it, to write all the words ge&shy;
<emend err="ge"></emend>nerallie after an English ear, neuer yeilding much to anie 
foren letter sauing onelie where som pretie occasi<expan type="o+_">on</expan> rec<expan type="o+_">om</expan>m<expan type="e+_">en</expan>ded 
vnto me, the duble writing of both the naturall English & the 
incorporate str<expan type="a+_">an</expan>ger. And yet I haue dilig<expan type="e+_">en</expan>tlie examined the 
originall gro<expan type="u+_">un</expan>ds of our <f type="I">enfranchised</f type="r"> terms, which be one third 
part of our hole speche, tho I hold altogeather with our own 
writing, & follow not their primitiue. For if the word it self be 
english in dede, th<expan type="e+_">en</expan> is it best in the natural hew, if it be a str<expan type="a+_">an</expan>ger, 
& incorporate among vs, let it wear our colors, sith it wilbe one 
of vs. In both the rules & table, I haue rather sought, by such an 
inducti<expan type="o+_">on</expan> to stir vp som other to perform the enterprise, then ho&shy;
ped my self to leaue it c<expan type="o+_">om</expan>plet. For it maie so fall out, that I haue 
hit vpon som truth, tho not vp<expan type="o+_">on</expan> all, & again it maie so be, that I 
haue missed quite, & cut a wrong course, & yet by so doing, that 
I haue opened a waie vnto som other, by giuing such a light, 
either to amend my course if it like in part, or to shape a better 
by it, if it hollie mislike. Further, in both I haue bene verie care&shy;
full neuer to depart fr<expan type="o+_">om</expan> the <f type="i">custom<f type="r"> of my cuntrie, bycause I de&shy;
sire either to please with liking, or to mislike without displea&shy;
sing. For where ane ordinarie <f type="I">custom<f type="r"> doth seme of long time 
to haue made hir own choice, and that vpon good shew, she 
will either like him that cleaues to hir allowance, or not 
be displeased, where hir self is not misliked. And if there 
be anie hope to procure liking in such a thing as <f type="i">custom<f type="r"> is 
to rule, it must nedes com by following, and not by for&shy;
cing. He enforceth, which quite altereth the common cur&shy;
</page>

<page sig="ee4v" no="227">
rant allredie admitted in generall vse, both of ordinarie letter, 
and customarie writing, he foloweth, which marketh that 
waie wherein <f type="I">custom<f type="r"> is most conuersant, and pleaseth it self 
best vpon likeliest presumptions:and withall obserueth where&shy;
in anie error intruding vpon <f type="I">custom<f type="r">, by ignorant hands, maie be 
easilie stript, and yet <f type="I">custom<f type="r"> left clean to hir allowed direction. 
This following of <f type="I">custom<f type="r">, with considerate obseruing is a case 
of great hope, that the thing maie like, which is so laid down, 
bycause in like attempts it hath allwaie taken place, and be&shy;
wraid hir successe by winning hir desire. Enforcing to the con&shy;
trarie, or altering to far is almost desperate, if not altogither, 
bycause it hath alwaie mist, with losse of labor where it offered 
seruice. What my self haue won, by desiring to follow the cu&shy;
stom of my cuntrie, & no where to enforce it, it must appear in 
time, which while it do, I must craue relefe of curteous constru&shy;
ction, & submit my self to iudgem<expan type="e+_">en</expan>t of those which can discern.
</section>
</page>
</leme>
